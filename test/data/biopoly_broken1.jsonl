{"lens_id":"038-066-141-127-891","jurisdiction":"CN","doc_number":"102206141","kind":"A","date_published":"2011-10-05","doc_key":"CN_102206141_A_20111005","docdb_id":340828107,"lang":"zh","biblio":{"publication_reference":{"jurisdiction":"CN","doc_number":"102206141","kind":"A","date":"2011-10-05"},"application_reference":{"jurisdiction":"CN","doc_number":"201110089928","kind":"A","date":"2011-04-11"},"priority_claims":{"claims":[{"jurisdiction":"CN","doc_number":"201110089928","kind":"A","date":"2011-04-11","sequence":1}],"earliest_claim":{"date":"2011-04-11"}},"invention_title":[{"text":"Molecular distillation separation method of bio-oil","lang":"en"}],"parties":{"applicants":[{"extracted_name":{"value":"UNIV ZHEJIANG"}}],"inventors":[{"sequence":1,"extracted_name":{"value":"SHURONG WANG"}},{"sequence":2,"extracted_name":{"value":"ZHONGYANG LUO"}},{"sequence":3,"extracted_name":{"value":"CHUNJIANG YU"}},{"sequence":4,"extracted_name":{"value":"JINSONG ZHOU"}},{"sequence":5,"extracted_name":{"value":"MINGJIANG NI"}},{"sequence":6,"extracted_name":{"value":"KEFA CEN"}}]},"classifications_ipcr":{"classifications":[{"symbol":"C07C39/04"},{"symbol":"C07C29/80"},{"symbol":"C07C31/26"},{"symbol":"C07C37/74"},{"symbol":"C07C45/82"},{"symbol":"C07C49/17"},{"symbol":"C07C49/597"},{"symbol":"C07C51/44"},{"symbol":"C07C53/08"},{"symbol":"C07C53/122"},{"symbol":"C07D307/50"},{"symbol":"C08B37/02"}]},"references_cited":{"citations":[{"sequence":1,"patcit":{"document_id":{"jurisdiction":"CN","doc_number":"101829578","kind":"A","date":"2010-09-15"},"lens_id":"029-385-113-284-728"},"cited_phase":"SEA"},{"sequence":2,"patcit":{"document_id":{"jurisdiction":"CN","doc_number":"1869163","kind":"A","date":"2006-11-29"},"lens_id":"023-986-843-452-864"},"cited_phase":"SEA"},{"sequence":3,"patcit":{"document_id":{"jurisdiction":"CN","doc_number":"101693855","kind":"A","date":"2010-04-14"},"lens_id":"151-460-075-148-978"},"cited_phase":"SEA"},{"sequence":4,"nplcit":{"text":"GUO XIUJUAN ET AL.: \"Properties of Bio-oil from Fast Pyrolysis of Rice Husk\", 《CHINESE JOURNAL OF CHEMICAL ENGINEERING》","lens_id":"122-047-960-484-789","external_ids":["10.1016/s1004-9541(09)60186-5"]},"cited_phase":"SEA"}],"npl_resolved_count":1,"npl_count":1,"patent_count":3},"cited_by":{"patents":[{"document_id":{"jurisdiction":"CN","doc_number":"112713005","kind":"A"},"lens_id":"066-232-007-410-588"},{"document_id":{"jurisdiction":"CN","doc_number":"112209964","kind":"A"},"lens_id":"060-809-865-677-92X"},{"document_id":{"jurisdiction":"CN","doc_number":"107335246","kind":"A"},"lens_id":"009-865-997-741-804"},{"document_id":{"jurisdiction":"CN","doc_number":"105753654","kind":"A"},"lens_id":"116-148-134-292-596"},{"document_id":{"jurisdiction":"CN","doc_number":"104152175","kind":"A"},"lens_id":"192-789-115-714-219"}],"patent_count":5}},"families":{"simple_family":{"members":[{"document_id":{"jurisdiction":"CN","doc_number":"102206141","kind":"B","date":"2013-09-25"},"lens_id":"150-275-199-424-371"},{"document_id":{"jurisdiction":"CN","doc_number":"102206141","kind":"A","date":"2011-10-05"},"lens_id":"038-066-141-127-891"}],"size":2},"extended_family":{"members":[{"document_id":{"jurisdiction":"CN","doc_number":"102206141","kind":"B","date":"2013-09-25"},"lens_id":"150-275-199-424-371"},{"document_id":{"jurisdiction":"CN","doc_number":"102206141","kind":"A","date":"2011-10-05"},"lens_id":"038-066-141-127-891"}],"size":2}},"legal_status":{"granted":true,"grant_date":"2013-09-25","anticipated_term_date":"2031-04-11","calculation_log":["Application Filing Date: 2011-04-11","Granted Date: 2013-09-25","Anticipated Termination Date: 2031-04-11"],"patent_status":"ACTIVE"},"abstract":[{"text":"The invention discloses a molecular distillation separation method of bio-oil. The method comprises the following steps of 1, carrying out a pretreatment of separating water from particles on crude bio-oil to obtain pretreated bio-oil, 2, carrying out a distillation separation process on the pretreated bio-oil at a distillation temperature of normal temperature to 200 DEG C under a distillation pressure of 10 Pa to 1800 Pa to obtain a bio-oil fraction, and 3, carrying out molecular distillation separation processes more than once at a distillation temperature of normal temperature to 200 DEG C under a distillation pressure of 10 Pa to 1800 Pa to extract carboxylic acids, aldehydes, alcohols, phenols, or carbohydrate compounds from the bio-oil fraction. In the invention, a molecular distillation separation technology is introduced into the field of heat-sensitive bio-oil separation and solves the problem of quality decline and coking of bio-oil in a separating process, and bio-oil fractions with different characteristics and chemical products with multiple high added values can be produced through the molecular distillation separation technology.","lang":"en"}],"publication_type":"PATENT_APPLICATION"}
{"lens_id":"063-074-729-328-420","jurisdiction":"CN","doc_number":"111100454","kind":"A","date_published":"2020-05-05","doc_key":"CN_111100454_A_20200505","docdb_id":530506731,"lang":"zh","biblio":{"publication_reference":{"jurisdiction":"CN","doc_number":"111100454","kind":"A","date":"2020-05-05"},"application_reference":{"jurisdiction":"CN","doc_number":"201911342408","kind":"A","date":"2019-12-23"},"priority_claims":{"claims":[{"jurisdiction":"CN","doc_number":"201911342408","kind":"A","date":"2019-12-23","sequence":1}],"earliest_claim":{"date":"2019-12-23"}},"invention_title":[{"text":"Low-dielectric high-strength glass fiber reinforced bio-based PA material and preparation method thereof","lang":"en"},{"text":"一种低介电高强度玻纤增强生物基PA材料及其制备方法","lang":"zh"}],"parties":{"applicants":[{"extracted_name":{"value":"SHANGHAI PRET BANTAI MATERIAL TECH CO LTD"}},{"extracted_name":{"value":"SHANGHAI BANTAI ENTERPRISE DEVELOPMENT CENTER LP"}},{"extracted_name":{"value":"SHANGHAI PRET COMPOSITES CO"}},{"extracted_name":{"value":"ZHEJIANG PRET NEW MAT CO LTD"}}],"inventors":[{"sequence":1,"extracted_name":{"value":"LI JIE"}},{"sequence":2,"extracted_name":{"value":"XIAO HAO"}},{"sequence":3,"extracted_name":{"value":"ZHOU LIANGXIAO"}},{"sequence":4,"extracted_name":{"value":"CAI QING"}},{"sequence":5,"extracted_name":{"value":"ZHOU WEN"}}]},"classifications_ipcr":{"classifications":[{"symbol":"C08L77/06"},{"symbol":"C08J5/04"},{"symbol":"C08K7/14"},{"symbol":"C08K7/28"},{"symbol":"C08K13/04"},{"symbol":"C08L77/02"}]},"classifications_cpc":{"classifications":[{"symbol":"C08J5/043"},{"symbol":"C08J2377/06"},{"symbol":"C08J2377/02"},{"symbol":"C08K2201/003"},{"symbol":"C08K13/04"},{"symbol":"C08K7/14"},{"symbol":"C08K7/28"}]},"references_cited":{"citations":[{"sequence":1,"patcit":{"document_id":{"jurisdiction":"CN","doc_number":"108219288","kind":"A","date":"2018-06-29"},"lens_id":"141-226-401-816-073"},"cited_phase":"SEA"},{"sequence":2,"patcit":{"document_id":{"jurisdiction":"CN","doc_number":"108239395","kind":"A","date":"2018-07-03"},"lens_id":"103-136-493-415-228"},"cited_phase":"SEA"},{"sequence":3,"patcit":{"document_id":{"jurisdiction":"CN","doc_number":"108250751","kind":"A","date":"2018-07-06"},"lens_id":"124-973-832-635-541"},"cited_phase":"SEA"},{"sequence":4,"patcit":{"document_id":{"jurisdiction":"CN","doc_number":"109705577","kind":"A","date":"2019-05-03"},"lens_id":"155-780-244-338-026"},"cited_phase":"SEA"},{"sequence":5,"patcit":{"document_id":{"jurisdiction":"EP","doc_number":"3560987","kind":"A1","date":"2019-10-30"},"lens_id":"012-396-140-338-601"},"cited_phase":"SEA"},{"sequence":6,"nplcit":{"text":"张东兴 黄龙男: \"《聚合物基复合材料科学与工程》\", 31 July 2018, 哈尔滨工业大学出版社"},"cited_phase":"SEA"}],"npl_count":1,"patent_count":5},"cited_by":{"patents":[{"document_id":{"jurisdiction":"CN","doc_number":"112500640","kind":"A"},"lens_id":"147-334-251-494-772"},{"document_id":{"jurisdiction":"CN","doc_number":"112143232","kind":"A"},"lens_id":"192-571-527-777-206"}],"patent_count":2}},"families":{"simple_family":{"members":[{"document_id":{"jurisdiction":"CN","doc_number":"111100454","kind":"A","date":"2020-05-05"},"lens_id":"063-074-729-328-420"}],"size":1},"extended_family":{"members":[{"document_id":{"jurisdiction":"CN","doc_number":"111100454","kind":"A","date":"2020-05-05"},"lens_id":"063-074-729-328-420"}],"size":1}},"legal_status":{"calculation_log":["Application Filing Date: 2019-12-23"],"patent_status":"PENDING"},"abstract":[{"text":"The invention discloses a low-dielectric high-strength glass fiber reinforced bio-based PA material and a preparation method thereof. The low-dielectric high-strength glass fiber reinforced bio-basedPA material is prepared from the following raw materials in parts by weight: 20-80 parts of bio-based PA, 10-60 parts of glass fibers, 1-20 parts of hollow glass beads, 0.1-0.5 parts of a coupling agent, 0.1-0.5 parts of a lubricating agent, and 0.1-0.5 parts of an antioxidant. According to the low-dielectric high-strength glass fiber reinforced bio-based PA material disclosed by the invention, renewable bio-based PA is used as a raw material, and the low-dielectric glass fibers and the hollow glass beads are used for reinforcement and modification, so that the material has good mechanical properties and a very low dielectric constant, and can meet the increasingly developed requirements of information transmission equipment.","lang":"en"},{"text":"本发明公开了一种低介电高强度玻纤增强生物基PA材料及其制备方法，由以下按重量份数计的原料组成：生物基PA：20‑80份；玻璃纤维：10‑60份；空心玻璃微珠：1‑20份；偶联剂：0.1‑0.5份；润滑剂：0.1‑0.5份；抗氧剂：0.1‑0.5份。本发明的低介电高强度玻纤增强生物基PA材料,以可再生生物基PA为原材料，低介电玻璃纤维和空心玻璃微珠增强改性，材料兼具良好的机械性能，很低的介电常数，可以满足日益发展的信息传输设备需求。","lang":"zh"}],"publication_type":"PATENT_APPLICATION"}
{"lens_id":"130-527-191-432-660","jurisdiction":"US","doc_number":"20160266975","kind":"A1","date_published":"2016-09-15","doc_key":"US_20160266975_A1_20160915","docdb_id":469398411,"lang":"en","biblio":{"publication_reference":{"jurisdiction":"US","doc_number":"20160266975","kind":"A1","date":"2016-09-15"},"application_reference":{"jurisdiction":"US","doc_number":"201514863446","kind":"A","date":"2015-09-23"},"priority_claims":{"claims":[{"jurisdiction":"US","doc_number":"201514863446","kind":"A","date":"2015-09-23","sequence":1},{"jurisdiction":"US","doc_number":"201562130600","kind":"P","date":"2015-03-09","sequence":2}],"earliest_claim":{"date":"2015-03-09"}},"invention_title":[{"text":"MEMORY DEVICES AND MODULES","lang":"en"}],"parties":{"applicants":[{"residence":"KR","extracted_name":{"value":"SAMSUNG ELECTRONICS CO LTD"}}],"inventors":[{"residence":"US","sequence":1,"extracted_name":{"value":"HU CHAOHONG"}},{"residence":"US","sequence":2,"extracted_name":{"value":"ZHENG HONGZHONG"}},{"residence":"US","sequence":3,"extracted_name":{"value":"NIU DIMIN"}}],"owners_all":[{"recorded_date":"2015-11-01","execution_date":"2015-09-21","extracted_name":{"value":"SAMSUNG ELECTRONICS CO. LTD"},"extracted_address":"129, SAMSUNG-RO, YEONGTONG-GU, SUWON-SI, GYEONGGI-DO, 443-742","extracted_country":"KR"}]},"classifications_ipcr":{"classifications":[{"symbol":"G06F11/10"},{"symbol":"G06F3/06"},{"symbol":"G06F12/10"}]},"classifications_cpc":{"classifications":[{"symbol":"G06F11/1048"},{"symbol":"G06F12/0246"},{"symbol":"G06F12/0607"},{"symbol":"G06F2212/7201"},{"symbol":"G06F2212/65"},{"symbol":"G06F2212/1016"},{"symbol":"G06F2212/1032"},{"symbol":"G06F12/1009"},{"symbol":"G06F2212/65"},{"symbol":"G06F2212/1016"},{"symbol":"G06F2212/1032"},{"symbol":"G06F11/1048"},{"symbol":"G06F12/0246"},{"symbol":"G06F2212/7201"},{"symbol":"G06F12/0607"}]},"references_cited":{"citations":[{"sequence":1,"patcit":{"document_id":{"jurisdiction":"US","doc_number":"9544976","kind":"B2","date":"2017-01-10"},"lens_id":"094-203-954-508-21X"},"cited_phase":"PRS"},{"sequence":2,"patcit":{"document_id":{"jurisdiction":"US","doc_number":"4570217","kind":"A","date":"1986-02-11"},"lens_id":"120-225-703-215-322"},"cited_phase":"PRS"},{"sequence":3,"patcit":{"document_id":{"jurisdiction":"US","doc_number":"2015168156","kind":"A1","date":"2015-06-18"},"lens_id":"034-771-285-567-958"},"cited_phase":"PRS"},{"sequence":4,"patcit":{"document_id":{"jurisdiction":"US","doc_number":"2003123389","kind":"A1","date":"2003-07-03"},"lens_id":"040-357-076-110-445"},"cited_phase":"PRS"},{"sequence":5,"patcit":{"document_id":{"jurisdiction":"US","doc_number":"6681284","kind":"B1","date":"2004-01-20"},"lens_id":"046-340-426-581-94X"},"cited_phase":"PRS"}],"patent_count":5},"cited_by":{"patents":[{"document_id":{"jurisdiction":"US","doc_number":"10614905","kind":"B2"},"lens_id":"114-235-958-090-295"},{"document_id":{"jurisdiction":"CN","doc_number":"108763005","kind":"A"},"lens_id":"026-329-857-727-469"},{"document_id":{"jurisdiction":"US","doc_number":"11093393","kind":"B2"},"lens_id":"122-671-836-448-405"},{"document_id":{"jurisdiction":"US","doc_number":"11062203","kind":"B2"},"lens_id":"060-522-214-311-74X"}],"patent_count":4}},"families":{"simple_family":{"members":[{"document_id":{"jurisdiction":"US","doc_number":"9785570","kind":"B2","date":"2017-10-10"},"lens_id":"107-346-974-694-812"},{"document_id":{"jurisdiction":"KR","doc_number":"20160110148","kind":"A","date":"2016-09-21"},"lens_id":"013-051-366-465-278"},{"document_id":{"jurisdiction":"KR","doc_number":"102262575","kind":"B1","date":"2021-06-09"},"lens_id":"022-675-025-368-981"},{"document_id":{"jurisdiction":"US","doc_number":"20160266975","kind":"A1","date":"2016-09-15"},"lens_id":"130-527-191-432-660"}],"size":4},"extended_family":{"members":[{"document_id":{"jurisdiction":"US","doc_number":"9785570","kind":"B2","date":"2017-10-10"},"lens_id":"107-346-974-694-812"},{"document_id":{"jurisdiction":"KR","doc_number":"20160110148","kind":"A","date":"2016-09-21"},"lens_id":"013-051-366-465-278"},{"document_id":{"jurisdiction":"KR","doc_number":"102262575","kind":"B1","date":"2021-06-09"},"lens_id":"022-675-025-368-981"},{"document_id":{"jurisdiction":"US","doc_number":"20160266975","kind":"A1","date":"2016-09-15"},"lens_id":"130-527-191-432-660"}],"size":4}},"legal_status":{"granted":true,"grant_date":"2017-10-10","anticipated_term_date":"2035-09-23","calculation_log":["Application Filing Date: 2015-09-23","Granted Date: 2017-10-10","Anticipated Termination Date: 2035-09-23"],"patent_status":"ACTIVE"},"abstract":[{"text":"An embodiment includes a system, comprising: an Error Correcting Code (ECC) memory comprising a plurality of memory locations, each memory location corresponding to a device address of the ECC memory; a system management bus (SMB); a baseboard management controller (BMC) coupled to the ECC memory through the SMB; and an operating system comprising a driver module coupled to the BMC through the SMB, the driver module being configured to receive through the Memory device address information associated with the ECC memory and to convert the device address information into physical address information independent of an ECC memory controller.","lang":"en"}],"claims":[{"claims":[{"claim_text":["1 . A driver module for an operating system, comprising: an interface configured to receive from a system management bus (SMB) device address information associated with an Error Correcting Code (ECC) memory, the ECC memory comprising a plurality of memory locations, each memory location corresponding to a device address of the ECC memory; and an address converter configured to convert the device address information into physical address information independent of an ECC memory controller."]},{"claim_text":["2 . The driver module according to claim 1 , further comprising a device address to physical address (DA-to-PA) conversion table with which the address converter converts the device address information into physical address information."]},{"claim_text":["3 . The driver module according to claim 2 , wherein the DA-to-PA conversion table is based on configuration information for a processing device associated with the operating system and configuration information for a Basic Input/Output System (BIOS) associated with the operating system."]},{"claim_text":["4 . The driver module according to claim 3 , wherein the DA-to-PA conversion table is received by the driver module from a shell script received from the BIOS during initialization of the driver module."]},{"claim_text":["5 . The driver module according to claim 4 , wherein DA-to-PA conversion table is hard coded into the BIOS."]},{"claim_text":["6 . The driver module according to claim 1 , wherein the ECC memory comprises a Single-Error Correcting, Double-Error Detection (SECDED) ECC memory, a single-chip Chipkill ECC memory or a double-chip Chipkill ECC memory."]},{"claim_text":["7 . The driver module according to claim 1 , wherein the ECC memory operates in a single channel/dual asymmetric mode or a dual channel symmetric mode."]},{"claim_text":["8 . A driver module for an operating system, comprising: an interface configured to receive from a baseboard management controller (BMC) device address information associated with an Error Correcting Code (ECC) memory, the ECC memory comprising a plurality of memory locations, each memory location corresponding to a device address of the ECC memory; and an address converter configured to convert the device address information into physical address information independent of an ECC memory controller, the driver module sending the physical address information of a converted device address to a kernel of the operating system."]},{"claim_text":["9 . The driver module according to claim 8 , further comprising a device address to physical address (DA-to-PA) conversion table that the address converter uses to convert the device address information associated with the ECC memory into physical address information."]},{"claim_text":["10 . The driver module according to claim 9 , wherein the DA-to-PA conversion table is based at least in part on configuration information for a Basic Input/Output System (BIOS) associated with the operating system."]},{"claim_text":["11 . The driver module according to claim 10 , wherein the DA-to-PA conversion table is received by the driver module from a shell script received from the BIOS during initialization of the driver module."]},{"claim_text":["12 . The driver module according to claim 10 , wherein the DA-to-PA conversion table is hard coded into the BIOS."]},{"claim_text":["13 . The driver module according to claim 8 , wherein the ECC memory comprises a Single-Error Correcting, Double-Error Detection (SECDED) ECC memory, a single-chip Chipkill ECC memory or a double-chip Chipkill ECC memory."]},{"claim_text":["14 . The driver module according to claim 8 , wherein the ECC memory operates in a single channel/dual asymmetric mode or a dual channel symmetric mode."]},{"claim_text":["15 . A method to convert devices addresses to physical addresses in a memory system, the method comprising: receiving at a driver module of an operation system kernel device address information for an Error Correction Code (ECC) memory from a system management bus (SMB), the ECC memory comprising a plurality of memory locations, and each memory location corresponding to a device address of the ECC memory; converting at the driver module the device address information into physical address information; and sending the physical address information to the operating system kernel."]},{"claim_text":["16 . The method according to claim 15 , wherein the driver module comprises a device address to physical address (DA-to-PA) conversion table, and wherein converting the device address information into physical address information comprises reading the physical address information from the DA-to-PA conversion table for the received device address information."]},{"claim_text":["17 . The method according to claim 16 , further comprising receiving the DA-to-PA conversion table by the driver module from a shell script received from the BIOS during initialization of the driver module."]},{"claim_text":["18 . The method according to claim 17 , wherein DA-to-PA conversion table is hard coded into the BIOS."]},{"claim_text":["19 . The method according to claim 15 , wherein the ECC memory comprises a Single-Error Correcting, Double-Error Detection (SECDED) ECC memory, a single-chip Chipkill ECC memory or a double-chip Chipkill ECC memory."]},{"claim_text":["20 . The method according to claim 15 , wherein the ECC memory operates in a single channel/dual asymmetric mode or a dual channel symmetric mode"]}],"lang":"en"}],"description":{"text":"CROSS-REFERENCE TO RELATED APPLICATIONS This application claims the benefit of U.S. Provisional Patent Application No. 62/130,600, filed Mar. 9, 2015, the contents of which are hereby incorporated by reference herein, in their entirety, for all purposes. BACKGROUND This disclosure relates to memory system architectures and, in particular, memory system architectures with error correction. Memory controllers may be configured to perform error correction. For example, a memory controller may read 72 bits of data from a memory module in which 64 bits are data and 8 bits are parity. The memory controller may perform other error correction techniques. Using such techniques, some errors in data read from the memory module may be identified and/or corrected. In addition, the memory controller may make information related to the errors available. A system including the memory controller may make operational decisions based on the error information, such as retiring a memory page, halting the system, or the like. Such a memory controller may be integrated with a processor. For example, INTEL XEON processors may include an integrated memory controller configured to perform error correction. If, however, error correction is performed before data is received by the memory controller, the error information related to the correction may not be available in the memory controller and hence, not available to the system for system management decisions. SUMMARY An embodiment includes a driver module for an operating system, comprising: an interface configured to receive from a system management bus (SMB) device address information associated with an Error Correcting Code (ECC) memory, the ECC memory comprising a plurality of memory locations, each memory location corresponding to a device address of the ECC memory; and an address converter configured to convert the device address information into physical address information independent of an ECC memory controller. One exemplary embodiment comprises a device address to physical address (DA-to-PA) conversion table with which the address converter converts the device address information into physical address information. In yet another exemplary embodiment, the DA-to-PA conversion table is based on configuration information for a processing device associated with the operating system and configuration information for a Basic Input/Output System (BIOS) associated with the operating system. One exemplary embodiment provides that the ECC memory comprises a Single-Error Correcting, Double-Error Detection (SECDED) ECC memory, a single-chip Chipkill ECC memory or a double-chip Chipkill ECC memory. Another exemplary embodiment provides that the ECC memory operates in a single channel/dual asymmetric mode or a dual channel symmetric mode. Another embodiment includes a driver module for an operating system, comprising: an interface configured to receive from a baseboard management controller (BMC) device address information associated with an Error Correcting Code (ECC) memory, the ECC memory comprising a plurality of memory locations, each memory location corresponding to a device address of the ECC memory; an address converter configured to convert the device address information into physical address information independent of an ECC memory controller, the driver module sending the physical address information of a converted device address to a kernel of the operating system. In one exemplary embodiment, the address converter uses a device address to physical address (DA-to-PA) conversion table to convert the device address information associated with the ECC memory into physical address information. One exemplary embodiment provides that the ECC memory comprises a Single-Error Correcting, Double-Error Detection (SECDED) ECC memory, a single-chip Chipkill ECC memory or a double-chip Chipkill ECC memory. Another exemplary embodiment provides that the ECC memory operates in a single channel/dual asymmetric mode or a dual channel symmetric mode. Another embodiment includes a method to convert devices addresses to physical addresses in a memory system in which the method comprises: receiving at a driver module of an operation system kernel device address information for an Error Correction Code (ECC) memory from a system management bus (SMB), the ECC memory comprising a plurality of memory locations, and each memory location corresponding to a device address of the ECC memory; converting at the driver module the device address information into physical address information; and sending the physical address information to the operating system kernel. In one exemplary embodiment, the driver module comprises a device address to physical address (DA-to-PA) conversion table, and converting the device address information into physical address information comprises reading the physical address information from the DA-to-PA conversion table for the received device address information. One exemplary embodiment provides that the ECC memory comprises a Single-Error Correcting, Double-Error Detection (SECDED) ECC memory, a single-chip Chipkill ECC memory or a double-chip Chipkill ECC memory. Another exemplary embodiment provides that the ECC memory operates in a single channel/dual asymmetric mode or a dual channel symmetric mode. BRIEF DESCRIPTION OF SEVERAL VIEWS OF THE DRAWINGS FIG. 1 is a schematic view of a system with a memory system architecture according to an embodiment. FIG. 2 is a schematic view of a system with a memory system architecture including a controller according to an embodiment. FIG. 3 is a schematic view of a system with a memory system architecture including a baseboard management controller according to an embodiment. FIG. 4 is a schematic view of a system with a memory system architecture without processor-based error correction according to an embodiment. FIG. 5 is a schematic view of a system with a memory system architecture with a poisoned data strobe signal according to an embodiment. FIG. 6 is a schematic view of a system with a memory system architecture with a separate uncorrectable error signal according to an embodiment. FIG. 7 is a schematic view of a system with a memory system architecture with a software module according to an embodiment. FIG. 8 is a schematic view of a system with a memory system architecture with an error detection and correction module according to an embodiment. FIG. 9 is a schematic view of a system with a memory system architecture with an aggregating module according to an embodiment. FIG. 10 is a schematic view of a system with a memory system architecture with an error correction module that aggregates information from a memory control architecture module according to an embodiment. FIG. 11 is a schematic view of a system with a memory system architecture with multiple modules sharing an interface, according to an embodiment. FIG. 12 is a schematic view of a system with a memory system architecture with a correctable error module and a serial presence detect/registering clock driver module sharing an interface according to an embodiment. FIG. 13 is a schematic view of a system with a memory system architecture with in-DRAM error correction according to an embodiment. FIGS. 14A-D are schematic views of systems with a memory system architecture with in-module error correction according to some embodiments. FIG. 15 is a schematic view of a memory module according to an embodiment. FIG. 16 is a schematic view of a memory module with an SPD or RCD interface according to an embodiment. FIG. 17 is a schematic view of a memory module with a separate uncorrectable error interface according to an embodiment. FIG. 18 is a schematic view of a memory device according to an embodiment. FIG. 19 is a schematic view of a memory device according to another embodiment. FIG. 20 is a schematic view of a memory module including memory devices according to an embodiment. FIGS. 21-23 are schematic views of memory modules according to various embodiments. FIGS. 24-26 are schematic views of portions of memory modules according to various embodiments. FIG. 27 is a schematic view of a memory module according to another embodiment. FIG. 28 is a schematic view of a system with a memory system architecture with in-DRAM error correction and that provides device address (DA) to physical address (PA) conversion according to an embodiment. FIG. 29 is a flowchart 2900 of a technique of generating DA-to-PA conversion information for a non-XOR mapping configuration according to an embodiment. FIG. 30A depicts the type of address conversion information that is stored for each DA address when DA(j) is determined to be true for a memory 2802 operating in a single channel/dual asymmetric mode according to an embodiment. FIG. 30B depicts the type of address conversion information that is stored for each DA address when DA(j) is determined to be true for a memory 2802 operating in a dual channel symmetric mode according to an embodiment. FIG. 31 is a flowchart 3100 of a technique of generating DA-to-PA conversion information for an XOR mapping configuration according to an embodiment. FIG. 32 depicts the type of address conversion information that is stored for each DA address when DA(k) is determined to be true for a memory system having an XOR mapping configuration according to an embodiment. FIG. 33 is a schematic view of a system with a memory system architecture according to an embodiment. FIG. 34 is a schematic view of a server according to an embodiment. FIG. 35 is a schematic view of a server system according to an embodiment. FIG. 36 is a schematic view of a data center according to an embodiment. DETAILED DESCRIPTION The embodiments relate to memory system architectures. The following description is presented to enable one of ordinary skill in the art to make and use the embodiments and is provided in the context of a patent application and its requirements. Various modifications to the embodiments and the generic principles and features described herein will be readily apparent. The embodiments are mainly described in terms of particular methods and systems provided in particular implementations. The methods and systems, however, will operate effectively in other implementations. Phrases such as “an embodiment,” “one embodiment” and “another embodiment” may refer to the same or different embodiments as well as to multiple embodiments. The embodiments will be described with respect to systems and/or devices having certain components. The systems and/or devices, however, may include more or less components than those shown, and variations in the arrangement and type of the components may be made without departing from the scope of this disclosure. The embodiments will also be described in the context of particular methods having certain steps. The method and system, however, operate according to other methods having different and/or additional steps and steps in different orders that are not inconsistent with the embodiments. Thus, embodiments are not intended to be limited to the particular embodiments shown, but are to be accorded the widest scope consistent with the principles and features described herein. The embodiments are described in the context of particular memory system architecture having certain components. One of ordinary skill in the art will readily recognize that embodiments are consistent with the use of memory system architectures having other and/or additional components and/or other features. One of ordinary skill in the art, however, will readily recognize that the method and system are consistent with other structures. Methods and systems may also be described in the context of single elements. One of ordinary skill in the art, however, will readily recognize that the methods and systems are consistent with the use of memory system architectures having multiple elements. It will be understood by those skilled in the art that, in general, terms used herein, and especially in the appended claims (e.g., bodies of the appended claims) are generally intended as “open” terms (e.g., the term “including” should be interpreted as “including, but not limited to,” the term “having” should be interpreted as “having at least,” the term “includes” should be interpreted as “includes but is not limited to,” etc.). It will be further understood by those within the art that if a specific number of an introduced claim recitation is intended, such an intent will be explicitly recited in the claim, and in the absence of such recitation no such intent is present. For example, as an aid to understanding, the following appended claims may contain usage of the introductory phrases “at least one” and “one or more” to introduce claim recitations. The use of such phrases, however, should not be construed to imply that the introduction of a claim recitation by the indefinite articles “a” or “an” limits any particular claim containing such introduced claim recitation to examples containing only one such recitation, even when the same claim includes the introductory phrases “one or more” or “at least one” and indefinite articles such as “a” or “an” (e.g., “a” and/or “an” should be interpreted to mean “at least one” or “one or more”); the same holds true for the use of definite articles used to introduce claim recitations. Furthermore, in those instances where a convention analogous to “at least one of A, B, or C, etc.” is used, in general such a construction is intended in the sense one having skill in the art would understand the convention (e.g., “a system having at least one of A, B, or C” would include, but not be limited to systems that have A alone, B alone, C alone, A and B together, A and C together, B and C together, and/or A, B, and C together, etc.). It will be further understood by those within the art that virtually any disjunctive word and/or phrase presenting two or more alternative terms, whether in the description, claims, or drawings, should be understood to contemplate the possibilities of including one of the terms, either of the terms, or both terms. For example, the phrase “A or B” will be understood to include the possibilities of “A” or “B” or “A and B.” As used herein, the word “exemplary” means “serving as an example, instance, or illustration.” Any embodiment described herein as “exemplary” is not to be construed as necessarily preferred or advantageous over other embodiments. The subject matter disclosed herein may, however, be embodied in many different forms and should not be construed as limited to the exemplary embodiments set forth herein. Rather, the exemplary embodiments are provided so that this description will be thorough and complete, and will fully convey the scope of the claimed subject matter to those skilled in the art. As used herein, the term “module” refers to any combination of software, firmware and/or hardware configured to provide the functionality described herein. The software may be embodied as a software package, code and/or instruction set or instructions, and “hardware,” as used in any implementation described herein, may include, for example, singly or in any combination, hardwired circuitry, programmable circuitry, state machine circuitry, and/or firmware that stores instructions executed by programmable circuitry. The modules may, collectively or individually, be embodied as circuitry that forms part of a larger system, for example, an integrated circuit (IC), system on-chip (SoC), and so forth. FIG. 1 is a schematic view of a system with a memory system architecture according to an embodiment. The system 100 includes a memory 102 coupled to a processor 104 . The memory 102 is configured to store data. When data is read from the memory 102 , the memory 102 is configured to correct an error, if any, in the data. For example, the memory 102 may be configured to correct a single-bit error. The memory 102 may also be configured to detect a double-bit error. Although the particular number of errors corrected has been used as an example, the memory 120 may be configured to correct any number of errors or detect any number of errors. Moreover, although one or more error correction techniques may result in single-bit error correction and/or double-bit error detection, the memory 102 may be configured to perform any error correction technique that can correct at least one error. The memory 102 may include any device that is configured to store data. In a particular example, the memory 102 may be a dynamic random access memory (DRAM) module. The memory 102 may include a double data rate synchronous dynamic random access memory (DDR SDRAM) according to various standards, such as DDR, DDR2, DDR3, DDR4, or the like. In other embodiments, the memory 102 may include static random access memory (SRAM), non-volatile memory, or the like. The memory 102 is configured to generate error information in response to correcting an error and/or attempting to correct an error in the data read from stored data. For example, the error information may include information about a corrected error, an uncorrected error, an absence of an error, a number of such errors, or the like. Error information may include the actual error, an address of the error, number of times the error has occurred, or other information specific to the memory 102 . In a particular example, the error information may include information about a single-bit error indicating that the memory 102 corrected the single-bit error. Although particular examples of error information have been described, the error information may include any information related to errors. The processor 104 may be any device configured to be operatively coupled to the memory 102 and capable of executing instructions. For example, the processor 104 may be a general-purpose processor, a digital signal processor (DSP), a graphics processing unit (GPU), an application specific integrated circuit, a programmable logic device, or the like. The processor 104 is coupled to the memory 102 through a first communication path 106 and a second communication path 108 . The processor 104 is configured to receive data from the memory through the first communication path 106 . For example, the first communication path 106 may be a system memory interface with signal lines for data signals, strobe signals, clock signals, enable signals, or the like. That is, the communication path 106 may be part of a main memory channel that is the interface between the processor 104 and the memory 102 as the main system memory. The processor 104 is also coupled to the memory 102 through a different communication path, the second communication path 108 . The processor 104 is configured to receive the error information from the memory 102 through the second communication path 108 . Thus, in an embodiment, the processor 104 is configured to receive error information and, in particular, corrected error information through a communication path other than the first communication path 106 . The corrected error information is error information related to a corrected error. As described above, error information may include various types of information related to an error. Thus, the corrected error information may include similar types of information related to a corrected error. Software 110 is illustrated as coupled to the processor 104 ; however, the software 110 represents various programs, drivers, modules, routines, or the like the may be executed on the processor 104 . For example, the software 110 may include drivers, kernel modules, daemons, applications, or the like. In some embodiments, the software 110 may enable the processor 104 to be configured to perform particular functions described herein. Although a single memory 102 has been used as an example, any number of memories 102 may be coupled to the processor 104 through two communication paths similar to the communication paths 106 and 108 . In an embodiment, each memory 102 may be coupled to the processor 104 through a dedicated first communication path 106 separate from other memories 102 and a dedicated second communication path 108 also separate from other memories 102 . In other embodiments, however, the first communication path 106 may be shared by more than one memory 102 and the second communication path 108 may be shared by more than one memory 102 . Furthermore, although a single first communication path 106 has been described, multiple first communication paths 106 between one or more memories 102 may be present. Similarly, although a single second communication path 108 has been described, multiple second communication paths 108 between one or more memories 102 may be present. In an embodiment, the communication of the error information may be communicated through an out-of-band communication path. The second communication path 108 may be such an out-of-band communication path. That is, the main communication between the processor 104 and the memory 102 may be through the first communication path 106 , while the error information is communicated through the out-of-band second communication path 108 . FIG. 2 is a schematic view of a system with a memory system architecture including a controller according to an embodiment. In this embodiment, the system 200 includes a memory 202 , a processor 204 , communication paths 206 and 208 , and software 210 similar to the memory 102 , processor 104 , communication paths 106 and 108 , and software 110 of FIG. 1 . The second communication path 208 , however, includes a first bus 212 coupled between a controller 214 and a second bus 216 coupled between the controller 214 and the processor 204 . In other words, the controller 214 , coupled to both the processor 204 and the memory 202 , is part of the second communication path 208 . The controller 214 may be any device configured to be operatively coupled to the memory 202 and the processor 204 . For example, the controller 214 may include a general-purpose processor, a digital signal processor (DSP), an application specific integrated circuit, a programmable logic device, or the like. The busses 212 and 216 may be any variety of communication links. For example, the buses 212 and 216 may be a system management bus (SMBus), an inter-integrated circuit (I 2 C) bus, an intelligent platform management interface (IPMI) compliant bus, a Modbus bus, or the like. In a particular embodiment, at least one portion of the communication path 208 may be substantially slower than the communication path 206 . For example, the communication path 206 between the memory 202 and processor 204 may be designed for higher data-rate transfers on the order of 10 GB/s; however, the communication path 208 may have a lower data transfer rate on the order of 10 Mbit/s, 100 kbit/s, or the like. Thus, in some embodiments, a ratio of the data transfer speed of the communication path 206 to the communication path 208 may be about 100, 1000, or more. In an embodiment, the second communication path 208 may be a dedicated communication path. That is, the second communication path 208 may only be used for communication of information between the memory 202 and the processor 204 . In other embodiments, however, the controller 214 may allow other devices to be accessible. For example, a non-memory device 268 may be coupled by the bus 212 to the controller 214 . In another example, other devices 266 may be coupled to the controller 214 . Accordingly, information other than information from the memory 202 may be transmitted over the bus 212 and/or the bus 216 to and from the processor 204 and/or memory 202 . In particular, the error information from the memory 202 may be communicated to the processor 204 over a second communication path 208 that is used for other purposes, including non-memory purposes. In an embodiment, the controller 214 may include non-volatile memory 254 . The non-volatile memory 254 may be configured to store error information from the memory 202 . Accordingly, error information may be maintained in the controller 214 when power is off. The processor 204 may be configured to request the error information from the controller 214 . Accordingly, the controller 214 may be configured to respond to such a request by providing the error information stored in the non-volatile memory 254 , accessing the memory 202 to retrieve the error information to respond to the processor 204 , or the like. In an embodiment, the controller 214 may be configured to poll the memory 202 for error information. In another embodiment, the memory 202 may be configured to push error information to the controller 214 . Regardless, error information stored in the non-volatile memory 254 may be a substantially up-to-date copy. FIG. 3 is a schematic view of a system with a memory system architecture including a baseboard management controller (BMC) according to an embodiment. In this embodiment, the system 300 includes a memory 302 , a processor 304 , communication paths 306 and 308 , and software 310 similar to the memory 202 , processor 204 , communication paths 206 and 208 , and software 210 of FIG. 2 . The controller 314 is, however, a baseboard management controller (BMC) 314 . The BMC 314 may be configured to manage the system 300 . For example, the BMC 314 may be coupled to various sensors of the system 300 , including sensors of the processor 304 , memory 302 , other devices 366 , or the like. The BMC 314 may be configured to collect and report on various system parameters, such as temperature, cooling status, power status, or the like. The BMC 314 may be configured to manage the system and enable access to information according to a standard. The management information may be made available to the processor 304 and hence, available to the software 310 . Alternatively, the BMC 314 may make the information available through another communication path, such as an out-of-band communication path. Here, an out-of-band communication path may include any communication path that does not include the processor 304 . FIG. 4 is a schematic view of a system with a memory system architecture without processor-based error correction according to an embodiment. In this embodiment, the system 400 includes a memory 402 , a processor 404 , communication paths 406 and 408 , and software 410 similar to the memory 102 , processor 104 , communication paths 106 and 108 , and software 110 of FIG. 1 . In this embodiment, however, the processor 404 includes a memory controller (MC) 450 and a machine check architecture (MCA) register 452 . The memory controller 450 may be integrated with the processor 404 . The memory controller 450 may be part of a main memory channel that is the main interface between the processor 404 and the memory 402 . The memory controller 450 can be configured to control access to the data stored in the memory 402 through the communication path 406 . In some embodiments, the memory controller 450 may be configured to correct errors, but would not have the opportunity to correct such errors as error correction may have been performed by the memory 402 . In this embodiment, however, the memory controller 450 is not configured to correct errors in data read from the memory 402 . The memory controller 450 may not be configured to report any error information based on data read from the memory 402 . The MCA register 452 is a register in which hardware errors may be reported. For example, cache errors, bus errors, data errors, or the like may be detected and reported in the MCA register 452 . Because the memory controller 450 is not configured to correct errors in data read from the memory 402 , however, any potential error information based on the data read from the memory 402 may not be reported in the MCA register 452 . Regardless, as described above, the error information may be communicated to the processor 404 through the communication path 408 . Thus, the error information may still be available to the software 410 , albeit not through the memory controller 450 and MCA register 452 . In an embodiment, the availability of error information through the second communication path 408 may allow for a lower cost system 400 . For example, a processor 404 with the memory controller 450 without any memory error correction may be used, yet error information may still be available. In particular, even if memory error correction is desired, a processor 404 without memory error correction may be used because the error information is available through the second communication path 408 . Thus, the software 410 , including any software that uses error information, may still operate as if the processor 404 was capable of memory error correction. A processor 404 without error correction may be a lower power, lower cost processor. Thus, an overall power usage and/or cost of the system 400 may be reduced. Although the memory controller 450 has been illustrated as being integrated with the processor 404 , the memory controller 450 may be separate from the processor 404 . Regardless, the communication path 408 may bypass the memory controller 450 and other portions of the processor 404 that may otherwise have had error correction circuitry. The bypass of such components makes the communication of error information through the second communication path 408 substantially independent of the character of the memory controller 450 , MCA register 452 , or the like. That is, the error information may still be available even though similar information is not available through the memory controller 450 and/or the MCA register 452 . FIG. 5 is a schematic view of a system with a memory system architecture with a poisoned data strobe signal according to an embodiment. In this embodiment, the system 500 includes a memory 502 , a processor 504 , communication paths 506 and 508 , and software 510 similar to the memory 102 , processor 104 , communication paths 106 and 108 , and software 110 of FIG. 1 . In this embodiment, however, the communication path 506 includes data lines 532 and a data strobe line(s) 533 . Other lines may be present as part of the communication path 506 ; however, for clarity, those lines are not illustrated. In an embodiment, error information regarding uncorrectable errors and error information regarding correctable errors may be communicated by different paths. As described above, correctable error information may be communicated through the communication path 508 . Uncorrectable error information may include a variety of different types of information based on an uncorrectable error. Uncorrectable error information may be communicated through the first communication path 506 . For example, the memory 502 may be configured to communicate an uncorrectable error by a signal transmitted (or not transmitted) over the data strobe line(s) 533 . That is, during a normal data transfer, a data strobe signal transmitted over the data strobe line(s) 533 may toggle as data is transferred; however, if the memory 502 has detected an uncorrectable error, the memory 502 may be configured to generate a data strobe signal for transmission over the data strobe line(s) 533 that is different from a data strobe signal during a normal data transfer. In a particular example, the memory 502 may be configured to not toggle the data strobe signal transmitted through the data strobe line(s) 533 . When such a condition is detected, the processor 504 may be configured to generate a hardware exception, which may be handled by the software 510 . Although a particular example, of a signal and/or line within the communication path 506 has been used as an example of a technique to communicate an uncorrectable error, other signals and/or lines may be used to communicate an uncorrectable error to the processor 504 . Regardless of how communicated, the processor 504 may be configured to respond to such a communication of an uncorrectable error, such as by halting the system 500 or taking another action. FIG. 6 is a schematic view of a system with a memory system architecture with a separate uncorrectable error signal according to an embodiment. In this embodiment, the system 600 includes a memory 602 , a processor 604 , communication paths 606 and 608 , and software 610 similar to the memory 102 , processor 104 , communication paths 106 and 108 , and software 110 of FIG. 1 . In this embodiment, however, a separate communication path 634 is coupled between the memory 602 and the processor 604 . Similar to the system 500 of FIG. 5 , an uncorrectable error may be communicated to the processor 604 . In this embodiment, the memory 602 is configured to communicate uncorrectable error information over the third communication path 634 . For example, the third communication path 634 may be a dedicated line separate from the first communication path 606 . Thus, error information regarding uncorrectable errors may be received by the processor 604 , but through a communication path other than the first and second communication paths 606 and 608 . FIG. 7 is a schematic view of a system with a memory system architecture with a software module according to an embodiment. In this embodiment, the system 700 includes a memory 702 , a processor 704 , communication paths 706 and 708 , and software 710 similar to the memory 102 , processor 104 , communication paths 106 and 108 , and software 110 of FIG. 1 . In this embodiment, however, the software 710 includes a module 718 . The module 718 represents a part of the software 710 that is configured to access the error information 722 through the processor. For example, the module 718 may include a kernel module, a driver, an extension, or the like. The module 718 may include a driver for an interface associated with the communication path 708 . In a particular example, the module 718 may include a driver associated with an IPMI bus, IPMI2 bus, or the like. Other information 720 may also be available to the software 710 . The error information 722 is illustrated separately to indicate what portion of the software 710 is associated with the error information 722 . In an embodiment, the module 718 may cause the processor 704 to request error information from the memory 702 . For example, the memory 702 may generate error information. At a later time the processor 704 may transmit a request for the error information through the communication path 708 . The memory 702 may be configured to respond to the request with the error information through the communication path 708 . FIG. 8 is a schematic view of a system with a memory system architecture with an error detection and correction module according to an embodiment. In this embodiment, the system 800 includes a memory 802 , a processor 804 , communication paths 806 and 808 , and software 810 with a module 818 responsive to information 820 and 822 similar to the memory 702 , processor 704 , communication paths 706 and 708 , and software 710 with the module 718 responsive to information 720 and 722 of FIG. 7 . In this embodiment, however, the software 810 also includes an error detection and correction (EDAC) module 824 . In an embodiment, the EDAC module may be configured to manage error information from memory, caches, input/output (I/O) devices, peripherals, busses, and/or other aspects of the system 800 and may be configured to expose such information to a higher functional layer, such as an application layer. In particular, the EDAC module 824 may be configured to receive the error information from the module 818 . The EDAC module 824 may be configured to combine the error information with other information such that other modules, applications, or the like may have access to the error information. FIG. 9 is a schematic view of a system with a memory system architecture with an aggregating module according to an embodiment. In this embodiment, the system 900 includes a memory 902 , a processor 904 , communication paths 906 and 908 , and software 910 with a first module 918 responsive to information 920 and 922 similar to the memory 702 , processor 704 , communication paths 706 and 708 , and software 710 with the module 718 responsive to information 720 and 722 of FIG. 7 . In this embodiment, however, the software 910 also includes a second module 926 . The second module 926 is configured to receive information 920 . In particular, this other information 920 may include information unrelated to an error on the memory 902 . At least a part 921 of the other information 920 may be received by the first module 918 . The first module 918 may be configured to combine the error information 922 with some or all of the other information 920 from the second module 926 . The first module 918 may be configured to present the combined information with a single interface. For example, the first module 918 may be configured to present the combined information to an EDAC module, such as the EDAC module 824 of FIG. 8 . FIG. 10 is a schematic view of a system with a memory system architecture with an error correction module that aggregates information from a memory control architecture module according to an embodiment. In this embodiment, the system 1000 includes a memory 1002 , a processor 1004 , communication paths 1006 and 1008 , and software 1010 with modules 1018 and 1026 responsive to information 1020 and 1022 similar to the memory 902 , processor 904 , communication paths 906 and 908 , and software 910 with the modules 918 and 926 responsive to information 920 and 922 of FIG. 9 . In this embodiment, however, the module 1018 is an error correction (EC) module 1018 and the second module 1026 is an MCA module 1026 . The MCA module 1026 is configured to control access to MCA registers, such as the MCA register 452 of FIG. 4 . Information 1020 represents such information from the MCA registers. The EC module 1018 is configured to access the MCA module 1026 to retrieve such information 1020 . The EC module 1018 may combine the information 1020 from the MCA module 1026 with the error information 1022 and present that combined information with a single interface. In particular, the EC module may present an interface similar to or identical to that of an MCA module 1026 had the processor 1004 been able to correct errors. For example, if the processor 1004 was configured to correct errors in data read from the memory 1002 and such error information was available, that information may be available through the MCA module 1026 . If, however, the processor 1004 is not configured to correct errors in data read from the memory 1002 or the processor 1004 is configured to correct errors, but never receives error information by a communication path monitored by the MCA module 1026 due to the errors being corrected in the memory 1002 , the MCA module 1026 would not be able to present the error information. Regardless, the EC module 1018 may combine the MCA module 1026 information 1020 with error information 1022 obtained through communication path 1008 and present that combined information similar to or identical to information that the MCA module 1026 would have provided had the processor 1004 been configured to correct errors in data read from the memory 1002 or the error information was available to the MCA module 1026 . Software may then use the same or similar interface regardless of whether a processor 1004 with error correction is present. In other words, a processor 1004 capable of error correction is not necessary for software relying upon error information to be fully operational. As a result, costs may be reduced by using a less expensive processor 1004 without error correction. FIG. 11 is a schematic view of a system with a memory system architecture with multiple modules sharing an interface, according to an embodiment. In this embodiment, the system 1100 includes a memory 1102 , a processor 1104 , communication paths 1106 and 1108 , and software 1110 responsive to information 1120 and 1122 similar to the memory 702 , processor 704 , communication paths 706 and 708 , and software 710 responsive to information 720 and 722 of FIG. 7 . In this embodiment, however, the software 1110 includes a first module 1118 , a second module 1128 and an interface module 1130 . The first module 1118 is similar to the module 718 of FIG. 7 . The first module 1118 , however, is configured to receive error information from the memory 1102 through an interface module 1130 . The interface module 1130 is a module configured to provide the interface to the communication path 1108 . For example, the interface module 1130 may be a module configured to permit access over an IPMI bus. Other modules, such as the second module 1128 may also be configured to communicate using the interface module 1130 . For example, the second module 1128 may be configured to access another device attached to an IPMI bus, access another aspect of the memory 1102 , such as thermal or power information, or the like. Both the error information and the other information may be part of the information 1122 transferred by the interface module 1130 . In other words, the error information may be transferred using dedicated software along the entire path, but may also share modules, interfaces, busses, or the like with related or unrelated information and/or sources. FIG. 12 is a schematic view of a system with a memory system architecture with a correctible error module and a serial presence detect/registering clock driver module sharing an interface according to an embodiment. In this embodiment, the system 1200 includes a memory 1202 , a processor 1204 , communication paths 1206 and 1208 , and software 1210 with modules 1218 , 1228 , and 1230 responsive to information 1220 and 1222 similar to the memory 1102 , processor 1104 , communication paths 1106 and 1108 , and software 1110 with modules 1118 , 1128 , and 1130 responsive to information 1120 and 1122 of FIG. 11 . In this embodiment, however, the first module 1218 is a corrected error (CE) module 1218 and the second module 1228 is a serial presence detect (SPD)/registering clock driver (RCD) module 1228 . In particular, the SPD/RCD module 1228 is configured to access information related to a serial presence detect system and/or a registering clock driver system. The SPD/RCD module 1228 may be configured to access one or both of such systems. The information is accessed through the second communication path 1208 . Thus, in an embodiment, the error information from the memory 1202 may be accessed through the same communication path 1208 as SPD/RCD related information. FIG. 13 is a schematic view of a system with a memory system architecture with in-DRAM error correction according to an embodiment. In this embodiment, the system 1300 includes memories 1302 , a processor 1304 , kernel 1310 with an EC module 1318 and an MCA module 1326 responsive to information 1320 and 1322 similar to the memory 1002 , processor 1004 , and software 1010 with the EC module 1018 and MCA module 1026 responsive to information 1020 and 1022 of FIG. 10 . In this embodiment, however, each of the memories 1302 is error correction code (ECC) dual in-line memory module (DIMM). Each ECC DIMM 1302 is configured to store data and correct at least an error in the stored data. In this embodiment, the ECC DIMMs 1302 are each coupled to a memory controller (MC) 1350 of the processor 1304 through corresponding communication paths 1364 . The communication paths 1364 include at least lines for data signals and data strobe signals or the like similar to the communication path 506 of FIG. 5 . The ECC DIMMs 1302 are each coupled to the processor 1304 through a communication path 1308 including a bus 1312 , a BMC 1314 , and a bus 1316 similar to the bus 312 , BMC 314 , and bus 316 of FIG. 3 . In an embodiment, the ECC DIMMs 1302 may be configured to correct one or more errors in data read from the ECC DIMMs 1302 . The error correction techniques may include a single error correction-double error detection (SEC-DEC) technique, a single-chip chipkill technique, a double-chip chipkill technique, or the like. Any error correction technique may be used. In this embodiment, the memory controller (MC) 1350 is not configured to perform error correction or alternatively, is not configured to receive error information from the ECC DIMMs 1302 . As the data passed from the ECC DIMMs 1302 is already corrected, the MC 1350 may not even receive any information representing a correctible error. The error information and, in particular, corrected error information, however, may be transmitted to the processor 1304 through the communication path 1308 , i.e., through the busses 1312 and 1316 , and the BMC 1314 . In an embodiment, the processor 1304 may be an existing processor that is otherwise not capable of performing error correction, but has an interface capable of connecting to the bus 1316 . Once, however, the processor 1304 is configured by the kernel 1310 and, in particular, the EC module 1318 , the overall system 1300 may be configured to perform error correction similar to a system having a processor capable of error correction. In an embodiment, the EC module 1318 may create a virtual memory controller with ECC interface. For example, as described above, the EC module 1318 may be configured to receive information from the MCA module 1326 . That information may be the information that an actual memory controller with ECC interface may provide without some or all error information. The EC module 1318 may supplement the information from the MCA module 1326 with the error information to create a complete set of information expected from a memory controller with ECC interface. As a result, the EDAC module 1324 , a memory ECC daemon 1358 , other applications 1360 , or the like may be used without change from those used with processors with error correction. For example, the EDAC module 1324 may be configured to poll the EC module 1318 for memory ECC information. In return, the EC module 1318 may return the error information received through the second communication path 1308 . The memory ECC daemon 1358 , in communication with the EDAC module 1324 , may poll the EDAC module 1324 for error information. The memory ECC daemon 1358 may then take actions according to the error information at an application level. Such actions may include page retirement, other actions to manage errors to keep the system 1300 running, maintain a level of reliability, recommend decommissioning, or the like. As described above, an uncorrectable error may be detected. The uncorrectable error information may be communicated through the MC 1350 , MCA register 1352 , and MCA module 1326 to the EC module 1318 . For example, an uncorrectable error may be communicated by a non-maskable interrupt, exception, or the like through the MCA module 1326 . In a particular example, the memory controller 1350 may generate a hardware exception in response to an uncorrectable error, regardless of how communicated to the memory controller 1350 . The MCA module 1326 may intercept that exception and pass it to the EC module 1318 . The EC module 1318 may then communicate the exception to the EDAC module 1324 . In addition to or instead of communicating uncorrectable error information as described above, uncorrectable error information may be communicated through the communication path 1308 . In an embodiment, the ECC DIMMs 1302 may be configured to provide corrected data to the processor 1304 . The data, however, may become corrupted between the ECC DIMMs 1302 and the MC 1350 . Accordingly, some form of error correction may be performed between the ECC DIMMs 1302 and the processor 1304 or MC 1350 . For example, the data transmitted from the ECC DIMMs 1302 may be encoded with error correction codes intended to detect errors that occur over the communication link 1364 . With such error correction, substantially the entire path from storage element in the ECC DIMMs 1302 to the processor may be protected with error correction. FIGS. 14A-D are schematic views of systems with a memory system architecture with in-module error correction according to some embodiments. Referring to FIG. 14A , the system 1400 includes components similar to those of FIG. 13 ; however, in this embodiment, the ECC DIMMs 1402 include a buffer 1462 . The buffer 1462 is configured to correct errors in data read from the corresponding ECC DIMM 1402 . In particular, uncorrected data may be read from internal memory devices, such as DRAM devices (not illustrated) of the ECC DIMM 1402 . The buffer 1462 may be configured to correct the uncorrected data and generate corrected error information similar to other memories described herein. That error information may be communicated through the communication path 1408 , and may be used as described above. That is, the error information may be used as described above regardless of how the error information is generated. Referring to FIG. 14B , the components of the system 1400 may be similar to those of FIG. 14A . In this embodiment, however, the EDAC module 1424 is configured to communicate with the MCA module 1426 . For example, the EDAC module 1424 may be configured to poll the MCA module 1426 for hardware related information, uncorrectable error information, or other information available through the MCA module 1426 as described above. The EDAC module 1424 may be configured to combine the information from the MCA module 1426 with information from the EC module 1418 . Referring to FIG. 14C , the components of the system 1400 may be similar to those similar to those of FIG. 14A . In this embodiment, however, an MCELOG module 1425 is configured to receive information from the CE module 1418 . The MCELOG module 1425 may be configured to record machine check events (MCEs) related to various system errors, such as memory errors, data transfer errors, or other errors. The MCELOG module 1425 may be configured to raise an interrupt to the Memory ECC Daemon 1458 and pass error information to the Memory ECC Daemon 1458 . Referring to FIG. 14D , the components of the system 1400 may be similar to those of FIG. 14C . However, in this embodiment, similar to the difference between FIGS. 14A and 14B , the MCELOG module 1425 may be configured to receive information from the MCA module 1426 similar to the EDAC module 1424 of FIG. 14B . Although different modules have been described with respect to ECC DIMMs 1402 with buffers 1462 in FIGS. 14A-D , in other embodiments, the various configurations may be applied to the system 1300 of FIG. 13 with ECC DIMMs 1302 . FIG. 15 is a schematic view of a memory module according to an embodiment. The memory module 1500 includes one or more memory devices 1501 , a data interface 1536 , an error interface 1538 , and a controller 1541 . The data interface 1536 is configured to transmit and receive data 1540 from data stored in the memory devices 1501 . The memory module 1500 is configured to generate error information for data read from the one or more memory devices 1501 . The error interface 1538 is configured to transmit error information generated in response to correcting an error in data read from the one or more memory devices 1501 . The data interface 1536 is the interface through which data stored in the memory devices 1501 is transmitted and the interface through which data 1540 to be stored in the memory devices 1501 is received. For example, the data interface 1536 may include buffers, drive circuits, terminations, or other circuits for lines, such as data lines, strobe lines, address lines, enable lines, clock lines, or the like. The error interface 1538 may be an interface configured to communicate over a particular bus, such as SMBus, IPMI, or other buses as described herein. In an embodiment, the error interface 1538 may be an existing interface through which the memory module 1500 communicates other information in addition to the error information. Thus, the information 1542 would include not only the error information, but also the other information. The controller 1541 may be any device configured to be operatively coupled to the memory devices 1501 . For example, the controller 214 may include a general-purpose processor, a digital signal processor (DSP), an application specific integrated circuit, a programmable logic device, or the like. As will be described in further detail below, the controller 1541 may include a buffer, such as an RCD, or the like. The controller 1541 is coupled to the memory devices 1501 , the data interface 1536 , and the error interface 1538 . The controller 1541 is configured to obtain the error information. In an embodiment, the controller 1541 may obtain the error information from the memory devices 1501 ; however, in other embodiments, the controller 1541 may be configured to correct errors in data from the memory devices 1501 and generate the error information. In an embodiment the controller 1541 may be configured to communicate an uncorrectable error through the data interface 1536 . For example, as described above, a data strobe signal may be used to indicate an uncorrectable error. The controller 1541 may be configured to modify the data strobe signal transmitted through the data interface 1536 in response to detecting an uncorrectable error. FIG. 16 is a schematic view of a memory module with an SPD or RCD interface according to an embodiment. In this embodiment, the memory module 1600 includes one or more memory devices 1601 , a data interface 1636 , an error interface 1638 , and a controller 1641 similar to the one or more memory devices 1501 , data interface 1536 , error interface 1538 , and controller 1541 of FIG. 15 . The error interface 1538 of FIG. 15 , however, is an SPD/RCD interface 1638 here. The SPD/RCD interface 1638 may be used to provide access to an SPD system or an RCD system (not illustrated). In a particular embodiment, the error information may be available through a particular register or memory location within such an SPD or RCD system. Thus, the error information may be obtained through the same interface the SPD or RCD information may be obtained. As the error information is available through an existing hardware interface, additional hardware may not be needed. For example, a command received through the SPD/RCD interface 1638 intended to access error information may be different from other commands by an address, register address, or other field unused by SPD/RCD systems. In an embodiment, a new register for SPD/RCD systems may be defined that exposes the error information. In another embodiment, an existing register may be reused to communicate the error information. FIG. 17 is a schematic view of a memory module with a separate uncorrectable error interface according to an embodiment. In this embodiment, the memory module 1700 includes one or more memory devices 1701 , a data interface 1736 , an error interface 1738 , and a controller 1741 similar to the one or more memory devices 1501 , the data interface 1536 , the error interface 1538 , and the controller 1541 of FIG. 15 . The memory module 1700 , however, also includes an uncorrectable error (UE) interface 1744 . The UE interface 1744 is a separate interface through which the memory module 1700 is configured to communicate uncorrectable errors. For example, the UE interface 1744 may be a dedicated line, a dedicated bus, or the like. FIG. 18 is a schematic view of a memory device according to an embodiment. In this embodiment, the memory device 1800 includes a data interface 1836 and an error interface 1838 . The data interface 1836 and the error interface 1838 may be similar to the data interface 1536 and the error interface 1538 of FIG. 15 , or the like as described above; however, in this embodiment, the data interface 1836 and the error interface 1838 are interfaces to the memory device 1800 rather than a memory module, such as a memory module 1500 of FIG. 15 . The memory device 1800 includes a controller 1841 . The controller 1814 may be any device configured to be operatively coupled to the memory 1801 and the interfaces 1836 and 1838 . For example, the controller 1841 may include a general-purpose processor, a digital signal processor (DSP), an application specific integrated circuit, a programmable logic device, or the like. The memory 1801 is configured to store data. For example, the memory 1801 may be a memory cell array; however, in other embodiments, the data may be stored in other configurations. The memory 1801 may include electrical, magnetic, chemical, optical, or other types of storage elements. The controller 1841 is configured to transmit data stored in the memory 1801 through the data interface 1836 . The controller may also be configured to receive data to be stored in the memory 1801 through the data interface 1836 . Such transfers are represented by data 1840 . The controller 1841 is configured to transmit error information generated in response to correcting an error in data read from memory 1801 through the error interface 1838 . The error information may be similar to any of the types of error information described above. The controller 1841 may also be configured to receive commands, instructions, or other information through the error interface 1838 . Such transfers of error information, commands, instructions, or other information is represented by information 1842 . In this embodiment, both the data 1840 and information 1842 are illustrated as passing through the controller 1841 . In other embodiments, however, components of the memory device 1800 may be controlled by the controller 1841 such that data 1840 and information 1842 does not pass through the controller 1841 . For example, in some embodiments, the data and/or error information may be provided to the data interface 1836 and error interface 1838 under control of the controller 1841 , but bypassing the controller 1841 . FIG. 19 is a schematic view of a memory device according to another embodiment. In this embodiment, the memory device 1900 includes a memory cell array 1901 . The memory cell array 1901 may include memory cells in which data is stored. In particular, the memory cell array 1901 may be configured to store encoded data. Sense amplifiers 1902 and write circuitry 1904 are examples of circuitry in the memory device 1900 that allows data to be written to and read from the memory cell array 1901 to an address or addresses specified by the address 1906 . In other embodiments, however, other read and write circuitry may be associated with the memory cell array 1901 . Furthermore, although the sense amplifiers 1902 and write circuitry 1904 are illustrated as part of the memory cell array 1901 , such circuitry may be separate from the memory cell array 1901 . In addition, although a single memory cell array 1901 is illustrated, multiple memory cell arrays 1901 may be present. The memory cell array 1901 is coupled to an error correcting code (ECC) engine 1908 . The ECC engine 1908 is configured to correct at least one error in data read from the memory by encoding data written to the memory cell array 1901 and decoding data read from the memory cell array 1901 . In particular, the ECC engine 1908 may be configured to receive write data 1910 . The ECC engine 1908 may be configured to encode the write data 1910 such that the encoded data may be written to the memory cell array 1901 by the write circuitry 1904 to a location specified by the address 1906 . Similarly, the ECC engine 1908 may be configured to receive encoded data read from the memory cell array 1901 and decode that data into decoded output data 1924 . Such encoding and decoding may be performed according to any number of ECC algorithms as described herein. As an example, Single Error Correct-Double Error Detect (SEC-DED) may be used as the ECC algorithm; however others may be used. Although signals such as an address 1906 and write data 1910 are illustrated as signals used in writing data to the memory cell array 1901 , the memory device 1900 may be configured to receive and process other signals involved in writing data to the memory cell array 1901 ; however, such components are omitted for clarity. Furthermore, other components that may modify an address 1906 , redirect an access, or the like may be present, but are also not illustrated for clarity. In a particular example, during a write operation, the ECC Engine 1908 is configured to receive the bits the memory device 1900 should store as the write data 1910 . The ECC Engine 1908 is configured to calculate the ECC bit value(s) for the write data 1910 and pass these ECC bit(s), along with the original data values as the encoded data, to the memory cell array 1901 using the write circuitry 1904 . The memory cell array 1901 is then configured to store the encoded data. During a read operation, the ECC Engine 1908 is configured to receive encoded data from the memory cell array 1901 . That is, the sense amplifiers 1902 and other circuitry are used to read the previously stored ECC bit(s) and original data values as the encoded data. The ECC engine 1908 may then decode the encoded data, generate output data 1924 , and generate any error information. The output data 1924 may then be output from the memory device 1900 . In some embodiments, other components may be disposed between the ECC engine 1908 and the output of the memory device 1900 . In an embodiment, a buffer 1932 may be configured to buffer the output data 1924 . In another embodiment, an RCD module 1934 may be configured to receive, buffer, and output the output data 1924 . Here, examples of such optional components are illustrated with dashed lines. The ECC engine 1908 is also configured to generate error flags. For example, the ECC engine 1908 may be configured to generate a correctable error (CE) flag. The CE flag may be set when the ECC engine 1908 successfully corrects an n-bit error, in which n is less than or equal to a number of bit-errors that the ECC engine 1908 is configured to correct. The ECC engine 1908 may also be configured to generate an uncorrectable error (UE) flag. The UE flag may be set when the ECC engine 1908 detects that a number of bit-errors have occurred greater than a number of bit-errors that the ECC engine 1908 is configured to correct. In a particular example, with SEC-DED, the CE flag may indicate that a single-bit error has been corrected while the UE flag may indicate that a two-bit error has occurred. The ECC controller 1918 is configured to manage the error correction and associated error information. The ECC controller 1918 is configured to receive error information 1914 from the ECC engine. The error information 1914 may include information indicating whether there was no error, a correctable error, an uncorrectable error, a number of errors, or the like. The ECC controller 1918 may also be configured to receive the address 1906 associated with a read. Accordingly, the ECC controller 1918 may combine the error information 1914 from the ECC engine 1908 into new error information with the address 1906 . As will be described in further detail below, the ECC controller 1918 may be configured to generate write data 1910 to be encoded by the ECC engine 1908 and written to the memory cell array 1901 . In an embodiment, the ECC controller 1918 may include a memory configured to store error information. For example, the ECC controller 1918 may include multiple registers in which error information may be stored. Any variety of error information may be stored in the ECC controller 1918 . As will be described in further detail below, records of the error may be stored including information about an error. For example, the error record may include information, such as address information, type of error, the data read from the memory cell array 1901 , whether a repair or other action has been performed, or the like. In an embodiment, the ECC controller 1918 may be configured to transmit and receive communications 1926 from external devices. For example, the communications 1926 may include the transmission of error information. When a correctable error or an uncorrectable error occurs, error information may be transmitted by the ECC controller 1918 . Such transmission may be in response to a request from an external device or may be spontaneous, such as according to a regular schedule, on the occurrence of the error, during a refresh cycle, or the like. In an embodiment, the ECC controller 1918 may be configured to communicate over a bus, such as the SMBus to communicate the error information. In some embodiments, the memory device 1900 may include a command buffer 1928 . The command buffer 1928 may be configured to buffer commands received through a bus for the ECC controller 1918 . In an embodiment, the memory device 1900 may include an SPD module 1930 . The ECC controller 1918 may be configured to communicate with the SPD module 1930 . The SPD module 1930 may be configured to perform operations associated with an SPD interface. In addition, the SPD module 1930 may be configured to allow access to the error information available through the ECC controller 1918 . For example, particular commands received through at SPD module 1930 may be translated into appropriate commands and/or signals to access the error information stored in the ECC controller 1918 . DQS modifier 1920 is configured to modify a data strobe signal 1912 from the memory cell array 1901 in response to error information 1916 from the ECC engine 1908 and output the modified data strobe signal 1922 . In a particular embodiment, the error information 1916 is a signal indicating whether an uncorrectable error has occurred. The DQS modifier 1920 may be configured to modify the data strobe signal 1912 such that the output data strobe signal 1922 does not toggle if the error information 1916 indicates that an uncorrectable error has occurred, but passes the data strobe signals 1912 as is if an uncorrectable error signal has not occurred. For example, the DQS modifier 1920 may include logic circuitry such as an OR gate, an AND gate, a NAND gate, a transmission gate or the like. In an embodiment, the DQS modifier 1920 may be used to communicate time-sensitive information. For example, when an uncorrectable error has occurred, that error may be associated with a current read operation. While information regarding the uncorrectable error may be communicated by the ECC controller 1918 to external devices, such as by an SMBus, the communication path may be slower than a communication path for the data 1924 . Thus, communication of the occurrence of the uncorrectable error may be delayed relative to the corresponding read operation. In contrast, communicating that an uncorrectable error has occurred by the DQS modifier 1920 may be substantially contemporaneous with the corresponding read operation. That is, the modified output data strobe signal 1922 is the data strobe signal associated with the transfer of data 1924 with the uncorrectable error. Although particular components of a memory device 1900 have been used as an example, other components may be present. For example, the memory device 1900 may be configured to receive and/or transmit various strobe signals, selection signals, control signals, enable signals, or the like. FIG. 20 is a schematic view of a memory module including memory devices according to an embodiment. In this embodiment, the memory module 2000 includes a data interface 2036 and an error interface 2038 similar to data interface 1536 and error interface 1538 of FIG. 15 . In this embodiment, however, the memory module 2000 includes multiple ECC memory devices 2001 - 1 to 2001 -N. The ECC memory devices 2001 may be any of the memory devices described herein, such as the memory devices 1800 and 1900 of FIGS. 18 and 19 described above. Using memory device 1800 as an example of the memory devices 2001 and referring to FIGS. 18 and 20 , each of the memory devices 1800 is coupled to the data interface 2036 and the error interface 2038 . With respect to the data interface 2036 , the data interfaces 1836 of the memory devices 1800 may form at least part of the data interface 2036 . For example, data I/Os, strobe signals, or the like of each data interface 1836 may be aggregated into the data interface 2036 . Address inputs and/or other control signals of the data interface 2036 may be distributed to the data interfaces 1836 of the memory devices 1800 . Accordingly, data may be communicated to and from the memory devices 1800 through the data interface 2036 and hence, to and from the memory module 2000 . Similarly, the error interfaces 1838 may be coupled to the error interface 2038 . The error interfaces 1838 may be coupled in a variety of ways. For example, the error interfaces 1838 and the error interface 2038 may be coupled to a common bus within the memory module 2000 . In another example, the error interface 2038 may be coupled directly to each error interface 1838 of the memory devices 2001 . The error interface 2038 may be configured to aggregate the error information from the memory devices 1800 . Accordingly, error information may be communicated from the memory devices 1800 through the error interface 2038 and hence, from the memory module 2000 . Although the memory device 1800 of FIG. 18 has been used as an example of a memory device 2001 of the memory module 2000 , in other embodiments, different memory devices may be used. For example, the memory device 1900 of FIG. 19 may be used as the memory devices 2001 . Referring to FIG. 19 , the address 1906 , write data 1910 , output data 1924 , data strobe signal 1922 , or the like of each memory device 1900 may be coupled to the data interface 2036 . Similarly, the ECC controller 1918 of each memory device 1900 may be coupled to the error interface 2038 . FIGS. 21-23 are schematic views of memory modules according to various embodiments. Referring to FIG. 21 , in this embodiment, the memory module 2100 includes one or more memory devices 2101 , a data interface 2136 , and a controller 2141 similar to the one or more memory devices 1501 , data interface 1536 , and controller 1541 of FIG. 15 . A module error interface 2138 may be similar to the error interface 1538 and configured to exchange information 2142 similar to information 1542 ; however the module error interface 2138 is referred to with the term “module” to distinguish it from the device error interfaces 2139 of the memory devices 2101 . As will be described in further detail below, the module error interface 2138 may be used for communication other than communicating error information. Here, the memory devices 2101 each have a data interface 2137 and a device error interface 2139 similar to data interface 1836 and error interface 1838 of FIG. 18 . The data interfaces 2137 of the memory devices 2101 are coupled to the data interface 2136 of the module; however, such coupling is not illustrated for clarity. Moreover, in some embodiments, the coupling of the data interface 2136 and the data interfaces 2137 of the memory devices 2101 may, but need not pass through the controller 2141 . For example, in some embodiments, data 2140 transferred to and from the memory module 2100 may be buffered in the controller 2141 ; however, in other embodiments, such transfers may bypass the controller 2141 . Each memory device 2101 is coupled to the module error interface 2138 and configured to communicate error information through the device error interface and the module error interface. In this embodiment, a controller 2141 is coupled to the device error interfaces 2139 and the module error interface 2138 . As will be described in further detail, the controller 2141 may be configured to manage communications involving the memory devices 2101 , such as communications involving error information. For example, the controller 2141 may be configured to manage access to error information associated with the memory devices 2101 through the corresponding device error interfaces 2139 , forward communications to and from the memory devices 2101 , aggregate error information from the memory devices 2101 , or the like. In a particular embodiment, the controller 2141 may include registers 2149 that are accessible through the module error interface 2138 . The controller 2141 may be configured to collect error information from the memory devices 2101 by communicating with the memory devices 2101 through the device error interfaces 2139 . Such error information may be stored in the registers 2149 and accessible to devices external to the memory module 2100 . Alternatively, the controller 2141 may be configured to combine the error information, summarize the error information, or the like. In particular, in an embodiment, each memory device 2101 may generate its own error information in isolation from the other memory devices 2101 . Accordingly, as the controller 2141 may have access to all of the memory devices 2101 , the controller 2141 may be configured to generate additional error information that an individual memory device 2101 may not be capable of generating. Although registers 2149 have been used as an example, error information and other information may be stored in the controller 2141 in other ways. In an embodiment, the controller 2141 may be configured to receive commands related to the memory devices 2101 . As described herein, the controller 2141 may be configured to receive a command to read error information. The controller 2141 , however, may be configured to receive other types of communications related to the memory devices 2101 . For example, the controller 2141 may be configured to receive commands related to maintenance of the memory devices 2101 . An example of such maintenance may be a command to repair a memory cell within one or more of the memory device 2101 , rewrite data, initiate a refresh cycle, or the like. The controller 2141 may be configured to receive such communications and, in response, communicate with the memory devices 2101 . Referring to FIG. 22 , in this embodiment, the memory module 2200 is similar to the memory module 2100 ; however, the memory module 2200 includes a serial presence detect (SPD) 2143 module coupled to the controller 2141 . The SPD 2143 may be configured to communicate through the controller 2141 . For example, the controller 2141 may be configured to forward communications to and from the SPD 2143 . In other embodiments, the controller 2141 may be configured to obtain information from the SPD 2143 and operate as a proxy for the SPD 2143 using such information through the module error interface 2138 . Again, although the module error interface 2138 uses the term “error,” information other than error information may be transmitted and received through the module error interface 2138 . In an embodiment, the controller 2141 may be configured to respond to an address associated with the SPD 2143 . The controller 2141 , however, may be configured to respond to another address, use additional information in a communication, or the like to determine whether the communication is intended for the SPD 2143 , intended to access error information, intended for the memory devices 2101 , intended for the controller 2141 itself, or the like. Referring to FIG. 23 , in this embodiment, the memory module 2300 may be similar to the memory module 2100 of FIG. 21 or the memory module 2200 of FIG. 22 . A registering clock driver (RCD) module 2145 , however, may be used in place of the controller 2141 . Here, the RCD 2145 may be configured to buffer data transferred to and from the memory module 2300 . In addition, the RCD 2145 may also be configured to provide functions described herein with respect to the controller 2141 . An SPD 2143 may also be coupled to the RCD 2145 . Accordingly, similar to the memory module 2200 , the SPD 2143 may be accessible through the RCD 2145 , the RCD 2145 may act as a proxy for the SPD 2143 , or the like, similar to the controller 2141 described above. FIGS. 24-26 are schematic views of portions of memory modules according to various embodiments. Referring to FIG. 24 , in this embodiment, the controller 2141 , memory devices 2101 , and the SPD 2143 may be similar to those of FIG. 22 . The controller 2141 may be coupled to a bus 2452 . The bus 2542 may be an SMBus, or other bus as described herein. The bus 2542 may form part or all of the module error interface 2142 . The controller 2141 may be configured to receive an address 2454 . The address 2454 may be a hardwired input. In a particular example, the address 2454 may be a series of pins on a memory module that, when inserted in a particular socket, are connected to high or low values to distinguish the memory module from others coupled to the same bus 2542 . In an embodiment, the address 2454 may be the address that is coupled to an SPD module in conventional memory devices; however, here, the address is repurposed to communicate with the controller 2141 instead of an SPD such as the SPD 2143 . Thus, a memory module as described herein may be pin-compatible with existing memory modules. In this embodiment, the SPD 2143 and the memory devices 2101 are each coupled to the controller 2141 through separate busses 2450 . Here, the busses are labeled bus 2450 - 1 to 2450 -N, corresponding to memory devices 2101 - 1 to 2101 -N. Bus 2450 -N+1 corresponds to the additional bus coupling the controller 2141 and the SPD 2143 . In a particular embodiment, each of the busses 2450 may be SMBus busses or other similar communication links. In other embodiments, however, other point-to-point communication links may be used in place of the busses 2450 including, for example, a communication link that may only have two endpoints. That is, although the term bus has been used, the communication link may be configured to only be able to couple to two devices. In an embodiment, the SPD 2143 may be configured to respond to and/or generate a control signal 2147 . The control signal 2147 may include an out-of band signal with respect to the bus 2450 -N+1. The control signal 2147 may be an interrupt signal, for example. In a particular, embodiment, the control signal 2147 may be an event signal associated with the SPD 2143 . The controller 2141 may also be configured to receive and/or generate a control signal 2451 . The control signal 2451 may be a signal that would otherwise be used by the SPD 2143 . Since the controller 2141 , however, may be configured to use the interface that the SPD 2143 otherwise would have, the SPD 2143 may not be configured to directly receive the control signal 2451 . Accordingly, the controller 2141 may be configured to communicate the control signal 2451 to and/or from the SPD 2143 as the control signal 2147 . Although a single control signal associated with the SPD has been used as an example, in other embodiments, multiple control signals may be forwarded to and from the SPD 2143 , the memory devices 2101 , or other components. For clarity such control signals will not be illustrated in subsequent figures; however, they may be present. Moreover, the controller 2141 may include additional functions beyond the SPD 2143 that may be associated with a control signal similar to control signal 2147 . For example, the controller 2141 may be configured to generate an interrupt based on error information from the memory devices 2101 . Accordingly, control signal 2451 may be used to communicate the error information based interrupt in addition to any such signal from the SPD 2143 . The controller 2141 may be configured to determine whether such control signal is intended for the controller 2141 , the SPD 2143 , or the like. In an embodiment, a number of additional pins may be used for the memory devices 2101 . In a particular embodiment, a memory device 2101 may include two additional pins, one for a clock signal and another for a data signal. The controller 2141 may include 2×(N+2) pins for the busses 2452 and 2450 - 1 to 2450 -N+1, three pins for the address 2454 , and two pins for the control signals 2451 and 2147 . Referring to FIG. 25A , in this embodiment, the controller 2141 , memory devices 2101 , and the SPD 2143 may be similar to those of FIG. 24 . The controller 2141 , however, is coupled to the memory devices 2101 through bus 2450 - 1 and coupled to the SPD 2143 through bus 2450 - 2 . In this embodiment, the busses 2450 - 1 and 2450 - 2 are separate busses. In addition, the bus 2450 - 1 is a common bus for the memory devices 2101 . Once again, the busses 2450 may be SMBus busses. Since multiple memory devices 2101 may be coupled to the bus 2450 - 1 , each memory device 2101 may include a corresponding ID input 2456 . The ID 2456 may be similar to the address 2454 . For example, for each memory device 2101 , the corresponding ID 2456 may be hardwired to an address unique among the memory devices 2101 . In a particular example, each ID 2456 may include four pins that may be held either high or low. Accordingly, 16 unique addresses are available for the IDs 2456 . Although four pins have been used as an example, any number of pins may be used to distinguish any number of memory devices 2101 . Each of the memory devices 2101 may be configured to transform the corresponding ID 2456 into an address or other identifier to be used on the bus 2450 - 1 . In an embodiment, the address generated from the ID 2456 may be an address used as the slave address for an SMBus. In this embodiment, the SPD 2143 and the controller 2141 may be the only devices on the bus 2450 - 2 . Accordingly, an address input need not be used for the SPD 2143 . In an embodiment, a number of additional pins may be used for the memory devices 2101 . In a particular embodiment, a memory device 2101 may include two additional pins, one for a clock signal and another for a data signal, similar to FIG. 24 , but also four pins for the IDs 2456 . The controller 2141 may include six pins for the busses 2452 , 2450 - 1 , and 2450 - 2 , three pins for the address 2454 , and two pins for the control signals 2451 and 2147 similar to FIG. 24 , if used. Referring to FIG. 25B , in this embodiment, the controller 2141 , memory devices 2101 , and the SPD 2143 may be similar to those of FIG. 25A . The SPD 2143 and the memory devices 2101 , however, are coupled to the controller 2141 through a common bus 2450 . As described above, the memory devices 2101 may each be configured to receive an ID 2456 . Since the SPD 2143 is now on the same bus 2450 as the memory devices 2101 , the SPD 2143 may be configured to use an address that is unique among the SPD 2143 and the memory devices 2101 . The SPD 2143 may be configured to receive an ID 2457 . The SPD 2143 may be configured to convert the ID 2457 into an address to use on the bus 2450 . In an embodiment, the form of the ID 2457 may be different from the IDs 2456 . For example, the ID 2457 may include three pins used to indicate the address of the SPD 243 while the IDs 2456 may each include four pins. Moreover, IDs on the ID 2457 and the IDs 2456 may, but need not correspond to the same address. For example, an ID 2457 of 010b and an ID 2456 of 0010b may correspond to different addresses. In an embodiment, a number of additional pins may be used for the memory devices 2101 . In a particular embodiment, a memory device 2101 may include two additional pins, one for a clock signal and another for a data signal, similar to FIG. 24 , but also four pins for the IDs 2456 . The controller 2141 may include four pins for the busses 2450 and 2452 , three pins for the address 2454 , and two pins for the control signals 2451 and 2147 similar to FIG. 24 , if used. Referring to FIG. 26 , in this embodiment, the controller 2141 , memory devices 2101 , and the SPD 2143 may be similar to those of FIG. 25B . The SPD 2143 is configured to receive the address 2454 similar to the controller 2141 . In this embodiment, however, the memory devices 2101 are not configured to receive IDs 2456 . In contrast, the memory devices 2101 are each coupled to a common bus 2459 , such as a single wire or net separate from the bus 2450 - 1 . In an embodiment, the common bus 2459 may be a daisy-chain link. In an embodiment, the memory devices 2101 may be coupled to a bus 2459 . The memory devices 2101 are configured to determine if information received through the controller 2141 is associated with the memory device 2101 in response to a signal received through the bus 2459 . In an embodiment, the memory devices 2101 may be configured to communicate over the bus 2459 to establish the addresses of the memory devices 101 on the bus 2450 . For example, a first memory device may determine its address in response to a counter and increment the counter. The value of the counter is transmitted to a second memory device 2101 . The second memory device 2101 is also configured to determine its address in response to the counter and increment the counter. This procedure may continue until each memory device 2101 has a unique address. In an embodiment, a number of additional pins may be used for the memory devices 2101 . In a particular embodiment, a memory device 2101 may include two additional pins, one for a clock signal and another for a data signal, similar to FIG. 24 , but also one additional pin for the bus 2459 . The controller 2141 may include six pins for the busses 2452 , 2450 - 1 , and 2450 - 2 , three pins for the address 2454 , and two pins for the control signals 2451 and 2147 similar to FIG. 24 , if used. In an embodiment, in any of the above configurations, the controller 2141 may be configured to determine the addresses of the memory devices 2101 and the SPD 2143 , if coupled to the same bus. For example, the controller 2141 may be configured to use the SMBus address resolution protocol to dynamically assign addresses to the memory devices 2101 and the SPD 2143 . Although one technique of determining the addresses on one type of bus has been used as an example, other techniques may be used as appropriate to the particular bus 2450 . FIG. 27 is a schematic view of a memory module according to another embodiment. In this embodiment, the memory module 2700 is similar to the memory module 2100 of FIG. 21 . A repeater 2750 , however, is used as the controller 2141 . The repeater 2750 may be configured to extend the communication link coupled to the module error interface 2138 so that the error interfaces 2139 of the memory devices 2101 and an SPD 2143 , if present, may be coupled to the communication link. In a first example, if the loading of the memory devices 2101 and/or attributes of the network allow, the repeater 2750 may merely be wires, such as wires of a shared medium. In another example, the repeater 2750 may include a device configured to allow more devices to be attached to the bus, allow a longer bus, or the like. Although the term repeater has been used, the repeater 2750 may also include a hub, extender, switch, bridge, or the like. And device that can extend a network may be used as the repeater 2750 . As the memory devices 2101 may be directly accessible through the module interface 2138 , each memory device 2101 of a memory module 2700 may be individually interrogated for error information by an external controller as described above, such as a BMC. In an embodiment, a configuration of the memory devices 2101 , an SPD 2143 and the repeater 2750 may be similar to that of FIG. 25B . That is, referring to FIGS. 25B and 27 , the memory devices 2101 may be each coupled to the bus 2450 , which is also coupled to the repeater 2750 . Each of the memory devices 2101 may also be configured to receive an ID 2456 . As a result, the memory devices 2101 may be configured to determine their respective addresses for use on the bus 2450 . In an embodiment, particular addresses or IDs may be associated with various types of devices. For example, temperature sensors may be associated with a particular address or address range. The memory devices 2101 , however, may not have such an address or ID association. Accordingly, an address, ID, range of such parameters, or the like may be repurposed from other types of devices, such as devices that are not used in a system that may use the memory modules described herein. For example, an ID or address for an I2C mux may be used as the ID or address of the memory devices 2101 . In an embodiment, a memory system architecture utilizing a coupled in-DRAM ECC can use an Operating System (OS) driver provide an address-conversion technique that converts a device address (DA) to physical address (PA) independent of a central processing unit/memory controller (CPU/MC). Thus, a coupled in-DRAM ECC memory system architecture as disclosed herein can replace a computing system architecture that uses a high-cost CPU, such as a XEON CPU, with lower-cost CORE/ARM CPU. Moreover, a Reliability, Availability and Serviceability (RAS) capability can be transferred from a system CPU to a memory system, thereby providing significant end customer total cost of ownership (TCO) cost reduction. FIG. 28 is a schematic view of a system with a memory system architecture with in-DRAM error correction and that provides device address (DA) to physical address (PA) conversion according to an embodiment. In this embodiment, the system 2800 includes memories 2802 , a processor 2804 , kernel 2810 with an EC module 2818 and an MCA module 2826 responsive to information 2820 and 2822 similar to the memory 1002 , processor 1004 , and software 1010 with the EC module 1018 and MCA module 1026 responsive to information 1020 and 1022 of FIG. 10 , and similar to memory 1302 , processor 1304 , and software 1310 with EC module 1318 and MCA module 1326 of FIG. 13 . In this embodiment, like the embodiment of FIG. 13 , each of the memories 2802 is error correction code (ECC) dual in-line memory module (DIMM). Each ECC DIMM 2802 is configured to store data and correct at least an error in the stored data. In this embodiment, the ECC DIMMs 2802 are each coupled to a memory controller (MC) 2850 of the processor 2804 through corresponding communication paths 2864 . The communication paths 2864 include at least lines for data signals and data strobe signals or the like similar to the communication path 506 of FIG. 5 . The ECC DIMMs 2802 are each coupled to the processor 2804 through a communication path 2808 including a bus 2812 and a BMC 2814 , and a bus 2816 similar to the bus 312 and BMC 314 of FIG. 3 . Communication path 2808 also includes a bus 2822 coupled between BMC 2814 and EC module 2818 . In one exemplary embodiment, bus 2822 is part of a System Management Bus (SMBus). In one exemplary embodiment, EC module 2818 interfaces to bus 2822 through an Intelligent Platform Management Interface (IPMI). In an embodiment, the ECC DIMMs 2802 may be configured to correct one or more errors in data read from the ECC DIMMs 2802 . The error correction techniques may include a single error correction-double error detection (SEC-DEC) technique, a single-chip chipkill technique, a double-chip chipkill technique, or the like. Any error correction technique may be used. In this embodiment, the memory controller (MC) 2850 is not configured to perform error correction or alternatively, is not configured to receive error information from the ECC DIMMs 2802 . As the data passed from the ECC DIMMs 1302 is already corrected, the MC 2850 may not even receive any information representing a correctible error. The error information and, in particular, corrected error information, however, may be transmitted to the processor 2804 through the communication path 2808 , i.e., through the busses 2812 and 2822 , and the BMC 2814 . Further, the memory controller (MC) 2850 may not be configured to convert a device address (DA) of a memory 1302 to physical address (PA) for kernel 2810 . In an embodiment, the processor 2804 may be an existing processor that is otherwise not capable of performing error correction, but has an interface capable of connecting to the bus 2822 . Once, however, the processor 2804 is configured by the kernel 2810 and, in particular, the EC module 2818 , the overall system 2800 may be configured to perform error correction similar to a system having a processor capable of error correction, and may be configured to perform device address (DA) to physical address (PA) conversion. In an embodiment, the EC module 2818 may create a virtual memory controller with ECC interface. For example, as described above, the EC module 2818 may be configured to receive information from the MCA module 2826 . That information may include information that an actual memory controller with ECC interface may provide without some or all error information. The EC module 2818 may supplement the information from the MCA module 2826 with the error information to create a complete set of information expected from a memory controller with ECC interface. As a result, the EDAC module 2824 , a memory ECC daemon 2858 , other applications 2860 , or the like may be used without change from those used with processors with error correction. For example, the EDAC module 2824 may be configured to poll the EC module 2818 for memory ECC information. In return, the EC module 2818 may return the error information received through the second communication path 2808 . The memory ECC daemon 2858 , in communication with the EDAC module 2824 , may poll the EDAC module 2824 for error information. The memory ECC daemon 2858 may then take actions according to the error information at an application level. Such actions may include page retirement, other actions to manage errors to keep the system 2800 running, maintain a level of reliability, recommend decommissioning, or the like. In an embodiment, an address-conversion technique is provided for coupled in-DRAM ECC memory systems to convert a device address (DA) to physical address (PA) translation independent of a CPU memory controller. During boot up of EC module 2818 , a shell script delivers device address to physical address (DA-to-PA) conversion table information to EC module 2818 . The DA-to-PA conversion table information is based on the particular CPU 2818 and the Basic Input/Output System (BIOS) in use. During system operation, device addresses (DA) of memory 2802 are converted to physical addresses (PA) by EC module 2818 for kernel 2810 using the DA-to-PA conversion table information. In one exemplary embodiment, the DA-to-PA conversion information is generated during a test operation to provide a DA-to-PA conversion table. FIG. 29 is a flowchart 2900 of an exemplary technique of generating DA-to-PA conversion information for a non-XOR mapping configuration according to an embodiment. The process of FIG. 29 toggles a physical address one bit at a time and determines which device address bit toggles to thereby generate DA-to-PA conversion information. Search complexity is O(n), 1 bit per one search, and is therefore relatively compute-inexpensive. The process begins at operation 2902 . Flow continues to operation 2904 where an index i is set equal to 0. At operation 2906 , physical address PA(i) of memory 2802 is accessed (i.e., PA(i)=1). At operation 2908 , an index j is set equal to 0. At operation 2910 , it is determined whether device address DA(j) is true (i.e., DA(j)=1) as a result of accessing physical memory PA(i). If, at operation 2910 , it is determined that device address DA(j) is true, flow continues to operation 2912 where DA-to-PA conversion information is stored for PA(i) being mapped onto DA(j) for the particular indices i and j. In one embodiment, determining whether PA(i) is mapped on to DA(j) is done using, for example, a logic analyzer coupled to the address lines of system 2800 . Flow continues to operation 2914 where it is determined whether index i is equal to the maximum physical address of system 2800 (i.e., i max ). If, at operation 2914 , index i is equal to i max , flow continues to operation 2916 where the process ends and a DA-to-PA conversion table can be formed, otherwise flow continues to operation 2918 where index i is incremented. Flow returns to operation 2906 . If, at operation 2910 , it is determined that the device address DA(j) is not true, flow continues to operation 2920 where it is determined whether index j is equal to the maximum device address for the system (i.e., j max ). If, at operation 2920 , index j is equal to j max , flow continues to operation 2914 . If, at operation 2920 , index j is not equal to j max , flow continues to operation 2922 where index j is incremented. Flow returns to operation 2910 . FIG. 30A depicts the type of address conversion information that is stored for each DA address when DA(j) is determined to be true for a memory 2802 operating in a single channel/dual asymmetric mode according to an embodiment. As depicted FIG. 30A , the bank index is mapped from the middle order bits, while channel and rank index are mapped from higher order bits to account for data being interleaved across several SDRAM banks in order to provide adequate bandwidth for a processor. Channel index is mapped from the highest address bit, thereby leaving two independent channels. FIG. 30B depicts the type of address conversion information that is stored for each DA address when DA(j) is determined to be true for a memory 2802 operating in a dual channel symmetric mode according to an embodiment. In the dual channel symmetric mode, bit[6] is used as the channel index. Depending on which mode is used in an embodiment, the stored address conversion information depicted in either FIG. 30A or FIG. 30B is hard coded into the BIOS of the system and is transferred to the EC module 2818 during boot up of the EC module 2818 . FIG. 31 is a flowchart 3100 of an exemplary technique of generating DA-to-PA conversion information for an XOR mapping configuration according to an embodiment. In one exemplary embodiment, the DA-to-PA conversion information generated by this process is generated during a test operation. The process toggles a physical address one bit at a time, and checks which device address bit toggles to generate DA-to-PA conversion information. Search complexity for the XOR mapping configuration is O(n), 1 bit per one search, and is therefore relatively compute-inexpensive. The process begins at operation 3102 . Flow continues to operation 3104 where an index i is set equal to 0. At operation 3106 , physical address PA(i) of memory 2802 is accessed (i.e., PA(i)=1). At operation 3108 , an index j is set equal to 0, and an index k is set equal to 0. At operation 3110 , it is determined whether device address DA(j) is true (i.e., DA(j)=1). If, at operation 3110 , it is determined that device address DA(j) is true, flow continues to operation 3112 where index k is set equal to j+1. Flow continues to operation 3114 where it is determined whether device address DA(k) is true (i.e., DA(k)=1). In one embodiment, determining whether PA(i) is mapped on to DA(k) is done using, for example, a logic analyzer coupled to the address lines of system 2800 . If, at operation 3114 , it is determined that DA(k)=1, flow continues to operation 3116 where physical address PA(i) is mapped on to device address DA(j) XOR DA(k) and the address conversion information is stored. Flow continues to operation 3118 . If, at operation 3114 , it is determined that device DA(k) is not true (i.e., DA(k)≠1, then flow continues to operation 3120 where it is determined whether index k is equal to the maximum device address for the system (i.e., j max ). If so, flow continues to operation 3122 where physical address PA(i) is mapped onto device address DA(j) (i.e., j max ) and the address conversion information is stored. Flow continues to operation 3118 . In, at operation 3120 , it is determined that index k is not equal to j max , flow continues to operation 3124 where index k is incremented. Flow returns to operation 3114 . If, at operation 3110 , it is determined that the device address DA(j) is not true, flow continues to operation 3126 where it is determined whether index j is equal to the maximum device address for the system (i.e., j max ). If, at operation 3126 , index j is equal to j max , flow continues to operation 3118 . If, at operation 3126 , index j is not equal to j max , flow continues to operation 3128 where index j is incremented. Flow returns to operation 3110 . At operation 3118 , it is determined whether index i is equal to i max , if so, flow continues to operation 3130 where the process ends, otherwise flow continues to operation 3132 where index i is incremented, and flow returns to operation 3106 . FIG. 32 depicts the type of address conversion information that is stored for each DA address when DA(k) is determined to be true for a memory system having an XOR mapping configuration according to an embodiment. In one exemplary embodiment, the XOR mapping configuration depicted in FIG. 32 includes a permutation-based page interleaving address mapping technique. The permutation-based page interleaving technique exclusive ORs (XORs) the bank index with a range of row index bits that correspond to the lowest bits of an L2 cache tag in a cache address to convert row conflicts due mainly to L2 conflict misses into accesses to different banks to reduce a row conflict rate and preserve spatial locality in the SDRAM rows. The stored address conversion information depicted in FIG. 32 is hard coded into the BIOS of the system and is transferred to the EC module 2818 during boot up of the EC module 2818 . FIG. 33 is a schematic view of a system with a memory system architecture according to an embodiment. In this embodiment, the system 3300 includes a processor 3304 and software 3310 similar to the processor 104 and software 110 of FIG. 1 . In this embodiment, however, the system 3300 includes a memory 3302 and an error correction circuit 3368 . In this embodiment, the memory 3302 is not configured to correct errors. The memory is coupled to the error correction circuit 3368 and is configured to transmit data to the error correction circuit through communication path 3372 . The error correction circuit 3368 is configured to correct errors in data received from the memory 3302 . The error correction circuit 3368 is coupled to the processor 3304 through a second communication path 3370 and a third communication path 3308 . The second communication path 3370 is the main path through which the processor 3304 is configured to receive data. For example, the second communication path 3370 may be a system bus for the processor 3304 . In contrast, the third communication path 3308 is similar to the communication path 108 or the like described above. That is, the third communication path 3308 may be a separate, out-of-band communication path, include a controller 3314 , or have other variations similar to the communication paths described above. FIG. 34 is a schematic view of a server according to an embodiment. In this embodiment, the server 3400 may include a stand-alone server, a rack-mounted server, a blade server, or the like. The server 3400 includes a memory 3402 , a processor 3404 , and a BMC 3414 . The processor 3404 is coupled to the memory 3402 through the communication path 3406 . The BMC is coupled to the processor 3404 through the bus 3416 and coupled to the memory 3402 through the bus 3412 . The memory 3402 , processor 3404 , BMC 3414 , communication path 3406 , and busses 3412 and 3416 may be any of the above described corresponding components. FIG. 35 is a schematic view of a server system according to an embodiment. In this embodiment, the server system 3500 includes multiple servers 3502 - 1 to 3502 -N. The servers 3502 are each coupled to a manager 3504 . One or more of the servers 3502 may be similar to the server 3300 described above. In addition, the manager 3504 may include a system with a memory system architecture as described above. The manager 3504 is configured to manage the servers 3502 and other components of the server system 3500 . For example, the manager 3504 may be configured to manage the configurations of the servers 3502 . Each server 3502 is configured to communicate error information to the manager 3504 . The error information may include correctible error information communicated to a processor in one of the servers 3502 as described above or other error information based on the correctible error information. The manager 3504 may be configured to take actions based on that error information. For example, server 3502 - 1 may have a number of correctible errors that exceeds a threshold. The manager 3504 may be configured to transfer the functions of that server 3502 - 1 to server 3502 - 2 and shutdown server 3502 - 1 for maintenance and/or replacement. Although a particular example has been given, the manager 3504 may be configured to take other actions based on the error information. FIG. 36 is a schematic view of a data center according to an embodiment. In this embodiment, the data center 3600 includes multiple servers systems 3602 - 1 to 3602 -N. The server systems 3602 may be similar to the server system 3400 described above in FIG. 34 . The server systems 3602 are coupled to a network 3604 , such as the Internet. Accordingly, the server systems 3602 may communicate through the network 3604 with various nodes 3606 - 1 to 3606 -M. For example, the nodes 3606 may be client computers, other servers, remote data centers, storage systems, or the like. An embodiment includes a system, comprising: an Error Correcting Code (ECC) memory comprising a plurality of memory locations, each memory location corresponding to a device address of the ECC memory; a system management bus (SMB); a baseboard management controller (BMC) coupled to the ECC memory through the SMB; and an operating system comprising a driver module coupled to the BMC through the SMB, the driver module being configured to receive through the Memory device address information associated with the ECC memory and to convert the device address information into physical address information independent of an ECC memory controller. In an embodiment, the driver module comprises a device address to physical address (DA-to-PA) conversion table with which the driver module converts the device address information into physical address information. An embodiment further comprises a processing device coupled to the ECC memory and a Basic Input/Output System (BIOS) for the system, and wherein the DA-to-PA conversion table is based on configuration information for the processing device and configuration information for the BIOS. In an embodiment, the DA-to-PA conversion table is received by the driver module from a shell script during initialization of the driver module. In an embodiment, the driver module is further configured to store the DA-to-PA conversion table within the driver module. In an embodiment, the ECC memory comprises Single-Error Correcting, Double-Error Detection (SECDED) ECC memory, a single-chip Chipkill ECC memory or a double-chip Chipkill ECC memory. In an embodiment, the system is part of a server system. Another embodiment includes a system, comprising: a processing device comprising an error-correcting code (ECC) memory controller; an ECC memory coupled to the ECC memory controller of the processing device, the ECC memory comprising a plurality of memory locations, each memory location corresponding to a device address of the ECC memory; a system management bus (SMB); a baseboard management controller (BMC) coupled to the ECC memory through the SMB; and an operating system configured to manage the processing device, the operating system comprising a driver module coupled to the BMC through the SMB and bypassing the ECC memory controller of the processing device, the driver module being configured to receive through the Memory device address information associated with the ECC memory and to convert the address information into physical address information independent of the ECC memory controller. In an embodiment, the driver module comprises a device address to physical address (DA-to-PA) conversion table with which the driver module converts the address information into physical address information. In an embodiment, the DA-to-PA conversion table is based on configuration information for the processing device and configuration information for the Basic Input/Output System (BIOS) for the system. In an embodiment, the DA-to-PA conversion table is received by the driver module from a shell script during initialization of the driver module. In an embodiment, the driver module is further configured to store the DA-to-PA conversion table within the driver module. In an embodiment, the ECC memory comprises Single-Error Correcting, Double-Error Detection (SECDED) ECC memory, a single-chip Chipkill ECC memory or a double-chip Chipkill ECC memory. In an embodiment, the system is part of a server system. Another embodiment includes a method, comprising: receiving at a driver module of an operation system kernel device address information for an Error Correction Code (ECC) memory from a system management bus (SMB), the ECC memory comprising a plurality of memory locations, and each memory location corresponding to a device address of the ECC memory; converting at the driver module the device address information into physical address information; and sending the physical address information to the operating system kernel. In an embodiment, the driver module comprises a device address to physical address (DA-to-PA) conversion table, and converting the device address information into physical address information comprises reading the physical address information from the DA-to-PA conversion table for the received device address information. In an embodiment, the DA-to-PA conversion table is based on configuration information for a processing device coupled to the memory system and configuration information for a Basic Input/Output System (BIOS) for the memory system. An embodiment further comprises receiving the DA-to-PA conversion table by the driver module from a shell script during initialization of the driver module. In an embodiment, the DA-to-PA conversion table is stored within the driver module. Although the structures, methods, and systems have been described in accordance with exemplary embodiments, one of ordinary skill in the art will readily recognize that many variations to the disclosed embodiments are possible, and any variations should therefore be considered to be within the spirit and scope of the apparatus, method, and system disclosed herein. Accordingly, many modifications may be made by one of ordinary skill in the art without departing from the scope of the appended claims.","lang":"en"},"publication_type":"PATENT_APPLICATION"}
{["lens_id":"175-002-035-685-886","jurisdiction":"RO","doc_number":"135932","kind":"A2","date_published":"2022-08-30","doc_key":"RO_135932_A2_20220830","docdb_id":578603085,"lang":"ro","biblio":{"publication_reference":{"jurisdiction":"RO","doc_number":"135932","kind":"A2","date":"2022-08-30"},"application_reference":{"jurisdiction":"RO","doc_number":"202100077","kind":"A","date":"2021-02-25"},"priority_claims":{"claims":[{"jurisdiction":"RO","doc_number":"202100077","kind":"A","date":"2021-02-25","sequence":1}],"earliest_claim":{"date":"2021-02-25"}},"invention_title":[{"text":"COMPOSITION AND PROCESS FOR PREPARING \"BIOBASED\" POLYAMIDE WITH IMPROVED FIRE RESISTANCE","lang":"en"},{"text":"COMPOZIŢIE ŞI PROCEDEU DE OBŢINERE PE BAZĂ DE POLIAMIDĂ \"BIOBASED\", CU REZISTENŢĂ LA FOC ÎMBUNĂTĂŢITĂ","lang":"ro"}],"parties":{"applicants":[{"residence":"RO","extracted_name":{"value":"INSTITUTUL NAT DE CERCETARE DEZVOLTARE PENTRU CHIMIE SI PETROCHIMIE ICECHIM"}},{"residence":"RO","extracted_name":{"value":"UNIV DIN BUCURESTI"}}],"inventors":[{"residence":"RO","sequence":1,"extracted_name":{"value":"COROBEA MIHAI COSMIN"}},{"residence":"RO","sequence":2,"extracted_name":{"value":"VULUGA ZINA"}},{"residence":"RO","sequence":3,"extracted_name":{"value":"ZĂVOIANU RODICA"}},{"residence":"RO","sequence":4,"extracted_name":{"value":"PAVEL DUMITRU OCTAVIAN"}},{"residence":"RO","sequence":5,"extracted_name":{"value":"TEODORESCU GEORGE MIHAIL"}},{"residence":"RO","sequence":6,"extracted_name":{"value":"AFILIPOAEI ANDREEA"}},{"residence":"RO","sequence":7,"extracted_name":{"value":"STAMATE ALEXANDRA ELISABETA"}},{"residence":"RO","sequence":8,"extracted_name":{"value":"CRUCEANU ANCA"}}]},"classifications_ipcr":{"classifications":[{"symbol":"C08L77/00"},{"symbol":"C08K3/016"}]},"cited_by":{}},"families":{"simple_family":{"members":[{"document_id":{"jurisdiction":"RO","doc_number":"135932","kind":"A2","date":"2022-08-30"},"lens_id":"175-002-035-685-886"}],"size":1},"extended_family":{"members":[{"document_id":{"jurisdiction":"RO","doc_number":"135932","kind":"A2","date":"2022-08-30"},"lens_id":"175-002-035-685-886"}],"size":1}},"legal_status":{"calculation_log":["Application Filing Date: 2021-02-25"],"patent_status":"PENDING"},"abstract":[{"text":"The invention relates to a matter composition, consisting of biobased polyamide (polyamide obtained entirely from renewable sources) (bio-PA), an antioxidant and a fire-proofing agent without halogenated derivatives and to a process for preparing it. The composition, as claimed by the invention, exhibits an improved resistance to fire (compared to bio-PA) and it is constituted, in mass percentage, of 84...96% bio-PA, 3.92...15.9% fire-proofing agent compound, such as lamellar double magnesium and aluminium hydroxide with molybdate anions bound in the interlayer region (LDHMo) and 0.08...0.25% an antioxidant agent, such as Irganox 1076. The process, as claimed by the invention, consists in mixing bio-PA with the antioxidant agent in a rotary mixer, at room temperature, for 10...15 min, adding the fire-proofing agent LDHMo, and continuing mixing for another 10...15 min, homogenizing the resulting mixture in a molten state in a double-screw extruder, at a speed of 150...160 rpm and a temperature of the extruder head of 210...220°C, granulating the extruded threads and the processing the granules by injection, resulting in a material characterized by a flame retardant rating V-0, a value of the limiting oxygen index (LOI) of more than 31%, a shock resistance improved by more than 16%, which maintains at least 60% of the initial elasticity of the bio-PA.","lang":"en"},{"text":"Invenţia se referă la o compoziţie de material şi la un procedeu de obţinere a acesteia constituită din poliamidă de tip biobased (poliamidă obţinută integral din surse regenerabile) (bio-PA), antioxidant şi un ignifugant fără derivaţi halogenaţi. Compoziţia, conform invenţiei, prezintă rezistenţă la foc îmbunătăţită (faţă de bio-PA) şi este constituită în procente masice din 84...96% bio-PA, 3,92...15,9% un compus ignifugant de tip hidroxid dublu lamelar de magneziu şi aluminiu cu anioni molibdat legaţi în regiunea interstrat (LDHMo) şi 0,08...0,25% un agent antioxidant de tip Irganox 1076. Procedeul, conform invenţiei, constă în amestecarea într-un amestecător rotativ, la temperatura camerei, a bio-PA cu agentul antioxidant, timp de 10...15 min, adăugarea agentului de ignifugare LDHMo, şi continuarea amestecării încă 10...15 min, omogenizarea în topitură a amestecului rezultat într-un extruder dublu-şnec, la o turaţie de 150...160 rpm şi o temperatură pe capul de extrudere de 210...220°C, granularea firelor extruse şi prelucrarea prin injecţie a granulelor, rezultând un material caracterizat prin clasa V-o de ignifugare, o valoare a indicelui limită de oxigen (LOI) de peste 31%, o rezistenţă la şoc îmbunătăţită cu peste 16% şi o menţinere a cel puţin 60% din elasticitatea iniţială a bio-PA.","lang":"ro"}],"publication_type":"UNKNOWN"}
{"lens_id":"150-660-498-546-118","jurisdiction":"RO","doc_number":"135742","kind":"A2","date_published":"2022-05-30","doc_key":"RO_135742_A2_20220530","docdb_id":573448506,"lang":"ro","biblio":{"publication_reference":{"jurisdiction":"RO","doc_number":"135742","kind":"A2","date":"2022-05-30"},"application_reference":{"jurisdiction":"RO","doc_number":"202000724","kind":"A","date":"2020-11-11"},"priority_claims":{"claims":[{"jurisdiction":"RO","doc_number":"202000724","kind":"A","date":"2020-11-11","sequence":1}],"earliest_claim":{"date":"2020-11-11"}},"invention_title":[{"text":"CONCENTRATE MEANT TO IMPROVE IMPACT RESISTANCE OF BIOBASED POLYAMIDE, PREPARATION PROCESS AND USE THEREOF","lang":"en"},{"text":"CONCENTRAT PENTRU ÎMBUNĂTĂŢIREA REZISTENŢEI LA ŞOC A POLIAMIDEI BIOBASED, PROCEDEU DE OBŢINERE ŞI DE UTILIZARE A ACESTUIA","lang":"ro"}],"parties":{"applicants":[{"residence":"RO","extracted_name":{"value":"INSTITUTUL NAT DE CERCETARE DEZVOLTARE PENTRU CHIMIE SI PETROCHIMIE ICECHIM"}}],"inventors":[{"residence":"RO","sequence":1,"extracted_name":{"value":"VULUGA ZINA"}},{"residence":"RO","sequence":2,"extracted_name":{"value":"COROBEA MIHAI COSMIN"}},{"residence":"RO","sequence":3,"extracted_name":{"value":"FLOREA DOREL"}},{"residence":"RO","sequence":4,"extracted_name":{"value":"TEODORESCU GEORGE-MIHAIL"}},{"residence":"RO","sequence":5,"extracted_name":{"value":"AFILIPOAEI ANDREEA"}}]},"classifications_ipcr":{"classifications":[{"symbol":"C08G69/00"}]},"cited_by":{}},"families":{"simple_family":{"members":[{"document_id":{"jurisdiction":"RO","doc_number":"135742","kind":"A2","date":"2022-05-30"},"lens_id":"150-660-498-546-118"}],"size":1},"extended_family":{"members":[{"document_id":{"jurisdiction":"RO","doc_number":"135742","kind":"A2","date":"2022-05-30"},"lens_id":"150-660-498-546-118"}],"size":1}},"legal_status":{"calculation_log":["Application Filing Date: 2020-11-11"],"patent_status":"PENDING"},"abstract":[{"text":"The invention relates to a process for preparing composites based on polyamid (PA) resulting from exclusively biorenewable sources, which are meant for making injection moulded parts for motor vehicle industry. According to the invention, the process comprises the following stages: preparing a concentrate by mixing, in a rotary mixer, at the ambient temperature, 45.86...49.25% PA obtained exclusively from renewable sources (bio-PA), of medium viscosity, 11.46...14.96% compatibility agent - ethylene copolymer modified with anhydride, additives specific for melt processing, and 38.88...39.08% modified nanographene, melt homogenization thereof in a double-screw extruder in equidirection, mixing the concentrate as granules in a ratio of 16.67...21.80% with bio-PA with homogenization, injection moulding at a temperature of 220...230°C and a mould temperature of 70...90°C, to result in composites with impact resistance improved by at least 40%, with an elasticity modulus higher by 10...20% and a traction resistance similar to bio-PA.","lang":"en"},{"text":"Invenţia se referă la un procedeu de obţinere a unor compozite pe bază de poliamidă (PA) rezultată integral din surse bioregenerabile, utilizate la fabricarea de repere injectate pentru industria auto. Procedeul, conform invenţiei, constă în etapele: realizarea unui concentrat prin amestecarea într-un amestecător rotativ, la temperatura camerei a 45,86...49,25% PA integral din resurse naturale regenerabile (bio-PA), de viscozitate medie, 11,46...14,96% agent de compatibilizare copolimer de etilenă modificată cu anhidridă, aditivi specifici pentru prelucrarea în topitură, şi 38,88...39,08% nanografenă modificată, omogenizarea în topitură într-un extruder dublu-şnec, echisens, amestecarea concentratului sub formă de granule în proporţie de 16,67...21,80% cu bio-PA cu omogenizare, prelucrarea prin injecţie la temperatura de 220...230°C şi temperatura matriţei 70...90°C, din care rezultă compozite cu rezistenţă la şoc îmbunătăţită cu min 40%, un modul de elasticitate mai mare cu 10...20% şi o rezistenţă la tracţiune similară bio-PA.","lang":"ro"}],"publication_type":"UNKNOWN"}
{"lens_id":"107-346-974-694-812","jurisdiction":"US","doc_number":"9785570","kind":"B2","date_published":"2017-10-10","doc_key":"US_9785570_B2_20171010","docdb_id":484612499,"lang":"en","biblio":{"publication_reference":{"jurisdiction":"US","doc_number":"9785570","kind":"B2","date":"2017-10-10"},"application_reference":{"jurisdiction":"US","doc_number":"201514863446","kind":"A","date":"2015-09-23"},"priority_claims":{"claims":[{"jurisdiction":"US","doc_number":"201514863446","kind":"A","date":"2015-09-23","sequence":1},{"jurisdiction":"US","doc_number":"201562130600","kind":"P","date":"2015-03-09","sequence":2}],"earliest_claim":{"date":"2015-03-09"}},"invention_title":[{"text":"Memory devices and modules","lang":"en"}],"parties":{"examiners":{"primary_examiner":{"department":"2112","extracted_name":{"value":"Fritz Alphonse"}}},"applicants":[{"residence":"KR","extracted_name":{"value":"SAMSUNG ELECTRONICS CO LTD"}}],"inventors":[{"residence":"US","sequence":1,"extracted_name":{"value":"HU CHAOHONG"}},{"residence":"US","sequence":2,"extracted_name":{"value":"ZHENG HONGZHONG"}},{"residence":"US","sequence":3,"extracted_name":{"value":"NIU DIMIN"}}],"agents":[{"extracted_name":{"value":"Renaissance IP Law Group LLP"}}],"owners_all":[{"recorded_date":"2015-11-01","execution_date":"2015-09-21","extracted_name":{"value":"SAMSUNG ELECTRONICS CO. LTD"},"extracted_address":"129, SAMSUNG-RO, YEONGTONG-GU, SUWON-SI, GYEONGGI-DO, 443-742","extracted_country":"KR"}]},"classifications_ipcr":{"classifications":[{"symbol":"G06F11/10"},{"symbol":"G06F12/1009"}]},"classifications_cpc":{"classifications":[{"symbol":"G06F11/1048"},{"symbol":"G06F12/0246"},{"symbol":"G06F12/0607"},{"symbol":"G06F2212/7201"},{"symbol":"G06F2212/65"},{"symbol":"G06F2212/1016"},{"symbol":"G06F2212/1032"},{"symbol":"G06F12/1009"},{"symbol":"G06F2212/65"},{"symbol":"G06F2212/1016"},{"symbol":"G06F2212/1032"},{"symbol":"G06F11/1048"},{"symbol":"G06F12/0246"},{"symbol":"G06F2212/7201"},{"symbol":"G06F12/0607"}]},"references_cited":{"citations":[{"sequence":1,"patcit":{"document_id":{"jurisdiction":"US","doc_number":"4570217","kind":"A","date":"1986-02-11"},"lens_id":"120-225-703-215-322"},"cited_phase":"SEA"},{"sequence":2,"patcit":{"document_id":{"jurisdiction":"US","doc_number":"6681284","kind":"B1","date":"2004-01-20"},"lens_id":"046-340-426-581-94X"},"cited_phase":"SEA"},{"sequence":3,"patcit":{"document_id":{"jurisdiction":"US","doc_number":"9544976","kind":"B2","date":"2017-01-10"},"lens_id":"094-203-954-508-21X"},"cited_phase":"SEA"},{"sequence":4,"patcit":{"document_id":{"jurisdiction":"US","doc_number":"2003123389","kind":"A1","date":"2003-07-03"},"lens_id":"040-357-076-110-445"},"cited_phase":"SEA"},{"sequence":5,"patcit":{"document_id":{"jurisdiction":"US","doc_number":"2015168156","kind":"A1","date":"2015-06-18"},"lens_id":"034-771-285-567-958"},"cited_phase":"SEA"},{"sequence":1,"patcit":{"document_id":{"jurisdiction":"US","doc_number":"5737744","kind":"A","date":"1998-04-07"},"lens_id":"095-823-086-188-546"},"cited_phase":"APP"},{"sequence":2,"patcit":{"document_id":{"jurisdiction":"US","doc_number":"7636833","kind":"B2","date":"2009-12-22"},"lens_id":"162-022-995-339-397"},"cited_phase":"APP"},{"sequence":3,"patcit":{"document_id":{"jurisdiction":"US","doc_number":"8671330","kind":"B2","date":"2014-03-11"},"lens_id":"154-244-748-971-778"},"cited_phase":"APP"},{"sequence":4,"patcit":{"document_id":{"jurisdiction":"US","doc_number":"8738819","kind":"B2","date":"2014-05-27"},"lens_id":"025-096-255-238-552"},"cited_phase":"APP"}],"patent_count":9},"cited_by":{}},"families":{"simple_family":{"members":[{"document_id":{"jurisdiction":"US","doc_number":"9785570","kind":"B2","date":"2017-10-10"},"lens_id":"107-346-974-694-812"},{"document_id":{"jurisdiction":"KR","doc_number":"20160110148","kind":"A","date":"2016-09-21"},"lens_id":"013-051-366-465-278"},{"document_id":{"jurisdiction":"KR","doc_number":"102262575","kind":"B1","date":"2021-06-09"},"lens_id":"022-675-025-368-981"},{"document_id":{"jurisdiction":"US","doc_number":"20160266975","kind":"A1","date":"2016-09-15"},"lens_id":"130-527-191-432-660"}],"size":4},"extended_family":{"members":[{"document_id":{"jurisdiction":"US","doc_number":"9785570","kind":"B2","date":"2017-10-10"},"lens_id":"107-346-974-694-812"},{"document_id":{"jurisdiction":"KR","doc_number":"20160110148","kind":"A","date":"2016-09-21"},"lens_id":"013-051-366-465-278"},{"document_id":{"jurisdiction":"KR","doc_number":"102262575","kind":"B1","date":"2021-06-09"},"lens_id":"022-675-025-368-981"},{"document_id":{"jurisdiction":"US","doc_number":"20160266975","kind":"A1","date":"2016-09-15"},"lens_id":"130-527-191-432-660"}],"size":4}},"legal_status":{"granted":true,"grant_date":"2017-10-10","anticipated_term_date":"2035-11-26","calculation_log":["Application Filing Date: 2015-09-23","Granted Date: 2017-10-10","Applied 64 days term extension.","Anticipated Termination Date: 2035-11-26"],"patent_status":"ACTIVE"},"abstract":[{"text":"An embodiment includes a system, comprising: an Error Correcting Code (ECC) memory comprising a plurality of memory locations, each memory location corresponding to a device address of the ECC memory; a system management bus (SMB); a baseboard management controller (BMC) coupled to the ECC memory through the SMB; and an operating system comprising a driver module coupled to the BMC through the SMB, the driver module being configured to receive through the Memory device address information associated with the ECC memory and to convert the device address information into physical address information independent of an ECC memory controller.","lang":"en"}],"claims":[{"claims":[{"claim_text":["1. A driver module for an operating system, comprising: an interface configured to receive from a system management bus (SMB) device address information associated with an Error Correcting Code (ECC) memory, the ECC memory comprising a plurality of memory locations, each memory location corresponding to a device address of the ECC memory; and an address converter configured to convert the device address information into physical address information independent of an ECC memory controller, the physical address information corresponding to a physical location of the device address information."]},{"claim_text":["2. The driver module according to claim 1 , further comprising a device address to physical address (DA to PA) conversion table with which the address converter converts the device address information into physical address information."]},{"claim_text":["3. The driver module according to claim 2 , wherein the DA to PA conversion table is based on configuration information for a processing device associated with the operating system and configuration information for a Basic Input/Output System (BIOS) associated with the operating system."]},{"claim_text":["4. The driver module according to claim 3 , wherein the DA to PA conversion table is received by the driver module from a shell script received from the BIOS during initialization of the driver module."]},{"claim_text":["5. The driver module according to claim 4 , wherein DA to PA conversion table is hard coded into the BIOS."]},{"claim_text":["6. The driver module according to claim 1 , wherein the ECC memory comprises a Single-Error Correcting, Double-Error Detection (SECDED) ECC memory, a single-chip Chipkill ECC memory or a double-chip Chipkill ECC memory."]},{"claim_text":["7. The driver module according to claim 1 , wherein the ECC memory operates in a single channel/dual asymmetric mode or a dual channel symmetric mode."]},{"claim_text":["8. A driver module for an operating system, comprising: an interface configured to receive from a baseboard management controller (BMC) device address information associated with an Error Correcting Code (ECC) memory, the ECC memory comprising a plurality of memory locations, each memory location corresponding to a device address of the ECC memory; and an address converter configured to convert the device address information into physical address information independent of an ECC memory controller, the physical address information corresponding to a physical location of the device address information, the driver module sending the physical address information of a converted device address to a kernel of the operating system."]},{"claim_text":["9. The driver module according to claim 8 , further comprising a device address to physical address (DA to PA) conversion table that the address converter uses to convert the device address information associated with the ECC memory into physical address information."]},{"claim_text":["10. The driver module according to claim 9 , wherein the DA to PA conversion table is based at least in part on configuration information for a Basic Input/Output System (BIOS) associated with the operating system."]},{"claim_text":["11. The driver module according to claim 10 , wherein the DA to PA conversion table is received by the driver module from a shell script received from the BIOS during initialization of the driver module."]},{"claim_text":["12. The driver module according to claim 10 , wherein the DA to PA conversion table is hard coded into the BIOS."]},{"claim_text":["13. The driver module according to claim 8 , wherein the ECC memory comprises a Single-Error Correcting, Double-Error Detection (SECDED) ECC memory, a single-chip Chipkill ECC memory or a double-chip Chipkill ECC memory."]},{"claim_text":["14. The driver module according to claim 8 , wherein the ECC memory operates in a single channel/dual asymmetric mode or a dual channel symmetric mode."]},{"claim_text":["15. A method to convert devices addresses to physical addresses in a memory system, the method comprising: receiving at a driver module of an operation system kernel device address information for an Error Correction Code (ECC) memory from a system management bus (SMB), the ECC memory comprising a plurality of memory locations, and each memory location corresponding to a device address of the ECC memory; converting at the driver module the device address information into physical address information, the physical address information corresponding to a physical location of the device address information; and sending the physical address information to the operating system kernel."]},{"claim_text":["16. The method according to claim 15 , wherein the driver module comprises a device address to physical address (DA to PA) conversion table, and wherein converting the device address information into physical address information comprises reading the physical address information from the DA to PA conversion table for the received device address information."]},{"claim_text":["17. The method according to claim 16 , further comprising receiving the DA to PA conversion table by the driver module from a shell script received from the BIOS during initialization of the driver module."]},{"claim_text":["18. The method according to claim 17 , wherein DA to PA conversion table is hard coded into the BIOS."]},{"claim_text":["19. The method according to claim 15 , wherein the ECC memory comprises a Single-Error Correcting, Double-Error Detection (SECDED) ECC memory, a single-chip Chipkill ECC memory or a double-chip Chipkill ECC memory."]},{"claim_text":["20. The method according to claim 15 , wherein the ECC memory operates in a single channel/dual asymmetric mode or a dual channel symmetric mode."]}],"lang":"en"}],"description":{"text":"CROSS-REFERENCE TO RELATED APPLICATIONS This application claims the benefit of U.S. Provisional Patent Application No. 62/130,600, filed Mar. 9, 2015, the contents of which are hereby incorporated by reference herein, in their entirety, for all purposes. BACKGROUND This disclosure relates to memory system architectures and, in particular, memory system architectures with error correction. Memory controllers may be configured to perform error correction. For example, a memory controller may read 72 bits of data from a memory module in which 64 bits are data and 8 bits are parity. The memory controller may perform other error correction techniques. Using such techniques, some errors in data read from the memory module may be identified and/or corrected. In addition, the memory controller may make information related to the errors available. A system including the memory controller may make operational decisions based on the error information, such as retiring a memory page, halting the system, or the like. Such a memory controller may be integrated with a processor. For example, INTEL XEON processors may include an integrated memory controller configured to perform error correction. If, however, error correction is performed before data is received by the memory controller, the error information related to the correction may not be available in the memory controller and hence, not available to the system for system management decisions. SUMMARY An embodiment includes a driver module for an operating system, comprising: an interface configured to receive from a system management bus (SMB) device address information associated with an Error Correcting Code (ECC) memory, the ECC memory comprising a plurality of memory locations, each memory location corresponding to a device address of the ECC memory; and an address converter configured to convert the device address information into physical address information independent of an ECC memory controller. One exemplary embodiment comprises a device address to physical address (DA-to-PA) conversion table with which the address converter converts the device address information into physical address information. In yet another exemplary embodiment, the DA-to-PA conversion table is based on configuration information for a processing device associated with the operating system and configuration information for a Basic Input/Output System (BIOS) associated with the operating system. One exemplary embodiment provides that the ECC memory comprises a Single-Error Correcting, Double-Error Detection (SECDED) ECC memory, a single-chip Chipkill ECC memory or a double-chip Chipkill ECC memory. Another exemplary embodiment provides that the ECC memory operates in a single channel/dual asymmetric mode or a dual channel symmetric mode. Another embodiment includes a driver module for an operating system, comprising: an interface configured to receive from a baseboard management controller (BMC) device address information associated with an Error Correcting Code (ECC) memory, the ECC memory comprising a plurality of memory locations, each memory location corresponding to a device address of the ECC memory; an address converter configured to convert the device address information into physical address information independent of an ECC memory controller, the driver module sending the physical address information of a converted device address to a kernel of the operating system. In one exemplary embodiment, the address converter uses a device address to physical address (DA-to-PA) conversion table to convert the device address information associated with the ECC memory into physical address information. One exemplary embodiment provides that the ECC memory comprises a Single-Error Correcting, Double-Error Detection (SECDED) ECC memory, a single-chip Chipkill ECC memory or a double-chip Chipkill ECC memory. Another exemplary embodiment provides that the ECC memory operates in a single channel/dual asymmetric mode or a dual channel symmetric mode. Another embodiment includes a method to convert devices addresses to physical addresses in a memory system in which the method comprises: receiving at a driver module of an operation system kernel device address information for an Error Correction Code (ECC) memory from a system management bus (SMB), the ECC memory comprising a plurality of memory locations, and each memory location corresponding to a device address of the ECC memory; converting at the driver module the device address information into physical address information; and sending the physical address information to the operating system kernel. In one exemplary embodiment, the driver module comprises a device address to physical address (DA-to-PA) conversion table, and converting the device address information into physical address information comprises reading the physical address information from the DA-to-PA conversion table for the received device address information. One exemplary embodiment provides that the ECC memory comprises a Single-Error Correcting, Double-Error Detection (SECDED) ECC memory, a single-chip Chipkill ECC memory or a double-chip Chipkill ECC memory. Another exemplary embodiment provides that the ECC memory operates in a single channel/dual asymmetric mode or a dual channel symmetric mode. BRIEF DESCRIPTION OF SEVERAL VIEWS OF THE DRAWINGS FIG. 1 is a schematic view of a system with a memory system architecture according to an embodiment. FIG. 2 is a schematic view of a system with a memory system architecture including a controller according to an embodiment. FIG. 3 is a schematic view of a system with a memory system architecture including a baseboard management controller according to an embodiment. FIG. 4 is a schematic view of a system with a memory system architecture without processor-based error correction according to an embodiment. FIG. 5 is a schematic view of a system with a memory system architecture with a poisoned data strobe signal according to an embodiment. FIG. 6 is a schematic view of a system with a memory system architecture with a separate uncorrectable error signal according to an embodiment. FIG. 7 is a schematic view of a system with a memory system architecture with a software module according to an embodiment. FIG. 8 is a schematic view of a system with a memory system architecture with an error detection and correction module according to an embodiment. FIG. 9 is a schematic view of a system with a memory system architecture with an aggregating module according to an embodiment. FIG. 10 is a schematic view of a system with a memory system architecture with an error correction module that aggregates information from a memory control architecture module according to an embodiment. FIG. 11 is a schematic view of a system with a memory system architecture with multiple modules sharing an interface, according to an embodiment. FIG. 12 is a schematic view of a system with a memory system architecture with a correctable error module and a serial presence detect/registering clock driver module sharing an interface according to an embodiment. FIG. 13 is a schematic view of a system with a memory system architecture with in-DRAM error correction according to an embodiment. FIGS. 14A-D are schematic views of systems with a memory system architecture with in-module error correction according to some embodiments. FIG. 15 is a schematic view of a memory module according to an embodiment. FIG. 16 is a schematic view of a memory module with an SPD or RCD interface according to an embodiment. FIG. 17 is a schematic view of a memory module with a separate uncorrectable error interface according to an embodiment. FIG. 18 is a schematic view of a memory device according to an embodiment. FIG. 19 is a schematic view of a memory device according to another embodiment. FIG. 20 is a schematic view of a memory module including memory devices according to an embodiment. FIGS. 21-23 are schematic views of memory modules according to various embodiments. FIGS. 24-26 are schematic views of portions of memory modules according to various embodiments. FIG. 27 is a schematic view of a memory module according to another embodiment. FIG. 28 is a schematic view of a system with a memory system architecture with in-DRAM error correction and that provides device address (DA) to physical address (PA) conversion according to an embodiment. FIG. 29 is a flowchart 2900 of a technique of generating DA-to-PA conversion information for a non-XOR mapping configuration according to an embodiment. FIG. 30A depicts the type of address conversion information that is stored for each DA address when DA(j) is determined to be true for a memory 2802 operating in a single channel/dual asymmetric mode according to an embodiment. FIG. 30B depicts the type of address conversion information that is stored for each DA address when DA(j) is determined to be true for a memory 2802 operating in a dual channel symmetric mode according to an embodiment. FIG. 31 is a flowchart 3100 of a technique of generating DA-to-PA conversion information for an XOR mapping configuration according to an embodiment. FIG. 32 depicts the type of address conversion information that is stored for each DA address when DA(k) is determined to be true for a memory system having an XOR mapping configuration according to an embodiment. FIG. 33 is a schematic view of a system with a memory system architecture according to an embodiment. FIG. 34 is a schematic view of a server according to an embodiment. FIG. 35 is a schematic view of a server system according to an embodiment. FIG. 36 is a schematic view of a data center according to an embodiment. DETAILED DESCRIPTION The embodiments relate to memory system architectures. The following description is presented to enable one of ordinary skill in the art to make and use the embodiments and is provided in the context of a patent application and its requirements. Various modifications to the embodiments and the generic principles and features described herein will be readily apparent. The embodiments are mainly described in terms of particular methods and systems provided in particular implementations. The methods and systems, however, will operate effectively in other implementations. Phrases such as “an embodiment,” “one embodiment” and “another embodiment” may refer to the same or different embodiments as well as to multiple embodiments. The embodiments will be described with respect to systems and/or devices having certain components. The systems and/or devices, however, may include more or less components than those shown, and variations in the arrangement and type of the components may be made without departing from the scope of this disclosure. The embodiments will also be described in the context of particular methods having certain steps. The method and system, however, operate according to other methods having different and/or additional steps and steps in different orders that are not inconsistent with the embodiments. Thus, embodiments are not intended to be limited to the particular embodiments shown, but are to be accorded the widest scope consistent with the principles and features described herein. The embodiments are described in the context of particular memory system architecture having certain components. One of ordinary skill in the art will readily recognize that embodiments are consistent with the use of memory system architectures having other and/or additional components and/or other features. One of ordinary skill in the art, however, will readily recognize that the method and system are consistent with other structures. Methods and systems may also be described in the context of single elements. One of ordinary skill in the art, however, will readily recognize that the methods and systems are consistent with the use of memory system architectures having multiple elements. It will be understood by those skilled in the art that, in general, terms used herein, and especially in the appended claims (e.g., bodies of the appended claims) are generally intended as “open” terms (e.g., the term “including” should be interpreted as “including, but not limited to,” the term “having” should be interpreted as “having at least,” the term “includes” should be interpreted as “includes but is not limited to,” etc.). It will be further understood by those within the art that if a specific number of an introduced claim recitation is intended, such an intent will be explicitly recited in the claim, and in the absence of such recitation no such intent is present. For example, as an aid to understanding, the following appended claims may contain usage of the introductory phrases “at least one” and “one or more” to introduce claim recitations. The use of such phrases, however, should not be construed to imply that the introduction of a claim recitation by the indefinite articles “a” or “an” limits any particular claim containing such introduced claim recitation to examples containing only one such recitation, even when the same claim includes the introductory phrases “one or more” or “at least one” and indefinite articles such as “a” or “an” (e.g., “a” and/or “an” should be interpreted to mean “at least one” or “one or more”); the same holds true for the use of definite articles used to introduce claim recitations. Furthermore, in those instances where a convention analogous to “at least one of A, B, or C, etc.” is used, in general such a construction is intended in the sense one having skill in the art would understand the convention (e.g., “a system having at least one of A, B, or C” would include, but not be limited to systems that have A alone, B alone, C alone, A and B together, A and C together, B and C together, and/or A, B, and C together, etc.). It will be further understood by those within the art that virtually any disjunctive word and/or phrase presenting two or more alternative terms, whether in the description, claims, or drawings, should be understood to contemplate the possibilities of including one of the terms, either of the terms, or both terms. For example, the phrase “A or B” will be understood to include the possibilities of “A” or “B” or “A and B.” As used herein, the word “exemplary” means “serving as an example, instance, or illustration.” Any embodiment described herein as “exemplary” is not to be construed as necessarily preferred or advantageous over other embodiments. The subject matter disclosed herein may, however, be embodied in many different forms and should not be construed as limited to the exemplary embodiments set forth herein. Rather, the exemplary embodiments are provided so that this description will be thorough and complete, and will fully convey the scope of the claimed subject matter to those skilled in the art. As used herein, the term “module” refers to any combination of software, firmware and/or hardware configured to provide the functionality described herein. The software may be embodied as a software package, code and/or instruction set or instructions, and “hardware,” as used in any implementation described herein, may include, for example, singly or in any combination, hardwired circuitry, programmable circuitry, state machine circuitry, and/or firmware that stores instructions executed by programmable circuitry. The modules may, collectively or individually, be embodied as circuitry that forms part of a larger system, for example, an integrated circuit (IC), system on-chip (SoC), and so forth. FIG. 1 is a schematic view of a system with a memory system architecture according to an embodiment. The system 100 includes a memory 102 coupled to a processor 104 . The memory 102 is configured to store data. When data is read from the memory 102 , the memory 102 is configured to correct an error, if any, in the data. For example, the memory 102 may be configured to correct a single-bit error. The memory 102 may also be configured to detect a double-bit error. Although the particular number of errors corrected has been used as an example, the memory 120 may be configured to correct any number of errors or detect any number of errors. Moreover, although one or more error correction techniques may result in single-bit error correction and/or double-bit error detection, the memory 102 may be configured to perform any error correction technique that can correct at least one error. The memory 102 may include any device that is configured to store data. In a particular example, the memory 102 may be a dynamic random access memory (DRAM) module. The memory 102 may include a double data rate synchronous dynamic random access memory (DDR SDRAM) according to various standards, such as DDR, DDR2, DDR3, DDR4, or the like. In other embodiments, the memory 102 may include static random access memory (SRAM), non-volatile memory, or the like. The memory 102 is configured to generate error information in response to correcting an error and/or attempting to correct an error in the data read from stored data. For example, the error information may include information about a corrected error, an uncorrected error, an absence of an error, a number of such errors, or the like. Error information may include the actual error, an address of the error, number of times the error has occurred, or other information specific to the memory 102 . In a particular example, the error information may include information about a single-bit error indicating that the memory 102 corrected the single-bit error. Although particular examples of error information have been described, the error information may include any information related to errors. The processor 104 may be any device configured to be operatively coupled to the memory 102 and capable of executing instructions. For example, the processor 104 may be a general-purpose processor, a digital signal processor (DSP), a graphics processing unit (GPU), an application specific integrated circuit, a programmable logic device, or the like. The processor 104 is coupled to the memory 102 through a first communication path 106 and a second communication path 108 . The processor 104 is configured to receive data from the memory through the first communication path 106 . For example, the first communication path 106 may be a system memory interface with signal lines for data signals, strobe signals, clock signals, enable signals, or the like. That is, the communication path 106 may be part of a main memory channel that is the interface between the processor 104 and the memory 102 as the main system memory. The processor 104 is also coupled to the memory 102 through a different communication path, the second communication path 108 . The processor 104 is configured to receive the error information from the memory 102 through the second communication path 108 . Thus, in an embodiment, the processor 104 is configured to receive error information and, in particular, corrected error information through a communication path other than the first communication path 106 . The corrected error information is error information related to a corrected error. As described above, error information may include various types of information related to an error. Thus, the corrected error information may include similar types of information related to a corrected error. Software 110 is illustrated as coupled to the processor 104 ; however, the software 110 represents various programs, drivers, modules, routines, or the like the may be executed on the processor 104 . For example, the software 110 may include drivers, kernel modules, daemons, applications, or the like. In some embodiments, the software 110 may enable the processor 104 to be configured to perform particular functions described herein. Although a single memory 102 has been used as an example, any number of memories 102 may be coupled to the processor 104 through two communication paths similar to the communication paths 106 and 108 . In an embodiment, each memory 102 may be coupled to the processor 104 through a dedicated first communication path 106 separate from other memories 102 and a dedicated second communication path 108 also separate from other memories 102 . In other embodiments, however, the first communication path 106 may be shared by more than one memory 102 and the second communication path 108 may be shared by more than one memory 102 . Furthermore, although a single first communication path 106 has been described, multiple first communication paths 106 between one or more memories 102 may be present. Similarly, although a single second communication path 108 has been described, multiple second communication paths 108 between one or more memories 102 may be present. In an embodiment, the communication of the error information may be communicated through an out-of-band communication path. The second communication path 108 may be such an out-of-band communication path. That is, the main communication between the processor 104 and the memory 102 may be through the first communication path 106 , while the error information is communicated through the out-of-band second communication path 108 . FIG. 2 is a schematic view of a system with a memory system architecture including a controller according to an embodiment. In this embodiment, the system 200 includes a memory 202 , a processor 204 , communication paths 206 and 208 , and software 210 similar to the memory 102 , processor 104 , communication paths 106 and 108 , and software 110 of FIG. 1 . The second communication path 208 , however, includes a first bus 212 coupled between a controller 214 and a second bus 216 coupled between the controller 214 and the processor 204 . In other words, the controller 214 , coupled to both the processor 204 and the memory 202 , is part of the second communication path 208 . The controller 214 may be any device configured to be operatively coupled to the memory 202 and the processor 204 . For example, the controller 214 may include a general-purpose processor, a digital signal processor (DSP), an application specific integrated circuit, a programmable logic device, or the like. The busses 212 and 216 may be any variety of communication links. For example, the buses 212 and 216 may be a system management bus (SMBus), an inter-integrated circuit (I 2 C) bus, an intelligent platform management interface (IPMI) compliant bus, a Modbus bus, or the like. In a particular embodiment, at least one portion of the communication path 208 may be substantially slower than the communication path 206 . For example, the communication path 206 between the memory 202 and processor 204 may be designed for higher data-rate transfers on the order of 10 GB/s; however, the communication path 208 may have a lower data transfer rate on the order of 10 Mbit/s, 100 kbit/s, or the like. Thus, in some embodiments, a ratio of the data transfer speed of the communication path 206 to the communication path 208 may be about 100, 1000, or more. In an embodiment, the second communication path 208 may be a dedicated communication path. That is, the second communication path 208 may only be used for communication of information between the memory 202 and the processor 204 . In other embodiments, however, the controller 214 may allow other devices to be accessible. For example, a non-memory device 268 may be coupled by the bus 212 to the controller 214 . In another example, other devices 266 may be coupled to the controller 214 . Accordingly, information other than information from the memory 202 may be transmitted over the bus 212 and/or the bus 216 to and from the processor 204 and/or memory 202 . In particular, the error information from the memory 202 may be communicated to the processor 204 over a second communication path 208 that is used for other purposes, including non-memory purposes. In an embodiment, the controller 214 may include non-volatile memory 254 . The non-volatile memory 254 may be configured to store error information from the memory 202 . Accordingly, error information may be maintained in the controller 214 when power is off. The processor 204 may be configured to request the error information from the controller 214 . Accordingly, the controller 214 may be configured to respond to such a request by providing the error information stored in the non-volatile memory 254 , accessing the memory 202 to retrieve the error information to respond to the processor 204 , or the like. In an embodiment, the controller 214 may be configured to poll the memory 202 for error information. In another embodiment, the memory 202 may be configured to push error information to the controller 214 . Regardless, error information stored in the non-volatile memory 254 may be a substantially up-to-date copy. FIG. 3 is a schematic view of a system with a memory system architecture including a baseboard management controller (BMC) according to an embodiment. In this embodiment, the system 300 includes a memory 302 , a processor 304 , communication paths 306 and 308 , and software 310 similar to the memory 202 , processor 204 , communication paths 206 and 208 , and software 210 of FIG. 2 . The controller 314 is, however, a baseboard management controller (BMC) 314 . The BMC 314 may be configured to manage the system 300 . For example, the BMC 314 may be coupled to various sensors of the system 300 , including sensors of the processor 304 , memory 302 , other devices 366 , or the like. The BMC 314 may be configured to collect and report on various system parameters, such as temperature, cooling status, power status, or the like. The BMC 314 may be configured to manage the system and enable access to information according to a standard. The management information may be made available to the processor 304 and hence, available to the software 310 . Alternatively, the BMC 314 may make the information available through another communication path, such as an out-of-band communication path. Here, an out-of-band communication path may include any communication path that does not include the processor 304 . FIG. 4 is a schematic view of a system with a memory system architecture without processor-based error correction according to an embodiment. In this embodiment, the system 400 includes a memory 402 , a processor 404 , communication paths 406 and 408 , and software 410 similar to the memory 102 , processor 104 , communication paths 106 and 108 , and software 110 of FIG. 1 . In this embodiment, however, the processor 404 includes a memory controller (MC) 450 and a machine check architecture (MCA) register 452 . The memory controller 450 may be integrated with the processor 404 . The memory controller 450 may be part of a main memory channel that is the main interface between the processor 404 and the memory 402 . The memory controller 450 can be configured to control access to the data stored in the memory 402 through the communication path 406 . In some embodiments, the memory controller 450 may be configured to correct errors, but would not have the opportunity to correct such errors as error correction may have been performed by the memory 402 . In this embodiment, however, the memory controller 450 is not configured to correct errors in data read from the memory 402 . The memory controller 450 may not be configured to report any error information based on data read from the memory 402 . The MCA register 452 is a register in which hardware errors may be reported. For example, cache errors, bus errors, data errors, or the like may be detected and reported in the MCA register 452 . Because the memory controller 450 is not configured to correct errors in data read from the memory 402 , however, any potential error information based on the data read from the memory 402 may not be reported in the MCA register 452 . Regardless, as described above, the error information may be communicated to the processor 404 through the communication path 408 . Thus, the error information may still be available to the software 410 , albeit not through the memory controller 450 and MCA register 452 . In an embodiment, the availability of error information through the second communication path 408 may allow for a lower cost system 400 . For example, a processor 404 with the memory controller 450 without any memory error correction may be used, yet error information may still be available. In particular, even if memory error correction is desired, a processor 404 without memory error correction may be used because the error information is available through the second communication path 408 . Thus, the software 410 , including any software that uses error information, may still operate as if the processor 404 was capable of memory error correction. A processor 404 without error correction may be a lower power, lower cost processor. Thus, an overall power usage and/or cost of the system 400 may be reduced. Although the memory controller 450 has been illustrated as being integrated with the processor 404 , the memory controller 450 may be separate from the processor 404 . Regardless, the communication path 408 may bypass the memory controller 450 and other portions of the processor 404 that may otherwise have had error correction circuitry. The bypass of such components makes the communication of error information through the second communication path 408 substantially independent of the character of the memory controller 450 , MCA register 452 , or the like. That is, the error information may still be available even though similar information is not available through the memory controller 450 and/or the MCA register 452 . FIG. 5 is a schematic view of a system with a memory system architecture with a poisoned data strobe signal according to an embodiment. In this embodiment, the system 500 includes a memory 502 , a processor 504 , communication paths 506 and 508 , and software 510 similar to the memory 102 , processor 104 , communication paths 106 and 108 , and software 110 of FIG. 1 . In this embodiment, however, the communication path 506 includes data lines 532 and a data strobe line(s) 533 . Other lines may be present as part of the communication path 506 ; however, for clarity, those lines are not illustrated. In an embodiment, error information regarding uncorrectable errors and error information regarding correctable errors may be communicated by different paths. As described above, correctable error information may be communicated through the communication path 508 . Uncorrectable error information may include a variety of different types of information based on an uncorrectable error. Uncorrectable error information may be communicated through the first communication path 506 . For example, the memory 502 may be configured to communicate an uncorrectable error by a signal transmitted (or not transmitted) over the data strobe line(s) 533 . That is, during a normal data transfer, a data strobe signal transmitted over the data strobe line(s) 533 may toggle as data is transferred; however, if the memory 502 has detected an uncorrectable error, the memory 502 may be configured to generate a data strobe signal for transmission over the data strobe line(s) 533 that is different from a data strobe signal during a normal data transfer. In a particular example, the memory 502 may be configured to not toggle the data strobe signal transmitted through the data strobe line(s) 533 . When such a condition is detected, the processor 504 may be configured to generate a hardware exception, which may be handled by the software 510 . Although a particular example, of a signal and/or line within the communication path 506 has been used as an example of a technique to communicate an uncorrectable error, other signals and/or lines may be used to communicate an uncorrectable error to the processor 504 . Regardless of how communicated, the processor 504 may be configured to respond to such a communication of an uncorrectable error, such as by halting the system 500 or taking another action. FIG. 6 is a schematic view of a system with a memory system architecture with a separate uncorrectable error signal according to an embodiment. In this embodiment, the system 600 includes a memory 602 , a processor 604 , communication paths 606 and 608 , and software 610 similar to the memory 102 , processor 104 , communication paths 106 and 108 , and software 110 of FIG. 1 . In this embodiment, however, a separate communication path 634 is coupled between the memory 602 and the processor 604 . Similar to the system 500 of FIG. 5 , an uncorrectable error may be communicated to the processor 604 . In this embodiment, the memory 602 is configured to communicate uncorrectable error information over the third communication path 634 . For example, the third communication path 634 may be a dedicated line separate from the first communication path 606 . Thus, error information regarding uncorrectable errors may be received by the processor 604 , but through a communication path other than the first and second communication paths 606 and 608 . FIG. 7 is a schematic view of a system with a memory system architecture with a software module according to an embodiment. In this embodiment, the system 700 includes a memory 702 , a processor 704 , communication paths 706 and 708 , and software 710 similar to the memory 102 , processor 104 , communication paths 106 and 108 , and software 110 of FIG. 1 . In this embodiment, however, the software 710 includes a module 718 . The module 718 represents a part of the software 710 that is configured to access the error information 722 through the processor. For example, the module 718 may include a kernel module, a driver, an extension, or the like. The module 718 may include a driver for an interface associated with the communication path 708 . In a particular example, the module 718 may include a driver associated with an IPMI bus, IPMI2 bus, or the like. Other information 720 may also be available to the software 710 . The error information 722 is illustrated separately to indicate what portion of the software 710 is associated with the error information 722 . In an embodiment, the module 718 may cause the processor 704 to request error information from the memory 702 . For example, the memory 702 may generate error information. At a later time the processor 704 may transmit a request for the error information through the communication path 708 . The memory 702 may be configured to respond to the request with the error information through the communication path 708 . FIG. 8 is a schematic view of a system with a memory system architecture with an error detection and correction module according to an embodiment. In this embodiment, the system 800 includes a memory 802 , a processor 804 , communication paths 806 and 808 , and software 810 with a module 818 responsive to information 820 and 822 similar to the memory 702 , processor 704 , communication paths 706 and 708 , and software 710 with the module 718 responsive to information 720 and 722 of FIG. 7 . In this embodiment, however, the software 810 also includes an error detection and correction (EDAC) module 824 . In an embodiment, the EDAC module may be configured to manage error information from memory, caches, input/output (I/O) devices, peripherals, busses, and/or other aspects of the system 800 and may be configured to expose such information to a higher functional layer, such as an application layer. In particular, the EDAC module 824 may be configured to receive the error information from the module 818 . The EDAC module 824 may be configured to combine the error information with other information such that other modules, applications, or the like may have access to the error information. FIG. 9 is a schematic view of a system with a memory system architecture with an aggregating module according to an embodiment. In this embodiment, the system 900 includes a memory 902 , a processor 904 , communication paths 906 and 908 , and software 910 with a first module 918 responsive to information 920 and 922 similar to the memory 702 , processor 704 , communication paths 706 and 708 , and software 710 with the module 718 responsive to information 720 and 722 of FIG. 7 . In this embodiment, however, the software 910 also includes a second module 926 . The second module 926 is configured to receive information 920 . In particular, this other information 920 may include information unrelated to an error on the memory 902 . At least a part 921 of the other information 920 may be received by the first module 918 . The first module 918 may be configured to combine the error information 922 with some or all of the other information 920 from the second module 926 . The first module 918 may be configured to present the combined information with a single interface. For example, the first module 918 may be configured to present the combined information to an EDAC module, such as the EDAC module 824 of FIG. 8 . FIG. 10 is a schematic view of a system with a memory system architecture with an error correction module that aggregates information from a memory control architecture module according to an embodiment. In this embodiment, the system 1000 includes a memory 1002 , a processor 1004 , communication paths 1006 and 1008 , and software 1010 with modules 1018 and 1026 responsive to information 1020 and 1022 similar to the memory 902 , processor 904 , communication paths 906 and 908 , and software 910 with the modules 918 and 926 responsive to information 920 and 922 of FIG. 9 . In this embodiment, however, the module 1018 is an error correction (EC) module 1018 and the second module 1026 is an MCA module 1026 . The MCA module 1026 is configured to control access to MCA registers, such as the MCA register 452 of FIG. 4 . Information 1020 represents such information from the MCA registers. The EC module 1018 is configured to access the MCA module 1026 to retrieve such information 1020 . The EC module 1018 may combine the information 1020 from the MCA module 1026 with the error information 1022 and present that combined information with a single interface. In particular, the EC module may present an interface similar to or identical to that of an MCA module 1026 had the processor 1004 been able to correct errors. For example, if the processor 1004 was configured to correct errors in data read from the memory 1002 and such error information was available, that information may be available through the MCA module 1026 . If, however, the processor 1004 is not configured to correct errors in data read from the memory 1002 or the processor 1004 is configured to correct errors, but never receives error information by a communication path monitored by the MCA module 1026 due to the errors being corrected in the memory 1002 , the MCA module 1026 would not be able to present the error information. Regardless, the EC module 1018 may combine the MCA module 1026 information 1020 with error information 1022 obtained through communication path 1008 and present that combined information similar to or identical to information that the MCA module 1026 would have provided had the processor 1004 been configured to correct errors in data read from the memory 1002 or the error information was available to the MCA module 1026 . Software may then use the same or similar interface regardless of whether a processor 1004 with error correction is present. In other words, a processor 1004 capable of error correction is not necessary for software relying upon error information to be fully operational. As a result, costs may be reduced by using a less expensive processor 1004 without error correction. FIG. 11 is a schematic view of a system with a memory system architecture with multiple modules sharing an interface, according to an embodiment. In this embodiment, the system 1100 includes a memory 1102 , a processor 1104 , communication paths 1106 and 1108 , and software 1110 responsive to information 1120 and 1122 similar to the memory 702 , processor 704 , communication paths 706 and 708 , and software 710 responsive to information 720 and 722 of FIG. 7 . In this embodiment, however, the software 1110 includes a first module 1118 , a second module 1128 and an interface module 1130 . The first module 1118 is similar to the module 718 of FIG. 7 . The first module 1118 , however, is configured to receive error information from the memory 1102 through an interface module 1130 . The interface module 1130 is a module configured to provide the interface to the communication path 1108 . For example, the interface module 1130 may be a module configured to permit access over an IPMI bus. Other modules, such as the second module 1128 may also be configured to communicate using the interface module 1130 . For example, the second module 1128 may be configured to access another device attached to an IPMI bus, access another aspect of the memory 1102 , such as thermal or power information, or the like. Both the error information and the other information may be part of the information 1122 transferred by the interface module 1130 . In other words, the error information may be transferred using dedicated software along the entire path, but may also share modules, interfaces, busses, or the like with related or unrelated information and/or sources. FIG. 12 is a schematic view of a system with a memory system architecture with a correctible error module and a serial presence detect/registering clock driver module sharing an interface according to an embodiment. In this embodiment, the system 1200 includes a memory 1202 , a processor 1204 , communication paths 1206 and 1208 , and software 1210 with modules 1218 , 1228 , and 1230 responsive to information 1220 and 1222 similar to the memory 1102 , processor 1104 , communication paths 1106 and 1108 , and software 1110 with modules 1118 , 1128 , and 1130 responsive to information 1120 and 1122 of FIG. 11 . In this embodiment, however, the first module 1218 is a corrected error (CE) module 1218 and the second module 1228 is a serial presence detect (SPD)/registering clock driver (RCD) module 1228 . In particular, the SPD/RCD module 1228 is configured to access information related to a serial presence detect system and/or a registering clock driver system. The SPD/RCD module 1228 may be configured to access one or both of such systems. The information is accessed through the second communication path 1208 . Thus, in an embodiment, the error information from the memory 1202 may be accessed through the same communication path 1208 as SPD/RCD related information. FIG. 13 is a schematic view of a system with a memory system architecture with in-DRAM error correction according to an embodiment. In this embodiment, the system 1300 includes memories 1302 , a processor 1304 , kernel 1310 with an EC module 1318 and an MCA module 1326 responsive to information 1320 and 1322 similar to the memory 1002 , processor 1004 , and software 1010 with the EC module 1018 and MCA module 1026 responsive to information 1020 and 1022 of FIG. 10 . In this embodiment, however, each of the memories 1302 is error correction code (ECC) dual in-line memory module (DIMM). Each ECC DIMM 1302 is configured to store data and correct at least an error in the stored data. In this embodiment, the ECC DIMMs 1302 are each coupled to a memory controller (MC) 1350 of the processor 1304 through corresponding communication paths 1364 . The communication paths 1364 include at least lines for data signals and data strobe signals or the like similar to the communication path 506 of FIG. 5 . The ECC DIMMs 1302 are each coupled to the processor 1304 through a communication path 1308 including a bus 1312 , a BMC 1314 , and a bus 1316 similar to the bus 312 , BMC 314 , and bus 316 of FIG. 3 . In an embodiment, the ECC DIMMs 1302 may be configured to correct one or more errors in data read from the ECC DIMMs 1302 . The error correction techniques may include a single error correction-double error detection (SEC-DEC) technique, a single-chip chipkill technique, a double-chip chipkill technique, or the like. Any error correction technique may be used. In this embodiment, the memory controller (MC) 1350 is not configured to perform error correction or alternatively, is not configured to receive error information from the ECC DIMMs 1302 . As the data passed from the ECC DIMMs 1302 is already corrected, the MC 1350 may not even receive any information representing a correctible error. The error information and, in particular, corrected error information, however, may be transmitted to the processor 1304 through the communication path 1308 , i.e., through the busses 1312 and 1316 , and the BMC 1314 . In an embodiment, the processor 1304 may be an existing processor that is otherwise not capable of performing error correction, but has an interface capable of connecting to the bus 1316 . Once, however, the processor 1304 is configured by the kernel 1310 and, in particular, the EC module 1318 , the overall system 1300 may be configured to perform error correction similar to a system having a processor capable of error correction. In an embodiment, the EC module 1318 may create a virtual memory controller with ECC interface. For example, as described above, the EC module 1318 may be configured to receive information from the MCA module 1326 . That information may be the information that an actual memory controller with ECC interface may provide without some or all error information. The EC module 1318 may supplement the information from the MCA module 1326 with the error information to create a complete set of information expected from a memory controller with ECC interface. As a result, the EDAC module 1324 , a memory ECC daemon 1358 , other applications 1360 , or the like may be used without change from those used with processors with error correction. For example, the EDAC module 1324 may be configured to poll the EC module 1318 for memory ECC information. In return, the EC module 1318 may return the error information received through the second communication path 1308 . The memory ECC daemon 1358 , in communication with the EDAC module 1324 , may poll the EDAC module 1324 for error information. The memory ECC daemon 1358 may then take actions according to the error information at an application level. Such actions may include page retirement, other actions to manage errors to keep the system 1300 running, maintain a level of reliability, recommend decommissioning, or the like. As described above, an uncorrectable error may be detected. The uncorrectable error information may be communicated through the MC 1350 , MCA register 1352 , and MCA module 1326 to the EC module 1318 . For example, an uncorrectable error may be communicated by a non-maskable interrupt, exception, or the like through the MCA module 1326 . In a particular example, the memory controller 1350 may generate a hardware exception in response to an uncorrectable error, regardless of how communicated to the memory controller 1350 . The MCA module 1326 may intercept that exception and pass it to the EC module 1318 . The EC module 1318 may then communicate the exception to the EDAC module 1324 . In addition to or instead of communicating uncorrectable error information as described above, uncorrectable error information may be communicated through the communication path 1308 . In an embodiment, the ECC DIMMs 1302 may be configured to provide corrected data to the processor 1304 . The data, however, may become corrupted between the ECC DIMMs 1302 and the MC 1350 . Accordingly, some form of error correction may be performed between the ECC DIMMs 1302 and the processor 1304 or MC 1350 . For example, the data transmitted from the ECC DIMMs 1302 may be encoded with error correction codes intended to detect errors that occur over the communication link 1364 . With such error correction, substantially the entire path from storage element in the ECC DIMMs 1302 to the processor may be protected with error correction. FIGS. 14A-D are schematic views of systems with a memory system architecture with in-module error correction according to some embodiments. Referring to FIG. 14A , the system 1400 includes components similar to those of FIG. 13 ; however, in this embodiment, the ECC DIMMs 1402 include a buffer 1462 . The buffer 1462 is configured to correct errors in data read from the corresponding ECC DIMM 1402 . In particular, uncorrected data may be read from internal memory devices, such as DRAM devices (not illustrated) of the ECC DIMM 1402 . The buffer 1462 may be configured to correct the uncorrected data and generate corrected error information similar to other memories described herein. That error information may be communicated through the communication path 1408 , and may be used as described above. That is, the error information may be used as described above regardless of how the error information is generated. Referring to FIG. 14B , the components of the system 1400 may be similar to those of FIG. 14A . In this embodiment, however, the EDAC module 1424 is configured to communicate with the MCA module 1426 . For example, the EDAC module 1424 may be configured to poll the MCA module 1426 for hardware related information, uncorrectable error information, or other information available through the MCA module 1426 as described above. The EDAC module 1424 may be configured to combine the information from the MCA module 1426 with information from the EC module 1418 . Referring to FIG. 14C , the components of the system 1400 may be similar to those similar to those of FIG. 14A . In this embodiment, however, an MCELOG module 1425 is configured to receive information from the CE module 1418 . The MCELOG module 1425 may be configured to record machine check events (MCEs) related to various system errors, such as memory errors, data transfer errors, or other errors. The MCELOG module 1425 may be configured to raise an interrupt to the Memory ECC Daemon 1458 and pass error information to the Memory ECC Daemon 1458 . Referring to FIG. 14D , the components of the system 1400 may be similar to those of FIG. 14C . However, in this embodiment, similar to the difference between FIGS. 14A and 14B , the MCELOG module 1425 may be configured to receive information from the MCA module 1426 similar to the EDAC module 1424 of FIG. 14B . Although different modules have been described with respect to ECC DIMMs 1402 with buffers 1462 in FIGS. 14A-D , in other embodiments, the various configurations may be applied to the system 1300 of FIG. 13 with ECC DIMMs 1302 . FIG. 15 is a schematic view of a memory module according to an embodiment. The memory module 1500 includes one or more memory devices 1501 , a data interface 1536 , an error interface 1538 , and a controller 1541 . The data interface 1536 is configured to transmit and receive data 1540 from data stored in the memory devices 1501 . The memory module 1500 is configured to generate error information for data read from the one or more memory devices 1501 . The error interface 1538 is configured to transmit error information generated in response to correcting an error in data read from the one or more memory devices 1501 . The data interface 1536 is the interface through which data stored in the memory devices 1501 is transmitted and the interface through which data 1540 to be stored in the memory devices 1501 is received. For example, the data interface 1536 may include buffers, drive circuits, terminations, or other circuits for lines, such as data lines, strobe lines, address lines, enable lines, clock lines, or the like. The error interface 1538 may be an interface configured to communicate over a particular bus, such as SMBus, IPMI, or other buses as described herein. In an embodiment, the error interface 1538 may be an existing interface through which the memory module 1500 communicates other information in addition to the error information. Thus, the information 1542 would include not only the error information, but also the other information. The controller 1541 may be any device configured to be operatively coupled to the memory devices 1501 . For example, the controller 214 may include a general-purpose processor, a digital signal processor (DSP), an application specific integrated circuit, a programmable logic device, or the like. As will be described in further detail below, the controller 1541 may include a buffer, such as an RCD, or the like. The controller 1541 is coupled to the memory devices 1501 , the data interface 1536 , and the error interface 1538 . The controller 1541 is configured to obtain the error information. In an embodiment, the controller 1541 may obtain the error information from the memory devices 1501 ; however, in other embodiments, the controller 1541 may be configured to correct errors in data from the memory devices 1501 and generate the error information. In an embodiment the controller 1541 may be configured to communicate an uncorrectable error through the data interface 1536 . For example, as described above, a data strobe signal may be used to indicate an uncorrectable error. The controller 1541 may be configured to modify the data strobe signal transmitted through the data interface 1536 in response to detecting an uncorrectable error. FIG. 16 is a schematic view of a memory module with an SPD or RCD interface according to an embodiment. In this embodiment, the memory module 1600 includes one or more memory devices 1601 , a data interface 1636 , an error interface 1638 , and a controller 1641 similar to the one or more memory devices 1501 , data interface 1536 , error interface 1538 , and controller 1541 of FIG. 15 . The error interface 1538 of FIG. 15 , however, is an SPD/RCD interface 1638 here. The SPD/RCD interface 1638 may be used to provide access to an SPD system or an RCD system (not illustrated). In a particular embodiment, the error information may be available through a particular register or memory location within such an SPD or RCD system. Thus, the error information may be obtained through the same interface the SPD or RCD information may be obtained. As the error information is available through an existing hardware interface, additional hardware may not be needed. For example, a command received through the SPD/RCD interface 1638 intended to access error information may be different from other commands by an address, register address, or other field unused by SPD/RCD systems. In an embodiment, a new register for SPD/RCD systems may be defined that exposes the error information. In another embodiment, an existing register may be reused to communicate the error information. FIG. 17 is a schematic view of a memory module with a separate uncorrectable error interface according to an embodiment. In this embodiment, the memory module 1700 includes one or more memory devices 1701 , a data interface 1736 , an error interface 1738 , and a controller 1741 similar to the one or more memory devices 1501 , the data interface 1536 , the error interface 1538 , and the controller 1541 of FIG. 15 . The memory module 1700 , however, also includes an uncorrectable error (UE) interface 1744 . The UE interface 1744 is a separate interface through which the memory module 1700 is configured to communicate uncorrectable errors. For example, the UE interface 1744 may be a dedicated line, a dedicated bus, or the like. FIG. 18 is a schematic view of a memory device according to an embodiment. In this embodiment, the memory device 1800 includes a data interface 1836 and an error interface 1838 . The data interface 1836 and the error interface 1838 may be similar to the data interface 1536 and the error interface 1538 of FIG. 15 , or the like as described above; however, in this embodiment, the data interface 1836 and the error interface 1838 are interfaces to the memory device 1800 rather than a memory module, such as a memory module 1500 of FIG. 15 . The memory device 1800 includes a controller 1841 . The controller 1814 may be any device configured to be operatively coupled to the memory 1801 and the interfaces 1836 and 1838 . For example, the controller 1841 may include a general-purpose processor, a digital signal processor (DSP), an application specific integrated circuit, a programmable logic device, or the like. The memory 1801 is configured to store data. For example, the memory 1801 may be a memory cell array; however, in other embodiments, the data may be stored in other configurations. The memory 1801 may include electrical, magnetic, chemical, optical, or other types of storage elements. The controller 1841 is configured to transmit data stored in the memory 1801 through the data interface 1836 . The controller may also be configured to receive data to be stored in the memory 1801 through the data interface 1836 . Such transfers are represented by data 1840 . The controller 1841 is configured to transmit error information generated in response to correcting an error in data read from memory 1801 through the error interface 1838 . The error information may be similar to any of the types of error information described above. The controller 1841 may also be configured to receive commands, instructions, or other information through the error interface 1838 . Such transfers of error information, commands, instructions, or other information is represented by information 1842 . In this embodiment, both the data 1840 and information 1842 are illustrated as passing through the controller 1841 . In other embodiments, however, components of the memory device 1800 may be controlled by the controller 1841 such that data 1840 and information 1842 does not pass through the controller 1841 . For example, in some embodiments, the data and/or error information may be provided to the data interface 1836 and error interface 1838 under control of the controller 1841 , but bypassing the controller 1841 . FIG. 19 is a schematic view of a memory device according to another embodiment. In this embodiment, the memory device 1900 includes a memory cell array 1901 . The memory cell array 1901 may include memory cells in which data is stored. In particular, the memory cell array 1901 may be configured to store encoded data. Sense amplifiers 1902 and write circuitry 1904 are examples of circuitry in the memory device 1900 that allows data to be written to and read from the memory cell array 1901 to an address or addresses specified by the address 1906 . In other embodiments, however, other read and write circuitry may be associated with the memory cell array 1901 . Furthermore, although the sense amplifiers 1902 and write circuitry 1904 are illustrated as part of the memory cell array 1901 , such circuitry may be separate from the memory cell array 1901 . In addition, although a single memory cell array 1901 is illustrated, multiple memory cell arrays 1901 may be present. The memory cell array 1901 is coupled to an error correcting code (ECC) engine 1908 . The ECC engine 1908 is configured to correct at least one error in data read from the memory by encoding data written to the memory cell array 1901 and decoding data read from the memory cell array 1901 . In particular, the ECC engine 1908 may be configured to receive write data 1910 . The ECC engine 1908 may be configured to encode the write data 1910 such that the encoded data may be written to the memory cell array 1901 by the write circuitry 1904 to a location specified by the address 1906 . Similarly, the ECC engine 1908 may be configured to receive encoded data read from the memory cell array 1901 and decode that data into decoded output data 1924 . Such encoding and decoding may be performed according to any number of ECC algorithms as described herein. As an example, Single Error Correct-Double Error Detect (SEC-DED) may be used as the ECC algorithm; however others may be used. Although signals such as an address 1906 and write data 1910 are illustrated as signals used in writing data to the memory cell array 1901 , the memory device 1900 may be configured to receive and process other signals involved in writing data to the memory cell array 1901 ; however, such components are omitted for clarity. Furthermore, other components that may modify an address 1906 , redirect an access, or the like may be present, but are also not illustrated for clarity. In a particular example, during a write operation, the ECC Engine 1908 is configured to receive the bits the memory device 1900 should store as the write data 1910 . The ECC Engine 1908 is configured to calculate the ECC bit value(s) for the write data 1910 and pass these ECC bit(s), along with the original data values as the encoded data, to the memory cell array 1901 using the write circuitry 1904 . The memory cell array 1901 is then configured to store the encoded data. During a read operation, the ECC Engine 1908 is configured to receive encoded data from the memory cell array 1901 . That is, the sense amplifiers 1902 and other circuitry are used to read the previously stored ECC bit(s) and original data values as the encoded data. The ECC engine 1908 may then decode the encoded data, generate output data 1924 , and generate any error information. The output data 1924 may then be output from the memory device 1900 . In some embodiments, other components may be disposed between the ECC engine 1908 and the output of the memory device 1900 . In an embodiment, a buffer 1932 may be configured to buffer the output data 1924 . In another embodiment, an RCD module 1934 may be configured to receive, buffer, and output the output data 1924 . Here, examples of such optional components are illustrated with dashed lines. The ECC engine 1908 is also configured to generate error flags. For example, the ECC engine 1908 may be configured to generate a correctable error (CE) flag. The CE flag may be set when the ECC engine 1908 successfully corrects an n-bit error, in which n is less than or equal to a number of bit-errors that the ECC engine 1908 is configured to correct. The ECC engine 1908 may also be configured to generate an uncorrectable error (UE) flag. The UE flag may be set when the ECC engine 1908 detects that a number of bit-errors have occurred greater than a number of bit-errors that the ECC engine 1908 is configured to correct. In a particular example, with SEC-DED, the CE flag may indicate that a single-bit error has been corrected while the UE flag may indicate that a two-bit error has occurred. The ECC controller 1918 is configured to manage the error correction and associated error information. The ECC controller 1918 is configured to receive error information 1914 from the ECC engine. The error information 1914 may include information indicating whether there was no error, a correctable error, an uncorrectable error, a number of errors, or the like. The ECC controller 1918 may also be configured to receive the address 1906 associated with a read. Accordingly, the ECC controller 1918 may combine the error information 1914 from the ECC engine 1908 into new error information with the address 1906 . As will be described in further detail below, the ECC controller 1918 may be configured to generate write data 1910 to be encoded by the ECC engine 1908 and written to the memory cell array 1901 . In an embodiment, the ECC controller 1918 may include a memory configured to store error information. For example, the ECC controller 1918 may include multiple registers in which error information may be stored. Any variety of error information may be stored in the ECC controller 1918 . As will be described in further detail below, records of the error may be stored including information about an error. For example, the error record may include information, such as address information, type of error, the data read from the memory cell array 1901 , whether a repair or other action has been performed, or the like. In an embodiment, the ECC controller 1918 may be configured to transmit and receive communications 1926 from external devices. For example, the communications 1926 may include the transmission of error information. When a correctable error or an uncorrectable error occurs, error information may be transmitted by the ECC controller 1918 . Such transmission may be in response to a request from an external device or may be spontaneous, such as according to a regular schedule, on the occurrence of the error, during a refresh cycle, or the like. In an embodiment, the ECC controller 1918 may be configured to communicate over a bus, such as the SMBus to communicate the error information. In some embodiments, the memory device 1900 may include a command buffer 1928 . The command buffer 1928 may be configured to buffer commands received through a bus for the ECC controller 1918 . In an embodiment, the memory device 1900 may include an SPD module 1930 . The ECC controller 1918 may be configured to communicate with the SPD module 1930 . The SPD module 1930 may be configured to perform operations associated with an SPD interface. In addition, the SPD module 1930 may be configured to allow access to the error information available through the ECC controller 1918 . For example, particular commands received through at SPD module 1930 may be translated into appropriate commands and/or signals to access the error information stored in the ECC controller 1918 . DQS modifier 1920 is configured to modify a data strobe signal 1912 from the memory cell array 1901 in response to error information 1916 from the ECC engine 1908 and output the modified data strobe signal 1922 . In a particular embodiment, the error information 1916 is a signal indicating whether an uncorrectable error has occurred. The DQS modifier 1920 may be configured to modify the data strobe signal 1912 such that the output data strobe signal 1922 does not toggle if the error information 1916 indicates that an uncorrectable error has occurred, but passes the data strobe signals 1912 as is if an uncorrectable error signal has not occurred. For example, the DQS modifier 1920 may include logic circuitry such as an OR gate, an AND gate, a NAND gate, a transmission gate or the like. In an embodiment, the DQS modifier 1920 may be used to communicate time-sensitive information. For example, when an uncorrectable error has occurred, that error may be associated with a current read operation. While information regarding the uncorrectable error may be communicated by the ECC controller 1918 to external devices, such as by an SMBus, the communication path may be slower than a communication path for the data 1924 . Thus, communication of the occurrence of the uncorrectable error may be delayed relative to the corresponding read operation. In contrast, communicating that an uncorrectable error has occurred by the DQS modifier 1920 may be substantially contemporaneous with the corresponding read operation. That is, the modified output data strobe signal 1922 is the data strobe signal associated with the transfer of data 1924 with the uncorrectable error. Although particular components of a memory device 1900 have been used as an example, other components may be present. For example, the memory device 1900 may be configured to receive and/or transmit various strobe signals, selection signals, control signals, enable signals, or the like. FIG. 20 is a schematic view of a memory module including memory devices according to an embodiment. In this embodiment, the memory module 2000 includes a data interface 2036 and an error interface 2038 similar to data interface 1536 and error interface 1538 of FIG. 15 . In this embodiment, however, the memory module 2000 includes multiple ECC memory devices 2001 - 1 to 2001 -N. The ECC memory devices 2001 may be any of the memory devices described herein, such as the memory devices 1800 and 1900 of FIGS. 18 and 19 described above. Using memory device 1800 as an example of the memory devices 2001 and referring to FIGS. 18 and 20 , each of the memory devices 1800 is coupled to the data interface 2036 and the error interface 2038 . With respect to the data interface 2036 , the data interfaces 1836 of the memory devices 1800 may form at least part of the data interface 2036 . For example, data I/Os, strobe signals, or the like of each data interface 1836 may be aggregated into the data interface 2036 . Address inputs and/or other control signals of the data interface 2036 may be distributed to the data interfaces 1836 of the memory devices 1800 . Accordingly, data may be communicated to and from the memory devices 1800 through the data interface 2036 and hence, to and from the memory module 2000 . Similarly, the error interfaces 1838 may be coupled to the error interface 2038 . The error interfaces 1838 may be coupled in a variety of ways. For example, the error interfaces 1838 and the error interface 2038 may be coupled to a common bus within the memory module 2000 . In another example, the error interface 2038 may be coupled directly to each error interface 1838 of the memory devices 2001 . The error interface 2038 may be configured to aggregate the error information from the memory devices 1800 . Accordingly, error information may be communicated from the memory devices 1800 through the error interface 2038 and hence, from the memory module 2000 . Although the memory device 1800 of FIG. 18 has been used as an example of a memory device 2001 of the memory module 2000 , in other embodiments, different memory devices may be used. For example, the memory device 1900 of FIG. 19 may be used as the memory devices 2001 . Referring to FIG. 19 , the address 1906 , write data 1910 , output data 1924 , data strobe signal 1922 , or the like of each memory device 1900 may be coupled to the data interface 2036 . Similarly, the ECC controller 1918 of each memory device 1900 may be coupled to the error interface 2038 . FIGS. 21-23 are schematic views of memory modules according to various embodiments. Referring to FIG. 21 , in this embodiment, the memory module 2100 includes one or more memory devices 2101 , a data interface 2136 , and a controller 2141 similar to the one or more memory devices 1501 , data interface 1536 , and controller 1541 of FIG. 15 . A module error interface 2138 may be similar to the error interface 1538 and configured to exchange information 2142 similar to information 1542 ; however the module error interface 2138 is referred to with the term “module” to distinguish it from the device error interfaces 2139 of the memory devices 2101 . As will be described in further detail below, the module error interface 2138 may be used for communication other than communicating error information. Here, the memory devices 2101 each have a data interface 2137 and a device error interface 2139 similar to data interface 1836 and error interface 1838 of FIG. 18 . The data interfaces 2137 of the memory devices 2101 are coupled to the data interface 2136 of the module; however, such coupling is not illustrated for clarity. Moreover, in some embodiments, the coupling of the data interface 2136 and the data interfaces 2137 of the memory devices 2101 may, but need not pass through the controller 2141 . For example, in some embodiments, data 2140 transferred to and from the memory module 2100 may be buffered in the controller 2141 ; however, in other embodiments, such transfers may bypass the controller 2141 . Each memory device 2101 is coupled to the module error interface 2138 and configured to communicate error information through the device error interface and the module error interface. In this embodiment, a controller 2141 is coupled to the device error interfaces 2139 and the module error interface 2138 . As will be described in further detail, the controller 2141 may be configured to manage communications involving the memory devices 2101 , such as communications involving error information. For example, the controller 2141 may be configured to manage access to error information associated with the memory devices 2101 through the corresponding device error interfaces 2139 , forward communications to and from the memory devices 2101 , aggregate error information from the memory devices 2101 , or the like. In a particular embodiment, the controller 2141 may include registers 2149 that are accessible through the module error interface 2138 . The controller 2141 may be configured to collect error information from the memory devices 2101 by communicating with the memory devices 2101 through the device error interfaces 2139 . Such error information may be stored in the registers 2149 and accessible to devices external to the memory module 2100 . Alternatively, the controller 2141 may be configured to combine the error information, summarize the error information, or the like. In particular, in an embodiment, each memory device 2101 may generate its own error information in isolation from the other memory devices 2101 . Accordingly, as the controller 2141 may have access to all of the memory devices 2101 , the controller 2141 may be configured to generate additional error information that an individual memory device 2101 may not be capable of generating. Although registers 2149 have been used as an example, error information and other information may be stored in the controller 2141 in other ways. In an embodiment, the controller 2141 may be configured to receive commands related to the memory devices 2101 . As described herein, the controller 2141 may be configured to receive a command to read error information. The controller 2141 , however, may be configured to receive other types of communications related to the memory devices 2101 . For example, the controller 2141 may be configured to receive commands related to maintenance of the memory devices 2101 . An example of such maintenance may be a command to repair a memory cell within one or more of the memory device 2101 , rewrite data, initiate a refresh cycle, or the like. The controller 2141 may be configured to receive such communications and, in response, communicate with the memory devices 2101 . Referring to FIG. 22 , in this embodiment, the memory module 2200 is similar to the memory module 2100 ; however, the memory module 2200 includes a serial presence detect (SPD) 2143 module coupled to the controller 2141 . The SPD 2143 may be configured to communicate through the controller 2141 . For example, the controller 2141 may be configured to forward communications to and from the SPD 2143 . In other embodiments, the controller 2141 may be configured to obtain information from the SPD 2143 and operate as a proxy for the SPD 2143 using such information through the module error interface 2138 . Again, although the module error interface 2138 uses the term “error,” information other than error information may be transmitted and received through the module error interface 2138 . In an embodiment, the controller 2141 may be configured to respond to an address associated with the SPD 2143 . The controller 2141 , however, may be configured to respond to another address, use additional information in a communication, or the like to determine whether the communication is intended for the SPD 2143 , intended to access error information, intended for the memory devices 2101 , intended for the controller 2141 itself, or the like. Referring to FIG. 23 , in this embodiment, the memory module 2300 may be similar to the memory module 2100 of FIG. 21 or the memory module 2200 of FIG. 22 . A registering clock driver (RCD) module 2145 , however, may be used in place of the controller 2141 . Here, the RCD 2145 may be configured to buffer data transferred to and from the memory module 2300 . In addition, the RCD 2145 may also be configured to provide functions described herein with respect to the controller 2141 . An SPD 2143 may also be coupled to the RCD 2145 . Accordingly, similar to the memory module 2200 , the SPD 2143 may be accessible through the RCD 2145 , the RCD 2145 may act as a proxy for the SPD 2143 , or the like, similar to the controller 2141 described above. FIGS. 24-26 are schematic views of portions of memory modules according to various embodiments. Referring to FIG. 24 , in this embodiment, the controller 2141 , memory devices 2101 , and the SPD 2143 may be similar to those of FIG. 22 . The controller 2141 may be coupled to a bus 2452 . The bus 2542 may be an SMBus, or other bus as described herein. The bus 2542 may form part or all of the module error interface 2142 . The controller 2141 may be configured to receive an address 2454 . The address 2454 may be a hardwired input. In a particular example, the address 2454 may be a series of pins on a memory module that, when inserted in a particular socket, are connected to high or low values to distinguish the memory module from others coupled to the same bus 2542 . In an embodiment, the address 2454 may be the address that is coupled to an SPD module in conventional memory devices; however, here, the address is repurposed to communicate with the controller 2141 instead of an SPD such as the SPD 2143 . Thus, a memory module as described herein may be pin-compatible with existing memory modules. In this embodiment, the SPD 2143 and the memory devices 2101 are each coupled to the controller 2141 through separate busses 2450 . Here, the busses are labeled bus 2450 - 1 to 2450 -N, corresponding to memory devices 2101 - 1 to 2101 -N. Bus 2450 -N+1 corresponds to the additional bus coupling the controller 2141 and the SPD 2143 . In a particular embodiment, each of the busses 2450 may be SMBus busses or other similar communication links. In other embodiments, however, other point-to-point communication links may be used in place of the busses 2450 including, for example, a communication link that may only have two endpoints. That is, although the term bus has been used, the communication link may be configured to only be able to couple to two devices. In an embodiment, the SPD 2143 may be configured to respond to and/or generate a control signal 2147 . The control signal 2147 may include an out-of band signal with respect to the bus 2450 -N+1. The control signal 2147 may be an interrupt signal, for example. In a particular, embodiment, the control signal 2147 may be an event signal associated with the SPD 2143 . The controller 2141 may also be configured to receive and/or generate a control signal 2451 . The control signal 2451 may be a signal that would otherwise be used by the SPD 2143 . Since the controller 2141 , however, may be configured to use the interface that the SPD 2143 otherwise would have, the SPD 2143 may not be configured to directly receive the control signal 2451 . Accordingly, the controller 2141 may be configured to communicate the control signal 2451 to and/or from the SPD 2143 as the control signal 2147 . Although a single control signal associated with the SPD has been used as an example, in other embodiments, multiple control signals may be forwarded to and from the SPD 2143 , the memory devices 2101 , or other components. For clarity such control signals will not be illustrated in subsequent figures; however, they may be present. Moreover, the controller 2141 may include additional functions beyond the SPD 2143 that may be associated with a control signal similar to control signal 2147 . For example, the controller 2141 may be configured to generate an interrupt based on error information from the memory devices 2101 . Accordingly, control signal 2451 may be used to communicate the error information based interrupt in addition to any such signal from the SPD 2143 . The controller 2141 may be configured to determine whether such control signal is intended for the controller 2141 , the SPD 2143 , or the like. In an embodiment, a number of additional pins may be used for the memory devices 2101 . In a particular embodiment, a memory device 2101 may include two additional pins, one for a clock signal and another for a data signal. The controller 2141 may include 2×(N+2) pins for the busses 2452 and 2450 - 1 to 2450 -N+1, three pins for the address 2454 , and two pins for the control signals 2451 and 2147 . Referring to FIG. 25A , in this embodiment, the controller 2141 , memory devices 2101 , and the SPD 2143 may be similar to those of FIG. 24 . The controller 2141 , however, is coupled to the memory devices 2101 through bus 2450 - 1 and coupled to the SPD 2143 through bus 2450 - 2 . In this embodiment, the busses 2450 - 1 and 2450 - 2 are separate busses. In addition, the bus 2450 - 1 is a common bus for the memory devices 2101 . Once again, the busses 2450 may be SMBus busses. Since multiple memory devices 2101 may be coupled to the bus 2450 - 1 , each memory device 2101 may include a corresponding ID input 2456 . The ID 2456 may be similar to the address 2454 . For example, for each memory device 2101 , the corresponding ID 2456 may be hardwired to an address unique among the memory devices 2101 . In a particular example, each ID 2456 may include four pins that may be held either high or low. Accordingly, 16 unique addresses are available for the IDs 2456 . Although four pins have been used as an example, any number of pins may be used to distinguish any number of memory devices 2101 . Each of the memory devices 2101 may be configured to transform the corresponding ID 2456 into an address or other identifier to be used on the bus 2450 - 1 . In an embodiment, the address generated from the ID 2456 may be an address used as the slave address for an SMBus. In this embodiment, the SPD 2143 and the controller 2141 may be the only devices on the bus 2450 - 2 . Accordingly, an address input need not be used for the SPD 2143 . In an embodiment, a number of additional pins may be used for the memory devices 2101 . In a particular embodiment, a memory device 2101 may include two additional pins, one for a clock signal and another for a data signal, similar to FIG. 24 , but also four pins for the IDs 2456 . The controller 2141 may include six pins for the busses 2452 , 2450 - 1 , and 2450 - 2 , three pins for the address 2454 , and two pins for the control signals 2451 and 2147 similar to FIG. 24 , if used. Referring to FIG. 25B , in this embodiment, the controller 2141 , memory devices 2101 , and the SPD 2143 may be similar to those of FIG. 25A . The SPD 2143 and the memory devices 2101 , however, are coupled to the controller 2141 through a common bus 2450 . As described above, the memory devices 2101 may each be configured to receive an ID 2456 . Since the SPD 2143 is now on the same bus 2450 as the memory devices 2101 , the SPD 2143 may be configured to use an address that is unique among the SPD 2143 and the memory devices 2101 . The SPD 2143 may be configured to receive an ID 2457 . The SPD 2143 may be configured to convert the ID 2457 into an address to use on the bus 2450 . In an embodiment, the form of the ID 2457 may be different from the IDs 2456 . For example, the ID 2457 may include three pins used to indicate the address of the SPD 243 while the IDs 2456 may each include four pins. Moreover, IDs on the ID 2457 and the IDs 2456 may, but need not correspond to the same address. For example, an ID 2457 of 010b and an ID 2456 of 0010b may correspond to different addresses. In an embodiment, a number of additional pins may be used for the memory devices 2101 . In a particular embodiment, a memory device 2101 may include two additional pins, one for a clock signal and another for a data signal, similar to FIG. 24 , but also four pins for the IDs 2456 . The controller 2141 may include four pins for the busses 2450 and 2452 , three pins for the address 2454 , and two pins for the control signals 2451 and 2147 similar to FIG. 24 , if used. Referring to FIG. 26 , in this embodiment, the controller 2141 , memory devices 2101 , and the SPD 2143 may be similar to those of FIG. 25B . The SPD 2143 is configured to receive the address 2454 similar to the controller 2141 . In this embodiment, however, the memory devices 2101 are not configured to receive IDs 2456 . In contrast, the memory devices 2101 are each coupled to a common bus 2459 , such as a single wire or net separate from the bus 2450 - 1 . In an embodiment, the common bus 2459 may be a daisy-chain link. In an embodiment, the memory devices 2101 may be coupled to a bus 2459 . The memory devices 2101 are configured to determine if information received through the controller 2141 is associated with the memory device 2101 in response to a signal received through the bus 2459 . In an embodiment, the memory devices 2101 may be configured to communicate over the bus 2459 to establish the addresses of the memory devices 2101 on the bus 2450 . For example, a first memory device may determine its address in response to a counter and increment the counter. The value of the counter is transmitted to a second memory device 2101 . The second memory device 2101 is also configured to determine its address in response to the counter and increment the counter. This procedure may continue until each memory device 2101 has a unique address. In an embodiment, a number of additional pins may be used for the memory devices 2101 . In a particular embodiment, a memory device 2101 may include two additional pins, one for a clock signal and another for a data signal, similar to FIG. 24 , but also one additional pin for the bus 2459 . The controller 2141 may include six pins for the busses 2452 , 2450 - 1 , and 2450 - 2 , three pins for the address 2454 , and two pins for the control signals 2451 and 2147 similar to FIG. 24 , if used. In an embodiment, in any of the above configurations, the controller 2141 may be configured to determine the addresses of the memory devices 2101 and the SPD 2143 , if coupled to the same bus. For example, the controller 2141 may be configured to use the SMBus address resolution protocol to dynamically assign addresses to the memory devices 2101 and the SPD 2143 . Although one technique of determining the addresses on one type of bus has been used as an example, other techniques may be used as appropriate to the particular bus 2450 . FIG. 27 is a schematic view of a memory module according to another embodiment. In this embodiment, the memory module 2700 is similar to the memory module 2100 of FIG. 21 . A repeater 2750 , however, is used as the controller 2141 . The repeater 2750 may be configured to extend the communication link coupled to the module error interface 2138 so that the error interfaces 2139 of the memory devices 2101 and an SPD 2143 , if present, may be coupled to the communication link. In a first example, if the loading of the memory devices 2101 and/or attributes of the network allow, the repeater 2750 may merely be wires, such as wires of a shared medium. In another example, the repeater 2750 may include a device configured to allow more devices to be attached to the bus, allow a longer bus, or the like. Although the term repeater has been used, the repeater 2750 may also include a hub, extender, switch, bridge, or the like. And device that can extend a network may be used as the repeater 2750 . As the memory devices 2101 may be directly accessible through the module interface 2138 , each memory device 2101 of a memory module 2700 may be individually interrogated for error information by an external controller as described above, such as a BMC. In an embodiment, a configuration of the memory devices 2101 , an SPD 2143 and the repeater 2750 may be similar to that of FIG. 25B . That is, referring to FIGS. 25B and 27 , the memory devices 2101 may be each coupled to the bus 2450 , which is also coupled to the repeater 2750 . Each of the memory devices 2101 may also be configured to receive an ID 2456 . As a result, the memory devices 2101 may be configured to determine their respective addresses for use on the bus 2450 . In an embodiment, particular addresses or IDs may be associated with various types of devices. For example, temperature sensors may be associated with a particular address or address range. The memory devices 2101 , however, may not have such an address or ID association. Accordingly, an address, ID, range of such parameters, or the like may be repurposed from other types of devices, such as devices that are not used in a system that may use the memory modules described herein. For example, an ID or address for an I2C mux may be used as the ID or address of the memory devices 2101 . In an embodiment, a memory system architecture utilizing a coupled in-DRAM ECC can use an Operating System (OS) driver provide an address-conversion technique that converts a device address (DA) to physical address (PA) independent of a central processing unit/memory controller (CPU/MC). Thus, a coupled in-DRAM ECC memory system architecture as disclosed herein can replace a computing system architecture that uses a high-cost CPU, such as a XEON CPU, with lower-cost CORE/ARM CPU. Moreover, a Reliability, Availability and Serviceability (RAS) capability can be transferred from a system CPU to a memory system, thereby providing significant end customer total cost of ownership (TCO) cost reduction. FIG. 28 is a schematic view of a system with a memory system architecture with in-DRAM error correction and that provides device address (DA) to physical address (PA) conversion according to an embodiment. In this embodiment, the system 2800 includes memories 2802 , a processor 2804 , kernel 2810 with an EC module 2818 and an MCA module 2826 responsive to information 2820 and 2822 similar to the memory 1002 , processor 1004 , and software 1010 with the EC module 1018 and MCA module 1026 responsive to information 1020 and 1022 of FIG. 10 , and similar to memory 1302 , processor 1304 , and software 1310 with EC module 1318 and MCA module 1326 of FIG. 13 . In this embodiment, like the embodiment of FIG. 13 , each of the memories 2802 is error correction code (ECC) dual in-line memory module (DIMM). Each ECC DIMM 2802 is configured to store data and correct at least an error in the stored data. In this embodiment, the ECC DIMMs 2802 are each coupled to a memory controller (MC) 2850 of the processor 2804 through corresponding communication paths 2864 . The communication paths 2864 include at least lines for data signals and data strobe signals or the like similar to the communication path 506 of FIG. 5 . The ECC DIMMs 2802 are each coupled to the processor 2804 through a communication path 2808 including a bus 2812 and a BMC 2814 , and a bus 2816 similar to the bus 312 and BMC 314 of FIG. 3 . Communication path 2808 also includes a bus 2822 coupled between BMC 2814 and EC module 2818 . In one exemplary embodiment, bus 2822 is part of a System Management Bus (SMBus). In one exemplary embodiment, EC module 2818 interfaces to bus 2822 through an Intelligent Platform Management Interface (IPMI). In an embodiment, the ECC DIMMs 2802 may be configured to correct one or more errors in data read from the ECC DIMMs 2802 . The error correction techniques may include a single error correction-double error detection (SEC-DEC) technique, a single-chip chipkill technique, a double-chip chipkill technique, or the like. Any error correction technique may be used. In this embodiment, the memory controller (MC) 2850 is not configured to perform error correction or alternatively, is not configured to receive error information from the ECC DIMMs 2802 . As the data passed from the ECC DIMMs 2802 is already corrected, the MC 2850 may not even receive any information representing a correctible error. The error information and, in particular, corrected error information, however, may be transmitted to the processor 2804 through the communication path 2808 , i.e., through the busses 2812 and 2822 , and the BMC 2814 . Further, the memory controller (MC) 2850 may not be configured to convert a device address (DA) of a memory 1302 to physical address (PA) for kernel 2810 . In an embodiment, the processor 2804 may be an existing processor that is otherwise not capable of performing error correction, but has an interface capable of connecting to the bus 2822 . Once, however, the processor 2804 is configured by the kernel 2810 and, in particular, the EC module 2818 , the overall system 2800 may be configured to perform error correction similar to a system having a processor capable of error correction, and may be configured to perform device address (DA) to physical address (PA) conversion. In an embodiment, the EC module 2818 may create a virtual memory controller with ECC interface. For example, as described above, the EC module 2818 may be configured to receive information from the MCA module 2826 . That information may include information that an actual memory controller with ECC interface may provide without some or all error information. The EC module 2818 may supplement the information from the MCA module 2826 with the error information to create a complete set of information expected from a memory controller with ECC interface. As a result, the EDAC module 2824 , a memory ECC daemon 2858 , other applications 2860 , or the like may be used without change from those used with processors with error correction. For example, the EDAC module 2824 may be configured to poll the EC module 2818 for memory ECC information. In return, the EC module 2818 may return the error information received through the second communication path 2808 . The memory ECC daemon 2858 , in communication with the EDAC module 2824 , may poll the EDAC module 2824 for error information. The memory ECC daemon 2858 may then take actions according to the error information at an application level. Such actions may include page retirement, other actions to manage errors to keep the system 2800 running, maintain a level of reliability, recommend decommissioning, or the like. In an embodiment, an address-conversion technique is provided for coupled in-DRAM ECC memory systems to convert a device address (DA) to physical address (PA) translation independent of a CPU memory controller. During boot up of EC module 2818 , a shell script delivers device address to physical address (DA-to-PA) conversion table information to EC module 2818 . The DA-to-PA conversion table information is based on the particular CPU 2818 and the Basic Input/Output System (BIOS) in use. During system operation, device addresses (DA) of memory 2802 are converted to physical addresses (PA) by EC module 2818 for kernel 2810 using the DA-to-PA conversion table information. In one exemplary embodiment, the DA-to-PA conversion information is generated during a test operation to provide a DA-to-PA conversion table. FIG. 29 is a flowchart 2900 of an exemplary technique of generating DA-to-PA conversion information for a non-XOR mapping configuration according to an embodiment. The process of FIG. 29 toggles a physical address one bit at a time and determines which device address bit toggles to thereby generate DA-to-PA conversion information. Search complexity is O(n), 1 bit per one search, and is therefore relatively compute-inexpensive. The process begins at operation 2902 . Flow continues to operation 2904 where an index i is set equal to 0. At operation 2906 , physical address PA(i) of memory 2802 is accessed (i.e., PA(i)=1). At operation 2908 , an index j is set equal to 0. At operation 2910 , it is determined whether device address DA(j) is true (i.e., DA(j)=1) as a result of accessing physical memory PA(i). If, at operation 2910 , it is determined that device address DA(j) is true, flow continues to operation 2912 where DA-to-PA conversion information is stored for PA(i) being mapped onto DA(j) for the particular indices i and j. In one embodiment, determining whether PA(i) is mapped on to DA(j) is done using, for example, a logic analyzer coupled to the address lines of system 2800 . Flow continues to operation 2914 where it is determined whether index i is equal to the maximum physical address of system 2800 (i.e., i max ). If, at operation 2914 , index i is equal to i max , flow continues to operation 2916 where the process ends and a DA-to-PA conversion table can be formed, otherwise flow continues to operation 2918 where index i is incremented. Flow returns to operation 2906 . If, at operation 2910 , it is determined that the device address DA(j) is not true, flow continues to operation 2920 where it is determined whether index j is equal to the maximum device address for the system (i.e., j max ). If, at operation 2920 , index j is equal to j max , flow continues to operation 2914 . If, at operation 2920 , index j is not equal to j max , flow continues to operation 2922 where index j is incremented. Flow returns to operation 2910 . FIG. 30A depicts the type of address conversion information that is stored for each DA address when DA(j) is determined to be true for a memory 2802 operating in a single channel/dual asymmetric mode according to an embodiment. As depicted FIG. 30A , the bank index is mapped from the middle order bits, while channel and rank index are mapped from higher order bits to account for data being interleaved across several SDRAM banks in order to provide adequate bandwidth for a processor. Channel index is mapped from the highest address bit, thereby leaving two independent channels. FIG. 30B depicts the type of address conversion information that is stored for each DA address when DA(j) is determined to be true for a memory 2802 operating in a dual channel symmetric mode according to an embodiment. In the dual channel symmetric mode, bit{ 6 } is used as the channel index. Depending on which mode is used in an embodiment, the stored address conversion information depicted in either FIG. 30A or FIG. 30B is hard coded into the BIOS of the system and is transferred to the EC module 2818 during boot up of the EC module 2818 . FIG. 31 is a flowchart 3100 of an exemplary technique of generating DA-to-PA conversion information for an XOR mapping configuration according to an embodiment. In one exemplary embodiment, the DA-to-PA conversion information generated by this process is generated during a test operation. The process toggles a physical address one bit at a time, and checks which device address bit toggles to generate DA-to-PA conversion information. Search complexity for the XOR mapping configuration is O(n), 1 bit per one search, and is therefore relatively compute-inexpensive. The process begins at operation 3102 . Flow continues to operation 3104 where an index i is set equal to 0. At operation 3106 , physical address PA(i) of memory 2802 is accessed (i.e., PA(i)=1). At operation 3108 , an index j is set equal to 0, and an index k is set equal to 0. At operation 3110 , it is determined whether device address DA(j) is true (i.e., DA(j)=1). If, at operation 3110 , it is determined that device address DA(j) is true, flow continues to operation 3112 where index k is set equal to j+1. Flow continues to operation 3114 where it is determined whether device address DA(k) is true (i.e., DA(k)=1). In one embodiment, determining whether PA(i) is mapped on to DA(k) is done using, for example, a logic analyzer coupled to the address lines of system 2800 . If, at operation 3114 , it is determined that DA(k)=1, flow continues to operation 3116 where physical address PA(i) is mapped on to device address DA(j) XOR DA(k) and the address conversion information is stored. Flow continues to operation 3118 . If, at operation 3114 , it is determined that device DA(k) is not true (i.e., DA(k)≠1, then flow continues to operation 3120 where it is determined whether index k is equal to the maximum device address for the system (i.e., j max ). If so, flow continues to operation 3122 where physical address PA(i) is mapped onto device address DA(j) (i.e., j max ) and the address conversion information is stored. Flow continues to operation 3118 . In, at operation 3120 , it is determined that index k is not equal to j max , flow continues to operation 3124 where index k is incremented. Flow returns to operation 3114 . If, at operation 3110 , it is determined that the device address DA(j) is not true, flow continues to operation 3126 where it is determined whether index j is equal to the maximum device address for the system (i.e., j max ). If, at operation 3126 , index j is equal to j max , flow continues to operation 3118 . If, at operation 3126 , index j is not equal to j max , flow continues to operation 3128 where index j is incremented. Flow returns to operation 3110 . At operation 3118 , it is determined whether index i is equal to i max , if so, flow continues to operation 3130 where the process ends, otherwise flow continues to operation 3132 where index i is incremented, and flow returns to operation 3106 . FIG. 32 depicts the type of address conversion information that is stored for each DA address when DA(k) is determined to be true for a memory system having an XOR mapping configuration according to an embodiment. In one exemplary embodiment, the XOR mapping configuration depicted in FIG. 32 includes a permutation-based page interleaving address mapping technique. The permutation-based page interleaving technique exclusive ORs (XORs) the bank index with a range of row index bits that correspond to the lowest bits of an L2 cache tag in a cache address to convert row conflicts due mainly to L2 conflict misses into accesses to different banks to reduce a row conflict rate and preserve spatial locality in the SDRAM rows. The stored address conversion information depicted in FIG. 32 is hard coded into the BIOS of the system and is transferred to the EC module 2818 during boot up of the EC module 2818 . FIG. 33 is a schematic view of a system with a memory system architecture according to an embodiment. In this embodiment, the system 3300 includes a processor 3304 and software 3310 similar to the processor 104 and software 110 of FIG. 1 . In this embodiment, however, the system 3300 includes a memory 3302 and an error correction circuit 3368 . In this embodiment, the memory 3302 is not configured to correct errors. The memory is coupled to the error correction circuit 3368 and is configured to transmit data to the error correction circuit through communication path 3372 . The error correction circuit 3368 is configured to correct errors in data received from the memory 3302 . The error correction circuit 3368 is coupled to the processor 3304 through a second communication path 3370 and a third communication path 3308 . The second communication path 3370 is the main path through which the processor 3304 is configured to receive data. For example, the second communication path 3370 may be a system bus for the processor 3304 . In contrast, the third communication path 3308 is similar to the communication path 108 or the like described above. That is, the third communication path 3308 may be a separate, out-of-band communication path, include a controller 3314 , or have other variations similar to the communication paths described above. FIG. 34 is a schematic view of a server according to an embodiment. In this embodiment, the server 3400 may include a stand-alone server, a rack-mounted server, a blade server, or the like. The server 3400 includes a memory 3402 , a processor 3404 , and a BMC 3414 . The processor 3404 is coupled to the memory 3402 through the communication path 3406 . The BMC is coupled to the processor 3404 through the bus 3416 and coupled to the memory 3402 through the bus 3412 . The memory 3402 , processor 3404 , BMC 3414 , communication path 3406 , and busses 3412 and 3416 may be any of the above described corresponding components. FIG. 35 is a schematic view of a server system according to an embodiment. In this embodiment, the server system 3500 includes multiple servers 3502 - 1 to 3502 -N. The servers 3502 are each coupled to a manager 3504 . One or more of the servers 3502 may be similar to the server 3300 described above. In addition, the manager 3504 may include a system with a memory system architecture as described above. The manager 3504 is configured to manage the servers 3502 and other components of the server system 3500 . For example, the manager 3504 may be configured to manage the configurations of the servers 3502 . Each server 3502 is configured to communicate error information to the manager 3504 . The error information may include correctible error information communicated to a processor in one of the servers 3502 as described above or other error information based on the correctible error information. The manager 3504 may be configured to take actions based on that error information. For example, server 3502 - 1 may have a number of correctible errors that exceeds a threshold. The manager 3504 may be configured to transfer the functions of that server 3502 - 1 to server 3502 - 2 and shutdown server 3502 - 1 for maintenance and/or replacement. Although a particular example has been given, the manager 3504 may be configured to take other actions based on the error information. FIG. 36 is a schematic view of a data center according to an embodiment. In this embodiment, the data center 3600 includes multiple servers systems 3602 - 1 to 3602 -N. The server systems 3602 may be similar to the server system 3400 described above in FIG. 34 . The server systems 3602 are coupled to a network 3604 , such as the Internet. Accordingly, the server systems 3602 may communicate through the network 3604 with various nodes 3606 - 1 to 3606 -M. For example, the nodes 3606 may be client computers, other servers, remote data centers, storage systems, or the like. An embodiment includes a system, comprising: an Error Correcting Code (ECC) memory comprising a plurality of memory locations, each memory location corresponding to a device address of the ECC memory; a system management bus (SMB); a baseboard management controller (BMC) coupled to the ECC memory through the SMB; and an operating system comprising a driver module coupled to the BMC through the SMB, the driver module being configured to receive through the Memory device address information associated with the ECC memory and to convert the device address information into physical address information independent of an ECC memory controller. In an embodiment, the driver module comprises a device address to physical address (DA-to-PA) conversion table with which the driver module converts the device address information into physical address information. An embodiment further comprises a processing device coupled to the ECC memory and a Basic Input/Output System (BIOS) for the system, and wherein the DA-to-PA conversion table is based on configuration information for the processing device and configuration information for the BIOS. In an embodiment, the DA-to-PA conversion table is received by the driver module from a shell script during initialization of the driver module. In an embodiment, the driver module is further configured to store the DA-to-PA conversion table within the driver module. In an embodiment, the ECC memory comprises Single-Error Correcting, Double-Error Detection (SECDED) ECC memory, a single-chip Chipkill ECC memory or a double-chip Chipkill ECC memory. In an embodiment, the system is part of a server system. Another embodiment includes a system, comprising: a processing device comprising an error-correcting code (ECC) memory controller; an ECC memory coupled to the ECC memory controller of the processing device, the ECC memory comprising a plurality of memory locations, each memory location corresponding to a device address of the ECC memory; a system management bus (SMB); a baseboard management controller (BMC) coupled to the ECC memory through the SMB; and an operating system configured to manage the processing device, the operating system comprising a driver module coupled to the BMC through the SMB and bypassing the ECC memory controller of the processing device, the driver module being configured to receive through the Memory device address information associated with the ECC memory and to convert the address information into physical address information independent of the ECC memory controller. In an embodiment, the driver module comprises a device address to physical address (DA-to-PA) conversion table with which the driver module converts the address information into physical address information. In an embodiment, the DA-to-PA conversion table is based on configuration information for the processing device and configuration information for the Basic Input/Output System (BIOS) for the system. In an embodiment, the DA-to-PA conversion table is received by the driver module from a shell script during initialization of the driver module. In an embodiment, the driver module is further configured to store the DA-to-PA conversion table within the driver module. In an embodiment, the ECC memory comprises Single-Error Correcting, Double-Error Detection (SECDED) ECC memory, a single-chip Chipkill ECC memory or a double-chip Chipkill ECC memory. In an embodiment, the system is part of a server system. Another embodiment includes a method, comprising: receiving at a driver module of an operation system kernel device address information for an Error Correction Code (ECC) memory from a system management bus (SMB), the ECC memory comprising a plurality of memory locations, and each memory location corresponding to a device address of the ECC memory; converting at the driver module the device address information into physical address information; and sending the physical address information to the operating system kernel. In an embodiment, the driver module comprises a device address to physical address (DA-to-PA) conversion table, and converting the device address information into physical address information comprises reading the physical address information from the DA-to-PA conversion table for the received device address information. In an embodiment, the DA-to-PA conversion table is based on configuration information for a processing device coupled to the memory system and configuration information for a Basic Input/Output System (BIOS) for the memory system. An embodiment further comprises receiving the DA-to-PA conversion table by the driver module from a shell script during initialization of the driver module. In an embodiment, the DA-to-PA conversion table is stored within the driver module. Although the structures, methods, and systems have been described in accordance with exemplary embodiments, one of ordinary skill in the art will readily recognize that many variations to the disclosed embodiments are possible, and any variations should therefore be considered to be within the spirit and scope of the apparatus, method, and system disclosed herein. Accordingly, many modifications may be made by one of ordinary skill in the art without departing from the scope of the appended claims.","lang":"en"},"publication_type":"GRANTED_PATENT"}
{"lens_id":"124-237-468-990-073","jurisdiction":"WO","doc_number":"2017205695","kind":"A1","date_published":"2017-11-30","doc_key":"WO_2017205695_A1_20171130","docdb_id":486746297,"lang":"en","biblio":{"publication_reference":{"jurisdiction":"WO","doc_number":"2017205695","kind":"A1","date":"2017-11-30"},"application_reference":{"jurisdiction":"US","doc_number":"2017034582","kind":"W","date":"2017-05-25"},"priority_claims":{"claims":[{"jurisdiction":"US","doc_number":"201662341960","kind":"P","date":"2016-05-26","sequence":1}],"earliest_claim":{"date":"2016-05-26"}},"invention_title":[{"text":"3D PRINTABLE BIO GEL AND METHOD OF USE","lang":"en"},{"text":"BIOGEL IMPRIMABLE EN 3D ET PROCÉDÉ D'UTILISATION","lang":"fr"}],"parties":{"applicants":[{"residence":"US","extracted_name":{"value":"TDBT IP INC"}}],"inventors":[{"residence":"US","sequence":1,"extracted_name":{"value":"COHEN DANIEL L"}},{"residence":"US","sequence":2,"extracted_name":{"value":"PELLETIER CHRIS"}}],"agents":[{"extracted_name":{"value":"TALAPATRA, Sunit et al."},"extracted_address":"FOLEY & LARDNER LLP, 3000 K Street, N.W., Suite 600, Washington, District of Columbia 20007-5143,  20007-5143","extracted_country":"US"}]},"classifications_ipcr":{"classifications":[{"symbol":"A61L27/24"},{"symbol":"A61L15/32"}]},"classifications_cpc":{"classifications":[{"symbol":"A61L27/24"},{"symbol":"A61L27/3804"},{"symbol":"A61L27/3808"},{"symbol":"A61L27/3813"},{"symbol":"A61L27/3817"},{"symbol":"A61L27/3821"},{"symbol":"A61L27/3826"},{"symbol":"A61L27/383"},{"symbol":"A61L27/3834"},{"symbol":"A61L27/52"},{"symbol":"B33Y10/00"},{"symbol":"B33Y70/00"},{"symbol":"A61L27/24"},{"symbol":"A61L27/3804"},{"symbol":"A61L27/52"},{"symbol":"A61L27/54"}]},"references_cited":{"citations":[{"sequence":1,"patcit":{"document_id":{"jurisdiction":"EP","doc_number":"0419111","kind":"A1","date":"1991-03-27"},"lens_id":"060-512-881-348-619"},"cited_phase":"ISR"},{"sequence":2,"nplcit":{"text":"KAI-FENG LIN ET AL: \"Low-Temperature Additive Manufacturing of Biomimic Three-Dimensional Hydroxyapatite/Collagen Scaffolds for Bone Regeneration\", ACS APPL.MATER.INTERFACES, vol. 8, no. 11, 23 March 2016 (2016-03-23), pages 6905 - 6916, XP055397488, ISSN: 1944-8244, DOI: 10.1021/acsami.6b00815","lens_id":"018-098-130-433-237","external_ids":["26930140","10.1021/acsami.6b00815"]},"cited_phase":"ISR"},{"sequence":3,"patcit":{"document_id":{"jurisdiction":"WO","doc_number":"0029484","kind":"A1","date":"2000-05-25"},"lens_id":"085-519-838-489-255"},"cited_phase":"ISR"},{"sequence":4,"patcit":{"document_id":{"jurisdiction":"US","doc_number":"2006135921","kind":"A1","date":"2006-06-22"},"lens_id":"025-698-532-319-851"},"cited_phase":"ISR"},{"sequence":5,"nplcit":{"text":"LEE VIVIAN K ET AL: \"Creating perfused functional vascular channels using 3D bio-printing technology\", BIOMATERIALS, vol. 35, no. 28, 23 June 2014 (2014-06-23), pages 8092 - 8102, XP028861821, ISSN: 0142-9612, DOI: 10.1016/J.BIOMATERIALS.2014.05.083","lens_id":"014-384-918-264-637","external_ids":["10.1016/j.biomaterials.2014.05.083","24965886","pmc4112057"]},"cited_phase":"ISR"},{"sequence":6,"nplcit":{"text":"STEPHANIE RHEE ET AL: \"3D Bioprinting of Spatially Heterogeneous Collagen Constructs for Cartilage Tissue Engineering\", ACS BIOMATERIALS SCIENCE & ENGINEERING, vol. 2, no. 10, 18 July 2016 (2016-07-18), pages 1800 - 1805, XP055399505, ISSN: 2373-9878, DOI: 10.1021/acsbiomaterials.6b00288","lens_id":"041-076-354-958-995","external_ids":["10.1021/acsbiomaterials.6b00288","33440478"]},"cited_phase":"ISR"},{"sequence":1,"patcit":{"document_id":{"jurisdiction":"US","doc_number":"201762511292","kind":"P","date":"2017-05-25"}},"cited_phase":"APP"},{"sequence":2,"nplcit":{"text":"HARRIS, J.; WILKINSON, W.L.: \"McGraw-Hill Encyclopedia of Physics\", 1993, MCGRAW-HILL, article \"Non-Newtonian Fluid\", pages: 856 - 858"},"cited_phase":"APP"}],"npl_resolved_count":3,"npl_count":4,"patent_count":4},"cited_by":{"patents":[{"document_id":{"jurisdiction":"WO","doc_number":"2022069772","kind":"A1"},"lens_id":"032-956-681-215-354"}],"patent_count":1}},"families":{"simple_family":{"members":[{"document_id":{"jurisdiction":"WO","doc_number":"2017205695","kind":"A4","date":"2017-12-21"},"lens_id":"162-969-951-804-041"},{"document_id":{"jurisdiction":"JP","doc_number":"2019518078","kind":"A","date":"2019-06-27"},"lens_id":"114-284-592-629-444"},{"document_id":{"jurisdiction":"CN","doc_number":"110167608","kind":"A","date":"2019-08-23"},"lens_id":"024-299-600-773-518"},{"document_id":{"jurisdiction":"US","doc_number":"11439727","kind":"B2","date":"2022-09-13"},"lens_id":"039-254-147-573-125"},{"document_id":{"jurisdiction":"WO","doc_number":"2017205695","kind":"A1","date":"2017-11-30"},"lens_id":"124-237-468-990-073"},{"document_id":{"jurisdiction":"US","doc_number":"20200316252","kind":"A1","date":"2020-10-08"},"lens_id":"055-996-322-434-003"},{"document_id":{"jurisdiction":"EP","doc_number":"3463499","kind":"A1","date":"2019-04-10"},"lens_id":"180-116-913-809-595"}],"size":7},"extended_family":{"members":[{"document_id":{"jurisdiction":"JP","doc_number":"2019518078","kind":"A","date":"2019-06-27"},"lens_id":"114-284-592-629-444"},{"document_id":{"jurisdiction":"US","doc_number":"11439727","kind":"B2","date":"2022-09-13"},"lens_id":"039-254-147-573-125"},{"document_id":{"jurisdiction":"CN","doc_number":"110167608","kind":"A","date":"2019-08-23"},"lens_id":"024-299-600-773-518"},{"document_id":{"jurisdiction":"WO","doc_number":"2017205695","kind":"A4","date":"2017-12-21"},"lens_id":"162-969-951-804-041"},{"document_id":{"jurisdiction":"WO","doc_number":"2017205695","kind":"A1","date":"2017-11-30"},"lens_id":"124-237-468-990-073"},{"document_id":{"jurisdiction":"US","doc_number":"20200316252","kind":"A1","date":"2020-10-08"},"lens_id":"055-996-322-434-003"},{"document_id":{"jurisdiction":"EP","doc_number":"3463499","kind":"A1","date":"2019-04-10"},"lens_id":"180-116-913-809-595"}],"size":7}},"legal_status":{"calculation_log":["Application Filing Date: 2017-05-25"],"patent_status":"PENDING"},"abstract":[{"text":"Collagen compositions, methods for preparing those collagen compositions, and 3D constructs formed from those collagen compositions are provided. In particular, methods of isolating collagen that exhibits an enhanced rate of gelling, such collagen compositions, and 3D constructs formed from such collagen compositions are provided.","lang":"en"},{"text":"L'invention concerne des compositions de collagène, des procédés de préparation de ces compositions de collagène, et des constructions 3D formées à partir de ces compositions de collagène. En particulier, l'invention concerne des procédés d'isolation de collagène qui présentent une vitesse de gélification améliorée, de telles compositions de collagène, et des constructions 3D formées à partir de ces compositions de collagène.","lang":"fr"}],"claims":[{"claims":[{"claim_text":["WHAT IS CLAIMED IS:","A bio gel composition comprising,","collagen material in an amount greater than 5 mg/mL;","a weak acid solution; and","optionally living cells;","wherein the bio gel composition,","undergoes gelation in less than about 3 min at a temperature of about 25 °C to about 37 °C;","is liquid under shear stress of about 15 Pa to about 100 Pa; and","remains solid during gelation under hydrostatic pressure of about 30 Pa to about 120 Pa.","The composition of claim 1, wherein the collagen material comprises type I collagen, wherein the type I collagen is harvested from mammalian sources selected from bovine, porcine, murine, and the like or combinations thereof.","The composition of claim 1, wherein the collagen material is present in an amount of about 5 mg/mL to about 200 mg/mL.","The composition of claim 1, wherein the weak acid solution comprises weak acid in an amount of about 0.01% to about 3% of the weak acid solution.","The composition of claim 5, wherein the weak acid solution is selected from the group consisting of formic acid, propanoic acid, acetic acid, citric acid, butanoic acid, salicylic acid, gluconic acid, heptonic acid, carbonic acid, hydrofluoric acid, nitrous acid, hypochlorous acid, hydrochloric acid, or combinations thereof.","The composition of claim 1, wherein the composition further comprises living cells selected from the group of epidermal cells, chondrocytes and other cartilage forming cells, macrophages, adipocytes, dermal cells, muscle cells, hair follicles, fibroblasts, organ cells, osteoblasts, osteocytes and other bone forming cells, endothelial cells, mucosal cells, pleural cells, ear canal cells, tympanic membrane cells, peritoneal cells, Schwann cells, corneal epithelial cells, gingiva cells, central nervous system neural stem cells, or tracheal epithelial cells, and the like or combinations thereof.","The composition of claim 1, wherein the composition further comprises a cross-linking agent selected from the group comprising ribose, riboflavin, and the like or combinations thereof.","The composition of claim 1, wherein the bio gel composition is a liquid under shear stress of about 30 Pa to about 90 Pa before undergoing gelation.","The composition of claim 1, wherein the bio gel composition undergoes gelation at a temperature from about 25 °C to about 37 °C.","The composition of claim 1, wherein the bio gel composition undergoes gelation in less than about 30 s to about 2 minutes.","The composition of claim 1, wherein the bio gel composition remains solid during gelation under a hydrostatic pressure of about 30 Pa to about 90 Pa.","The composition of claim 1, wherein the bio gel composition sags less than about 1% to about 30% of its height under gravity over a period of up to about 60 s to about 120 s after gelation.","The composition of claim 1, wherein the bio gel composition increases storage modulus up to about 5000% after gelation.","A method of harvesting collagen for use in bio gel compositions, the method comprising,","(a) processing a collagen-based biomaterial to obtain biomaterial particles;","(b) contacting the biomaterial particles with a weak acid solution to obtain a collagen- containing solution;","(c) segregating the collagen-containing solution to obtain an extracted collagen","solution;","(d) contacting the extracted collagen solution with a salt solution to obtain a collagen precipitate;","(e) re-suspending the collagen precipitate in a weak acid solution to obtain a re- suspended collagen solution; and optionally, performing viral and prion inactivation of the re-suspended collagen solution; (f) desalting the re-suspended collagen solution;","(g) drying the re-suspended collagen solution to obtain a collagen material; and","(h) sterilizing the collagen material.","16. The method of claim 15, wherein the collagen-based biomaterial is from a mammalian source, wherein the mammalian source is selected from the group consisting of bovine, porcine, murine, or a combination thereof.","17. The method of claim 15, wherein the collagen-based biomaterial comprises type I","collagen.","18. The method of claim 15, wherein the biomaterial particles are from about 100 μιη to about 1 cm.","19. The method of claim 15, wherein the weak acid solution comprises weak acid in the amount of about 0.01% to about 20% of the weak acid solution.","20. The method of claim 15, wherein the method comprises contacting the biomaterial","particles with the weak acid solution over a period of about 24 h to about 2 weeks.","21. The method of claim 15, wherein the segregating comprises centrifuging the collagen- containing solution at a force of about 5,000G to about 10,000G over a period of about 60 min to about 120 min.","22. The method of claim 15, wherein contacting the extracted collagen solution with the salt solution is repeated until an at least about 95% pure collagen precipitate is obtained.","23. The method of claim 15, wherein the salt solution has a concentration less than about 1.5 M.","24. The method of claim 15, wherein the salt solution is selected from the group consisting of ammonium sulfate and sodium chloride.","25. The method of claim 15, further comprising viral and prion inactivation of the re- suspended collagen solution, wherein the viral and prion inactivation is incubation in a basic solution, gamma irradiation, UV irradiation, ethylene oxide treatment, C0 2 treatment, or combinations thereof .","26. The method of claim 25, further comprising adjusting the pH of the re-suspended","collagen solution to a pH of about 2.8 to about 4.5.","27. The method of claim 15, wherein the desalting comprises dialysis against an about 0.01% to about 20%) weak acid solution.","28. The method of claim 15, wherein the drying the re-suspended collagen solution to obtain the collagen material is carried out by supercritical fluid drying, cyclic pressure drying, inert medium drying, spray drying, fluidized bed drying, lyophilization, or dehydration.","29. The method of claim 15, wherein sterilizing the collagen material comprises gamma irradiation, incubation with peracid, or supercritical fluid treatment.","30. The method of claim 29, wherein the method further comprises dissolving the collagen material in a weak acid solution, wherein the collagen material is in an amount of about 5 mg/ml to about 200 mg/mL.","31. The method of claim 15, wherein the collagen material is used to prepare a bio gel","composition according to claim 1.","32. A method for fabricating a three-dimensional structure comprising,","providing a bio gel composition at a temperature of about 0 °C to about 12 °C to a modular fabrication system,","wherein,","the bio gel composition comprises a collagen material in an amount greater than 5 mg/mL and a weak acid solution;","maintaining the bio gel composition at a temperature of about 0 °C to about 12 °C; depositing the bio gel composition to form a three-dimensional structure, wherein the three-dimensional structure undergoes gelation; and","curing the three-dimensional structure.","33. The method of claim 32, wherein the modular fabrication system is an aseptic 3D","printing device.","34. The method of claim 32, wherein the providing comprises the bio gel composition of claim 1.","35. The method of claim 32, wherein the bio gel composition comprises a collagen material in the amount of about 5 mg/mL to about 200 mg/mL.","36. The method of claim 35, wherein the bio gel composition further comprises living cells.","37. The method of claim 32, wherein the depositing is at an extrusion rate of about 30 mm /s to about 80 mm 3 /s.","38. The method of claim 32, wherein the depositing occurs sequentially, simultaneously, or separately from gelation of the three-dimensional structure.","39. The method of claim 32, wherein the three-dimensional structure undergoes gelation in less than about 3 min at a temperature of about 25 °C to about 37 °C.","40. The method of claim 32, wherein the three-dimensional structure remains solid during gelation under a hydrostatic pressure of about 30 Pa to about 120 Pa.","41. The method of claim 32, wherein the three-dimensional structure increases its storage modulus up to about 5000%.","42. The method of claim 32, wherein the three-dimensional structure sags less than about 1% to about 30%) of its height over a period of about 60 s to about 120 s.","43. The method of claim 35, wherein the curing is performed at a temperature from about 34 °C to about 37 °C in a buffer solution.","44. A method for preparing a bio gel composition comprising,","providing a first receptacle having a collagen material in a weak acid solution; providing a second receptacle having a carrier; and contacting the collagen material in a weak acid solution of the first receptacle with the carrier of the second receptacle to obtain a bio gel composition, wherein the bio gel composition has a homogeneity of about 50%> to about 99.9%.","45. The method of claim 44, wherein the collagen material comprises the collagen material of claim 15.","46. The method of claim 44, wherein the weak acid solution is an about 0.01%> to about 20%> weak acid solution.","47. The method of claim 44, wherein the carrier is selected from water, aqueous sodium","hydroxide solution, DMEM, PBS, and the like or combinations thereof. The method of claim 44, wherein the contacting comprises stirring the collagen material in the weak acid solution and the carrier to form the bio gel composition until the homogeneity of the bio gel composition is about 99.9%.","The method of claim 44, wherein the contacting further comprises stirring the collagen material in the first receptacle, the weak acid in the second receptacle, and living cells in cell medium in a third receptacle to obtain the bio gel composition until the homogeneity of the bio gel composition is about 99.9%.","The method of claim 44, wherein the method further comprises maintaining the bio gel composition at a temperature of about 0 °C to about 12 °C."]}],"lang":"en"}],"description":{"text":"3D PRINTABLE BIO GEL AND METHOD OF USE CROSS-REFERENCE TO RELATED PATENT APPLICATIONS [0001] This application claims the benefit of and priority to U.S. Provisional Application No. 62/341,960 filed May 26, 2016, which is incorporated herein by reference in its entirety. BACKGROUND [0002] The present technology relates generally to 3D-printable bio gels. More particularly, the present technology relates to methods and compositions of collagen-containing 3D printable bio gels for use in fabricating three-dimensional structures thereof. [0003] Given their broad application, collagen-based materials could prove to be advantageous substrates for use in 3D printing technology. The structure, function, and properties of collagen make it an important material for a myriad number of tissue engineering purposes. Currently available collagens reflect its diverse capabilities; yet, available collagen processes yield formulations with unfavorable properties (e.g., gelation rate, strength, elasticity, and rheology). Certain 3D manufacturing processes e.g., additive manufacturing, require biomaterials with rapid gelation properties which can be challenging to achieve in bio-based materials. [0004] The present technology is directed to overcoming these and other deficiencies. SUMMARY OF THE INVENTION [0005] One aspect of the present technology relates to a method of harvesting collagen. The method includes processing a collagen-based biomaterial to obtain biomaterial particles. In some embodiments, the collagen-based biomaterial is type I collagen derived from a mammalian source. In some embodiments, the method includes contacting the biomaterial particles with a weak acid solution to obtain a collagen-containing solution. In some embodiments, the method includes segregating the collagen-containing solution. In some embodiments, the segregating includes centrifugation. In some embodiments, the method includes contacting the collagen- containing solution with a salt solution to obtain a collagen precipitate. In some embodiments, the method includes re-suspending the collagen precipitate to obtain a re-suspended collagen solution. In some embodiments, the method optionally includes performing viral and prion inactivation of the re-suspended collagen solution. In some embodiments, the method includes desalting the re-suspended collagen solution. In some embodiments, the method includes drying the re-suspended collagen solution to obtain a collagen material. In some embodiments, the method includes sterilizing the collagen material. [0006] In another aspect, the present technology provides a bio gel composition. The bio gel composition includes a collagen material harvested as described above. In some embodiments, the bio gel composition may include collagen material in a weak acid solution. In some embodiments, the bio gel composition may be prepared using suitable amounts of collagen material. In some embodiments, the bio gel composition may include collagen material in an amount greater than 5 mg/mL. In some embodiments, the bio gel composition may undergo rapid gelation at room temperature or greater. In some embodiments, the bio gel composition of the present technology may also be liquid under a shear stress of 15 Pa to 100 Pa before gelation and remains solid under a hydrostatic pressure of about 30 Pa to about 120 Pa during gelation. In some embodiments, the bio gel composition includes carriers and non-natural additives, such as cross-linking agents. [0007] In another aspect, the present technology provides a method of preparing a three- dimensional structure from the bio gel composition described in this application. In some embodiments, the method includes providing a bio gel composition to a modular fabrication system. In some embodiments, modular fabrication system is a 3D printing device. In some embodiments, the method includes maintaining the bio gel composition at a temperature of about 0 °C to about 12 °C. In some embodiments, the method includes depositing the bio gel composition to form a three-dimensional structure, where the three-dimensional structure undergoes gelation. In some embodiments, the method includes curing the three-dimensional structure. [0008] In yet another aspect, the present technology also provides a method of preparing a bio gel composition for use in three-dimensional structure fabrication. In some embodiments, the method includes providing a first receptacle having a collagen material in a weak acid solution, where the collagen material is harvested using the methods described in this application. In some embodiments, the method includes providing a second receptacle having a carrier. In some embodiments, the method may further include providing a third receptacle of living cells. In some embodiments, the method includes contacting the collagen material in weak acid solution of the first receptacle with the carrier of the second receptacle to obtain a bio gel composition having homogeneity of about 50% to about 99.9%. BRIEF DESCRIPTION OF THE DRAWINGS [0009] FIG. 1 is a flow chart depicting an exemplary method of the present technology for harvesting collagen. [0010] FIG. 2 is a flow chart depicting an exemplary method of preparing a three-dimensional structure from the bio gel composition of the present technology. [0011] FIG. 3 is a flow chart depicting an exemplary method of preparing the bio gel composition of the present technology to fabricate a three-dimensional structure. [0012] FIG. 4 is a graphical depiction of the non-Newtonian fluid behavior measurements for an uncured bio gel composition of the present technology. [0013] FIG. 5 is a graphical depiction of the storage and loss modulus profile during thermal curing for a bio gel composition of the present technology. [0014] FIG. 6A is a graphical depiction of the increase in storage modulus of a bio gel composition of the present technology versus comparative commercial collagen bio gels. [0015] FIG. 6B are three-dimensional structure comparisons of a cured bio gel composition of the present technology compared to commercial collagen bio gels. [0016] FIG. 7 is a graphical depiction of effects of peracid sterilization on modulus for collagen samples measured by unconfined compression test. [0017] FIG. 8 is a graphical depiction of the compressive strength for cured three-dimensional structure of bio gel compositions of the present technology. [0018] FIG. 9 is a graphical depiction of the compressive strength for cured three-dimensional structure of bio gel compositions with and without cross-linking agents. [0019] FIG. 10 is a graphical depiction of the a comparison of the compressive strength for cured three-dimensional structure of a bio gel composition of the present technology and a commercial collagen bio gel composition. DETAILED DESCRIPTION [0020] Various embodiments are described hereinafter. It should be noted that the specific embodiments are not intended as an exhaustive description or as a limitation to the broader aspects discussed herein. One aspect described in conjunction with a particular embodiment is not necessarily limited to that embodiment and can be practiced with any other embodiment(s). [0021] The following terms are used throughout and are as defined below. [0022] As used herein and in the appended claims, singular articles such as \"a\" and \"an\" and \"the\" and similar referents in the context of describing the elements (especially in the context of the following claims) are to be construed to cover both the singular and the plural, unless otherwise indicated herein or clearly contradicted by context. Recitation of ranges of values herein are merely intended to serve as a shorthand method of refereeing individually to each separate value falling within the range, unless otherwise indicated herein, and each separate value is incorporated into the specification as if it were individually recited herein. All methods described herein can be performed in any suitable order unless otherwise indicated herein or otherwise clearly contradicted by context. The use of any and all examples, or exemplary language (e.g., \"such as\") provided herein, is intended merely to better illuminate the embodiments and does not pose a limitation on the scope of the claims unless otherwise stated. No language in the specification should be construed as indicating any non-claimed element as essential. [0023] The embodiments, illustratively described herein may suitably be practiced in the absence of any element or elements, limitation or limitations, not specifically disclosed herein. Thus, for example, the terms \"comprising,\" \"including,\" \"containing,\" etc. shall be read expansively and without limitation. Additionally, the terms and expressions employed herein have been used as terms of description and not of limitation, and there is no intention in the use of such terms and expressions of excluding any equivalents of the features shown and described or portions thereof, but it is recognized that various modifications are possible within the scope of the claimed technology. Additionally, the phrase \"consisting essentially of will be understood to include those elements specifically recited and those additional elements that do not materially affect the basic and novel characteristics of the claimed technology. The phrase \"consisting of excludes any element not specified. The expression \"comprising\" means \"including, but not limited to.\" Thus, other non-mentioned substances, additives, carriers, or steps may be present. Unless otherwise specified, \"a\" or \"an\" means one or more. [0024] Unless otherwise indicated, all numbers expressing quantities of properties, parameters, conditions, and so forth, used in the specification and claims are to be understood as being modified in all instances by the term \"about.\" Accordingly, unless indicated to the contrary, the numerical parameters set forth in the following specification and attached claims are approximations. Each numerical parameter should at least be construed in light of the number reported significant digits and by applying ordinary rounding techniques. The term \"about\" when used before a numerical designation, e.g., temperature, time, amount, and concentration including range, indicates approximations which may vary by ( + ) or ( - ) 10%, 5% or 1%. [0025] As will be understood by one of skill in the art, for any and all purposes, particularly in terms of providing a written description, all ranges disclosed herein also encompass any and all possible subranges and combinations of subranges thereof. Any listed range can be easily recognized as sufficiently describing and enabling the same range being broken down into at least equal halves, thirds, quarters, fifths, tenths, etc. As a non-limiting example, each range discussed herein can be readily broken down into a lower third, middle third and upper third, etc. As will also be understood by one skilled in the art all language such as \"up to,\" \"at least,\" \"greater than,\" \"less than,\" and the like include the number recited and refer to ranges which can be subsequently broken down into subranges as discussed above. Finally, as will be understood by one skilled in the art, a range includes each individual member. [0026] In some embodiments, the term \"gel\" includes, but is not limited to, non-Newtonian fluids and Bingham plastics. [0027] As used herein, the term \"shear stress\" or \"shear-thinning\" refers to the rheological viscoelastic properties of a material related to fluid-like or non-fluid-like behavior and flow. Shear stress and shear-thinning include properties related to Bingham flow, plastic flow, pseudoplasticity, dilatancy, thixotropy, rheopexy, and the like or other stress and/or strain properties of a viscous material. Further, \"shear-thinning\" refers to a reduction in apparent viscosity (the ratio of shear stress to the shear rate) with increasing (pseudoplastic), time dependent (thixotropic) or associated with a yield stress, defined as a stress that must be exceeded before flow starts, (Bingham plastics and generalized Bingham plastics). See, generally, Harris, J., & Wilkinson, W.L., \"Non-Newtonian Fluid,\" pp. 856-858 in Parker, S.P., ed., McGraw-Hill Encyclopedia of Physics, Second Edition, McGraw-Hill, New York, 1993. A suitable viscosity range of the present technology includes, but is not limited to, from 10,000 centipoise (cps) to about 30,000 cps as a resting solid, or from 3,000 cps to about 10,000 cps as liquid. [0028] As used herein, the term \"viscosity\" refers to the resistance to gradual deformation by shear stress or tensile stress of a material. [0029] As used herein, the term \"peracid\" refers to acids in which the OH moiety of a carboxyl group or an inorganic oxyacid, is replaced by an OOH moiety. Examples of such percarboxylic acids include, but are not limited to, performic acid and peracetic acid. [0030] As used herein, the term \"collagen\" refers to the main protein of connective tissue that has a high tensile strength and that has been found in most multicellular organisms. Collagen is a major fibrous protein, and it is also the non-fibrillar protein in basement membranes. It contains an abundance of glycine, proline, hydroxyproline, and hydroxylysine. Collagen is found throughout the body, and is of at least 12 types (type I-XII). [0031] The term \"biomaterial\" refers to a material derived from a natural or synthetic source. [0032] As used herein, the term \"receptacle\" refers to standard systems capable of receiving and housing any materials for preparing and using the present technology as disclosed herein. Materials include, but are not limited to, collagen material, weak acid solutions, carriers, additives, solvents, living cells, cell medium, and the like or combinations thereof. For example, suitable receptacles include, but are not limited to, syringes, funnels, beakers, mixers, drums, bottles, vials, and the like. [0033] Collagen-based materials are advantageous substrates for use as bio gels in fabricating 3D structures. In various aspects, methods of harvesting collagen for use in bio gel compositions, bio gel compositions, methods for making 3D structures using bio gel compositions, and methods for preparing bio gel compositions for use in 3D printing systems are provided. [0034] In one aspect, disclosed herein is a method of harvesting collagen, wherein the method includes processing a collagen-based biomaterial to obtain biomaterial particles; contacting the biomaterial particles with a weak acid solution to obtain a collagen-containing solution; segregating the collagen-containing solution; contacting the collagen-containing solution with a salt solution to obtain a collagen precipitate; re-suspending the collagen precipitate to obtain a re- suspended collagen solution, and optionally, performing viral and prion inactivation of the re- suspended collagen solution; desalting the re-suspended collagen solution; drying the re- suspended collagen solution to obtain a collagen material; and sterilizing the collagen material. [0035] The collagen-based biomaterial can be from a source, such as a vertebrate collagen source. In some embodiments, the vertebrate collagen source includes, but is not limited, mammals, birds, reptiles, fish, and the like. In some embodiments, the source is a mammalian, including but not limited to, equine, canine, porcine, bovine, feline, caprine, ovine, murine, or human. In certain embodiments, the mammalian source is porcine, bovine, murine, or a combination thereof. [0036] In another embodiment of the present technology, the collagen-based biomaterial is from an artificial source. In certain embodiments, the artificial source includes, but is not limited to, collagen from recombinant expressed protein in cell culture, engineered cells, bacterial cell culture, mammalian cell culture, and the like or combinations thereof. In some embodiments, the artificial source is an engineered cell source. Suitable engineered cell sources include, but are not limited to, yeast cells, insect secretory cells, and the like or combinations thereof. [0037] The collagen in the collagen-based biomaterial may be obtained from various sources including, but not limited to, tendon, skin, ligament, bone, teeth, cartilage, connective tissue, intervertebral disc, cornea, and the like and combinations thereof. In some embodiments, the collagen-based biomaterial is skin, bone, tendon, or a combination thereof. In certain embodiments, the skin, bone, or tendon may be derived from a mammalian source, including but not limited to, sources including bovine, porcine, murine, or combinations thereof. When the source is tendon, it may include, but is not limited to, common digital extensor tendon, lateral extensor tendon, deep flexor tendon, and the like or combinations thereof. [0038] The collagen-based biomaterial may be used as such or may be subjected to quality discrimination. This discrimination may be performed using various techniques known in the art, including, but not limited to, manual visual inspection to identify areas comprising non-white surface properties or using computer vision techniques in which pixel values are read for color and intensity and regions beneath a threshold are rejected. These thresholds may include RGB values that deviate from 1 : 1 : 1 ratios by about 1%, about 5%, about 10%, about 20%, about 50%, or about 80%; and the individual channel values may be about 99%, about 95%, about 90%, about 80%, about 50%, or about 30%. In some embodiments, the discrimination includes selecting collagen-based biomaterial having less than about 5% infiltrates. [0039] The collagen in the collagen-based biomaterial can be of any type. In some embodiments, the collagen-based biomaterial may include type I collagen. Type I collagen can be found in most connective tissues, is the most abundant collagen type in a living organism, and is found in tendons, corium, and bone. Over 90% of the collagen in the body is type I. In some embodiments the type I collagen may include insoluble collagen, collagen fibers, soluble collagen, and acid-soluble collagen. In certain embodiments, the type I collagen is soluble collagen, acid-soluble collage, or a combination thereof. In some embodiments, the type I collagen does not include atelocollagen. [0040] In some embodiments, the present methods include processing the collagen-based biomaterial using mechanical action to obtain the biomaterial particles. Suitable mechanical action includes, but is not limited to, freezing, slicing, chopping, mincing, milling, grinding, and combinations thereof. In certain embodiments, the method may include slicing the collagen- based biomaterial into fine strands, to obtain biomaterial particles of suitable size. In one embodiment, the collagen-based biomaterial may be sliced longitudinally. In another embodiment, the slicing may be cross-longitudinal. In yet another embodiment, the slicing is both longitudinal and cross-longitudinal. In some embodiments, the slicing may be performed without freezing the collagen-based biomaterial prior to slicing. In other embodiments, the collagen-based biomaterial may be frozen to facilitate slicing. In certain embodiments, the collagen-based biomaterial is mechanically processed into biomaterial particles that have a size from about 100 μπι to about 1 cm. Suitable biomaterial particle sizes include, but are not limited to, from about 100 μπι to about 50 mm, about 100 μπι to about 1 mm, about 100 μπι to about 500 μηι, about 100 μπι to about 250 μηι, and ranges between any two of these values or less than any one of these values. [0041] In some embodiments, the collagen-based biomaterial further includes soaking in solvent prior to mechanical action. Suitable solvents include, but are not limited, deionized water, alcohol, or combinations thereof. Suitable alcohols include, but are not limited to, methanol, ethanol, propanol, isopropanol, and the like or combinations thereof. In some embodiments, the processing further includes washing the biomaterial particles. Washing includes adding the biomaterial particles to a buffer solution. Suitable buffer solutions include, but are not limited to, phosphate buffered saline, sodium chloride solution, phosphates, water, and phosphate buffer solution. [0042] In some embodiments of the present technology, further to obtaining the biomaterial particles, the present method includes contacting the biomaterial particles with a weak acid solution to obtain a collagen-containing solution. [0043] In some embodiments, the weak acid solution includes the weak acid in an amount that is about 0.01% to about 20.0% of the weak acid solution. The amount of weak acid in the weak acid solution may include, but is not limited to, about 0.01% to about 20%, about 0.01% to about 10%, about 0.01% to about 3%, about 0.1% to about 3%, about 0.3% to about 8%, about 0.5% to about 5%), about 1% to about 3%, and ranges between any two of these values or less than any one of these values. Suitable weak acid solutions include the weak acid in an amount that is about 0.01%, about 0.05%, about 0.1%, about 0.25%, about 0.5%, about 1.0%, about 1.5%, about 2.0%, about 2.5%, about 3.0%, about 4.0%, about 5.0%, about 6.0%, about 7.0%, about 8.0%, about 9.0%, about 10.0%, about 12.5%, about 15.0%, about 20% of the weak acid solution and ranges between any two of these values or less than any one of these values. [0044] In certain embodiments of the present technology, the amount of weak acid solution contacting the biomaterial particles include, but is not limited to, about 25 mL to about 250 mL of weak acid solution per gram of biomaterial particles. Suitable amounts of weak acid solution contacting the biomaterial particles may include, but not limited to, about 25 mL/g to about 250 mL/g, about 25 mL/g to about 200 mL/g, about 25 mL/g to about 150 mL/g, about 25 mL/g to about 100 mL/g, about 25 mL/g to about 75 mL/g, about 25 mL/g to about 50 mL/g. Alternatively, suitable amounts may include about 50 mL/g to about 250 mL/g, about 100 mL/g to about 250 mL/g, about 150 mL/g to about 250 mL/g, or about 200 mg/mL to about 250 mg/mL. The amount of weak acid contacting the biomaterial particles may include, but are not limited to, about 100 mL/g, about 150 mL/g, about 200 mL/g, about 250 mg/mL and ranges between any two of these values or less than any one of these values. [0045] The contacting of the biomaterial particles with the weak acid solution may be performed using suitable methods to ensure maximum dissolution or dispersion of the biomaterial particles in the acid solution. In some embodiments, the contacting may include, but not limited to, mixing or agitating together the biomaterial particles with the weak acid solution to obtain the collagen-containing solution. In particular embodiments, the contacting may include mixing the biomaterial particles and the weak acid solution. Suitable contacting may include manual mixing or mixing using suitable mixing equipment such as a shaker (e.g., an orbital shaker), rotator, tumbler, large tank mixer, overhead stirrer, and the like. In some embodiments, the contacting is carried out with an orbital shaker. In one embodiment, the contacting with the orbital shaker may include speeds of at least about 100 RPM to about 250 RPM, about 120 RPM to about 230 RPM, about 150 RPM to about 220 RPM, about 100 RPM to about 200 RPM, about 150 RPM to about 200 RPM, and ranges between any two of these values or less than any one of these values. In one embodiment, the contacting with the orbital shaker may include speeds of at least about 100 RPM, about 1 10 RPM, about 120 RPM, about 130 RPM, about 140 RPM, about 150 RPM, about 160 RPM about 170 RPM, about 180 RPM, about 190 RPM, about 200 RPM, about 210 RPM, about 220 RPM, about 230 RPM, about 240 RPM, about 250 RPM and ranges between any two of these values or less than any one of these values. In one embodiment, the orbital shaker speed is about 100 RPM to about 200 RPM. In another embodiment, the orbital shaker speed is about 100 RPM to about 150 RPM. In yet another embodiment, the orbital shaker speed is about 150 RPM to about 200 RPM. [0046] In some embodiments, the contacting may include stirring biomaterial particles with the weak acid solution. Suitable stirring may include manual stirring, overhead stirrers, and magnetic stirrers. In some embodiments, the contacting the biomaterial particles with the weak acid solution may include a period of about 24 h to about 2 weeks. Suitable periods may include, but not limited to, about 24 h to about 10 days, about 24 h to about 7 days, about 24 h to about 5 days, about 48 h to about 14 days, about 72 h to about 9 days, about 5 days to about 14 days, about 5 days to about 7 days, and ranges between any two of these values or less than any one of these values. The period may include, but is not limited to, at least about 24 h, about 36 h, about 48 h, about 60 h, about 72 h, about 84 h, about 96 h, about 5 days, about 6 days, about 7 days, about 9 days, about 10 days, about 11 days, about 12 days, about 13 days, about 14 days and ranges between any two of these values or less than any one of these values. In one embodiment, the contacting the biomaterial particles with the weak acid solution includes periods of about 2 days to about 14 days. In another embodiment, the contacting includes periods of about 3 days to about 9 days. In yet another embodiment, the contacting includes periods of about 5 days to about 7 days. [0047] Suitable weak acid solutions may include, but are not limited to, weak acid solutions suitable for maintaining a pH buffer between about 2.8 to about 4.0. In some embodiments, the weak acid solution maintains a pH of about 2.8 to about 4, about 2.8 to about 3.5, about 2.8 to about 3.3, about 3.0 to about 4.0, about 3.3 to about 4.0, and ranges between any two of these values or less than any one of these values. In some embodiments, suitable weak acid solutions may include, but are not limited to, solutions having a pKa of about 3 to about 7. Suitable pKa values include about 3 to about 7, about 3 to about 6, about 3 to about 5, about 3.5 to about 7, about 4 to about 7, about 4.5 to about 7, and ranges between any two of these values or less than any one of these values. Suitable weak acid solutions include, but are not limited to, formic acid, propanoic acid, acetic acid, citric acid, butanoic acid, salicylic acid, gluconic acid, heptonic acid, carbonic acid, hydrofluoric acid, nitrous acid, hypochlorous acid, hydrochloric acid, and the like or combinations thereof. [0048] Once an acid solution of the biomaterial particles is obtained, it may be subjected to suitable processing to segregate the extracted collagen. In some embodiments of the present technology, segregating the extracted collagen from the collagen-containing solution may include, but is not limited to, centrifugation, size exclusion filtration, screen filtration, and the like or combinations thereof. In certain embodiments, the centrifugation of the collagen- containing solution may include centrifuging at a force of about 5,000G to about 25,000G. In certain embodiments, the centrifugation may include centrifuging at a force of about 5,000G to about 20,000G, about 5,000G to about 15,000G, about 5,000G to about 12,000G, and about 5,000G to about 10,000G. In other embodiments, the centrifugation may include centrifuging at a force of at least about 5,000G, about 6,000G, about 7,000G, about 8,000G, about 9,000G, about 10,000G, about 1 1,000G, about 12,000G, about 15,000G, about 20,000G, about 25,000G and ranges in between any two of these values or less than any one of these values. In one embodiment, the centrifugation may include centrifuging at a force of about 9,000G to about 12000G. [0049] In certain embodiments, the centrifugation may include, but is not limited to, centrifuging over a period of about 10 min to about 120 min. In certain embodiments, the periods may include, but are not limited to, 10 min to about 120 min, about 30 min to about 1 10 min, about 60 min to about 100 min, and ranges between any two of these values or less than any one of these values. Suitable periods may include from about 10 min, about 30 min, about 60 min, about 90 min, about 100 min, about 1 10 min, about 120 min, and ranges in between any two of these values or less than any one of these values. In one embodiment, the segregating may include centrifuging the collagen-containing solution over a period of about 10 min to about 90 min or about 80 min to about 1 10 min. In some embodiments, the segregating may include collecting the resulting supernatant solution after centrifugation. [0050] The supernatant solution, which contains extracted collagen, may be then suitably treated to separate the collagen material from the solution. In some embodiments of the present technology, after segregating the collagen-containing solution, the contacting the extracted collagen solution with a salt solution may include repeating until an at least about 95% to about 99.9% pure collagen precipitate is obtained. In some embodiments, the contacting may include salt solutions at concentrations of about 0.55 M to about 5 M. In certain embodiments, the salt solution concentrations may include, but not limited to, about 0.55 M to about 4 M, about 0.55 M to about 3 M, about 0.55 M to about 2 M, about 1 M to about 4 M, about 1 M to about 2.5 M, about 1 M to about 1.5 M, about 1.5 M to about 2.5 M, about, about 1 M to about 1.5 M, and ranges between any two of these values or less than any one of these values. Suitable salt solution concentrations may include about 0.55 M, about 0.75 M, about 1 M, about 1.5 M, about 2 M, about 2.5 M, about 3 M, about 3.5 M, about 4 M, about 4.5 M, about 5 M and ranges between any two of these values or less than any one of these values. In one embodiment, the contacting the extracted collagen solution with the salt solution may include salt solution concentrations of about 0.55 M to about 3 M. In another embodiment, the salt solution concentration may include concentrations of about 0.55 M to about 2 M. In yet another embodiment, the salt solution concentration may include concentrations of about 0.55 M to about 1.5 M. In particular embodiments, the salt solution concentrations may include concentrations less than about 1.5 M. [0051] The salt solution may be added to the supernatant (i.e., extracted collagen solution) at a suitable rate to ensure maximum precipitation of the collagen material. In some embodiments, the method may include adding the salt solution at a rate of at least about 10 mL/min to about 20 mL/min. In certain embodiments, the rate includes, but not limited to, 10 mL/min to about 22 mL/min, about 10 mL/min to about 18 mL/min, about 10 mL/min to about 15 mL/min, about 12 mL/min to about 25 mL/min, about 15 mL/min to about 22 mL/min, and ranges between any two of these values or less than any one of these values. Suitable rates for adding the salt solution may include, but not limited to, at least about 10 mL/min, about 12 mL/min, about 15 mL/min, about 18 mL/min, about 20 mL/min, about 22 mL/min, about 25 mL/min and ranges between any two of these values or less than any one of these values. In certain embodiments, the salt solution may be added at ratio by weight of about 1 : 1 to about 2: 1 salt solution to collagen- containing solution. [0052] In certain embodiments, the salt solution treatment is followed by incubating the resulting solution over a period of 30 min to 1 week. In some embodiments, the incubating is from about 30 min to about 6 days, about 30 min to about 5 days, about 1 h to about 4 days, about 2 h to about 1 day, about 3 h to about 12 h, and ranges between any two of these values or less than any one of these values. Suitable incubation periods may include at least about 30 min, about 45 min, about 1 h, about 2 h, about 6 h, about 12 h, about 1 day, about 3 days, about 4 days, about 5 days, about 1 week and ranges between any two of these values or less than any one of these values. [0053] In certain embodiments, the incubation is followed by centrifugation of the collagen precipitate mixture obtained. The centrifugation may include centrifuging the incubated solution at a force of about 5,000G to about 25,000G. Suitable centrifugation forces may include, but are not limited to, 5,000G to about 20,000G, about 5,000G to about 15,000G, about 5,000G to about 12,000G, and about 5,000G to about 10,000G. In certain embodiments, the centrifugation may include centrifuging over a period of about 5 min to about 60 min. Suitable centrifugation periods may include, but are not limited to, about 5 min to about 60 min, about 10 min to about 50 min, about 15 min to about 40 min, about 20 min to about 40 min, and ranges between any two of these values or less than any one of these values. Alternatively, suitable centrifugation periods may include, but are not limited to about 5 min, about 10 min, about 20 min, about 30 min, about 40 min, about 50 min, about 60 min and ranges between any two values or less than any one of these values. In one embodiment, the centrifugation may include centrifuging over a period of about 10 min to about 30 min. In some embodiments, the centrifugation may be conducted directly after the salt solution treatment without incubation. [0054] The above described steps to obtain the collagen precipitate may be suitably repeated to obtain maximum recovery of the collagen precipitate. In certain embodiments, the method may include repeating the one or more of the contacting, salt treatment, incubation and separation procedures until an at least about 95% pure collagen precipitate is obtained. Suitable purities include, but are not limited to, about 95% to about 99.9%, about 96% to about 99.9%, about 97% to about 99.9%, about 98% to about 99.9%, about 99% to about 99.9%, about 99.5% to about 99.9%), and ranges in between any two values or less than any one of these values. In some embodiments, the collagen material is pure up to at least about 50% to about 99.9% , about 60% to about 99.9%, about 75% to about 99.9%, about 80% to about 99.9%, about 90% to about 99.9%), about 95% to about 99.9%, and ranges between any two of these values or less than any one of these values. In certain embodiments, the collagen precipitate purity is at least about 50%, about 60%, about 70%, about 75%, about 80%, about 85%, about 90%, about 95%, about 95.5%, about 96%, about 96.5%, about 97%, about 97.5%, about 98%, about 98.5%, about 99%, about 99.5%), about 99.9%, and ranges between any two of these values or less than any one of these values. In one embodiment, the one or more steps are repeated until an at least about 95% pure collagen precipitate is obtained. In another embodiment, the one or more steps are repeated until an at least about 99.9% pure collagen precipitate is obtained. The purity of the collagen precipitate may be determined by standard methods. [0055] Any suitable salts can be used in the methods described above. Exemplary salts include, but are not limited to, sodium chloride, ammonium sulfate, and the like or combinations thereof. The salt solutions may include aqueous salt solutions. [0056] The collagen precipitate is re-suspended in solution to obtain a re-suspended collagen solution. In some embodiments, the re-suspending may include contacting the collagen precipitate with a weak acid solution. Suitable weak acid solutions include, but are not limited to, solutions that maintain a pH buffer between about 2.8 to about 4. Suitable pH values include, but are not limited to, those disclosed above in any embodiment. In some embodiments, the weak acid solutions include solutions having a pKa between about 3 to about 7. Suitable pKa values for the weak acid solution include, but not limited to, those disclosed above in any embodiment. In some embodiments, the weak acid is in an amount, including but not limited to, about 0.01%) to about 20.0% of the weak acid solution. Suitable weak acids include those disclosed above in any embodiment. [0057] Based on the desired application, the re-suspended collagen solution may be subjected to further treatment to improve the purity or eliminate harmful agents. In some embodiments of the present technology, the method includes optionally performing a viral and prion inactivation step. The viral and prion inactivation may be conducted using various methods, including but not limited to, incubation in basic solution, gamma irradiation, UV irradiation, ethylene oxide treatment, C0 2 treatment, or combinations thereof. In some embodiments, the viral and prion inactivation includes incubation in basic solution. Suitable basic solutions include, but are not limited to, metal or ammonium hydroxides, acetates, citrates, formates, sulfates, and combinations thereof. In some embodiments, the metal includes, but is not limited to, alkali and alkaline earth metals. Suitable basic solutions of alkali and alkaline earth metals include, but are not limited to, sodium, potassium, calcium, and magnesium hydroxides, acetates, citrates, formates, sulfates, and combinations thereof. [0058] In some embodiments, the incubation may include incubating the re-suspended collagen solution in a basic solution for a suitable period, including but not limited to, about 5 min, about 10 min, about 20 min, about 30 min, about 40 min, about 50 min, about 60 min, and ranges between any two of these values or less than any one of these values. Alternatively, suitable periods include about 5 min to about 1 h, about 10 min to about 1 h, about 30 min to about 1 h, about 45 min to about 1 h, and ranges between any two of these values or less than any one of these values. In one embodiment, the sodium hydroxide incubation period may include exposure times of about 15 min to about 45 min. In another embodiment, the period may include exposure times of about 30 min to about 1 h. [0059] In some embodiments, the incubation may include base solution concentrations of up to about 4 M. Suitable concentrations include, but are not limited to, about 0.01 M to about 4 M, about 0.1 M to about 2 M, about 0.25 M to about 1.5 M, about 0.5 M to about 1 M, and ranges between any two of these values or less than any one of these values. In some embodiments, the viral and prion inactivation may further include adjusting the pH of the re-suspended collagen solution to a pH of about 2.8 to about 4 with a weak acid. In certain embodiments, the pH is adjusted to about 2.8 to about 3, about 3 to about 4, about 3.2 to about 4, about 3.5 to about 4, and ranges between any two of these values or less than any one of these values. In one embodiment, the method may include adjusting the pH of the re-suspended collagen solution with about 0.01% to about 20% weak acid solution to a pH of about 2.8 to about 4 after incubation. [0060] As a result of the salt solution treatment, the re-suspended collagen solution may contain residual salt which may be removed using suitable desalting methods. Suitable desalting methods include, but are not limited to, buffer exchange filter concentration, dialysis, tangential flow filtration, ion exchange membrane process, and the like or combinations thereof. In one embodiment, desalting of the re-suspended collagen solution may include dialysis. The dialysis may include dialyzing the re-suspended collagen solution against an acid solution. Suitable acids used for dialyzing may include, but are not limited to, weak acids as disclosed herein in any embodiment. In certain embodiments, the dialyzing can include dialyzing the re-suspended collagen solution against an about 0.01% to about 20% weak acid solution. In certain embodiments, the dialysis is carried out over a period of up to about 2 weeks. The dialysis period may include, but is not limited to, about 12 h to about 2 weeks, about 18 h to about 12 days, about 1 day to about 1 week, and ranges between any two of these values or less than any one of these values. Suitable periods may include, but not limited to, about 2 h, about 6 h, about 12 h, about 18 h, about 1 day, about 3 days, about 5 days, about 7 days, about 9 days, about 12 days, about 14 days, and ranges between any two of these values or less than any one of these values. Suitable buffer solutions may be used during dialysis to maintain the pH of the solution. If used, the buffer may be exchanged with fresh buffer solution in between dialysis process. In one embodiment, the dialyzing is carried out against an about 0.01% to about 20% weak acid solution over a period of about 12 h to about 5 days, and may include exchanging the dialysis buffer after about 24 h. [0061] In some embodiments, after desalting, the re-suspended collagen solution may be subjected to drying to obtain a collagen material. Suitable drying methods may include, but are not limited to, supercritical fluid drying, spray drying, cyclic pressure drying, inert medium drying, fluid bed drying, lyophilizing, dehydration, and the like or combinations thereof. [0062] In some embodiments, the method further includes sterilizing the collagen material. Suitable methods for sterilization of the collagen material may include, but are not limited to, gamma irradiation, incubation with peracid, supercritical fluid treatment, and the like or combinations thereof. In some embodiments, the sterilizing includes gamma irradiation. In some embodiments, the method may include exposing collagen material to gamma radiation between about 0.01 Mrad to about 5 Mrad. Suitable gamma radiation amounts include about 0.01 Mrad to about 5 Mrad, about 0.1 Mrad to about 4.5 Mrad, about 0.5 Mrad to about 3.5 Mrad, about 1 Mrad to about 3 Mrad, and ranges between any two of these values or less than any one of these values. The gamma irradiation process may further include combining additional additives or minerals to the collagen material prior to irradiation. [0063] In some embodiments, the sterilizing includes incubation with peracid. In some embodiments, the peracid incubation is performed via vapor incubation. In some embodiments, the peracid is present in an amount from about 0.01% to about 5%. Suitable amounts include, but are not limited to, about 0.01% to about 5%, about 0.01% to about 3%, about 0.01% to about 1%, about 0.05% to about 3%, about 0.05% to about 1%, about 0.05% to about 0.5%, about 0.1%) to about 1%), about 0.5% to about 1%, about 0.5% to about 3%, and ranges between any two of these values or less than any one of these values. In some embodiments, the vapor incubation is performed at a flow rate of about 20 L/min to about 120 L/min. Suitable flow rates include, but are not limited to, about 20 L/min to about 100 L/min, about 40 L/min to about 90 L/min, or about 80 L/min to about 90 L/min. In some embodiments, the vapor incubation is carried for a duration from about 15 s to about 1 h. Suitable vapor incubation durations include, but are not limited to about 30 s to about 45 min, about 1 min to about 30 min, about 5 min to about 15 min, about 10 min to about 25 min, and ranges between any two of these values or less than any one of these values. [0064] In some embodiments, the sterilizing includes supercritical fluid treatment (SCF). In some embodiments, the supercritical fluid includes, but is not limited to supercritical carbon dioxide, nitrous oxide, water, alcohol, acetone, and the like or combinations thereof. In some embodiments, the supercritical treatment is carried out at temperatures from about 27 °C to about 55 °C. Suitable temperatures include about 27 °C to about 55 °C, about 30 °C to about 45 °C, about 35 °C to about 40 °C, and ranges between any two of these values or less than any one of these values. In some embodiments, the supercritical fluid treatment is carried out at a pressure of about 75 bar to about 525 bar, about 100 bar to about 475 bar, about 250 bar to about 400 bar, about 300 bar to about 375 bar, and ranges between any two of these values or less than any one of these values. As demonstrated in FIG. 7, sterilized collagen material (e.g., peracid sterilized) exhibits no degradation in function when used in a bio gel composition, as compared to unsterilized collagen material. [0065] The collagen material of the present technology may include dissolving the sterilized collagen material in a weak acid solution, as described herein. In some embodiments, the weak acid solution is an about 0.01% to about 3% weak acid solution. The sterilized collagen material may be dissolved in the weak acid solution in any concentration. Suitable concentrations include, but are not limited to, about 5 mg/mL to about 200 mg/mL, about 5 mg/mL to about 60 mg/mL, about 20 mg/mL to about 150 mg/mL, about 40 mg/mL to about 100 mg/mL, or about 60 mg/mL to about 90 mg/mL. [0066] In some embodiments of the present technology, the method may include performing one or more steps of the method at a temperature of up to about 22 °C. In some embodiments, the temperature may include, but not limited to, about 0 °C to about 22 °C, about 0 °C to about 20 °C, about 0 °C to about 12 °C, about 0 °C to about 6 °C, about 2 °C to about 6 °C, and ranges between any two of these values or less than any one of these values. [0067] In some embodiments of the present technology, the method may include performing one or more steps of the method in compliance with Good Manufacturing Practice (GMP) guidelines for aseptic preparation or aseptic processing, as promulgated by the U.S. Food and Drug Administration, for example. In one embodiment, the sterilized collagen material is in compliance with GMP guidelines. In at least one embodiment, the method of the present technology is a method according to the steps illustrated in FIG. 1. [0068] In some embodiments, the methods of the present technology include processing a collagen-based biomaterial to obtain an about 100 μΜ to about 1 cm biomaterial particles, and optionally soaking the collagen-based biomaterial in alcohol and washing the biomaterial particles in a buffer solution; contacting the biomaterial particles with an about 0.01% to about 20%) weak acid solution to obtain a collagen-containing solution; segregating the collagen- containing solution to obtain an extracted collagen solution; contacting the extracted collagen solution with a salt solution until an at least about 95% pure collagen precipitate is obtained; re- suspending the collagen precipitate in an about 0.01% to about 20% weak acid solution to obtain a re-suspended collagen solution; optionally, undergoing viral and prion inactivation of the re- suspended collagen solution; desalting the re-suspended collagen solution; drying the re- suspended collagen solution to obtain a collagen material; and sterilizing the collagen material by vapor incubation with peracid, and optionally suspending the sterilized collagen material in an about 0.01%) to about 3% weak acid solution. [0069] In another aspect of the present technology, a bio gel composition is provided, wherein the composition includes the collagen material obtained using the present method of harvesting collagen. [0070] In another aspect of the present technology, a bio gel composition is provided, wherein the composition includes a collagen material as described above in any embodiment. The bio gel composition may include collagen material in a weak acid solution. The bio gel composition may be prepared using suitable amounts of collagen material. In some embodiments, the bio gel composition may include collagen material in an amount greater than 5 mg/mL. Suitable amounts of collagen material in the bio gel composition may include, but are not limited to, about 5 mg to about 200 mg/mL. The bio gel composition may undergo rapid gelation at room temperature. In some embodiments, the bio gel composition may undergo gelation in less than about 10 min, less than about 8 min, less than about 5 min, less than about 3 min, less than about 2 min, less than about 1 min, or less than about 30 s, and time periods in between any two of these values or less than any one of these values, at a temperature of about 25 °C to about 37 °C. The bio gel composition of the present technology may also be liquid under a shear stress of 15 Pa to 100 Pa before gelation and remain solid under a hydrostatic pressure of about 30 Pa to about 120 Pa during gelation. [0071] In some embodiments, the collagen material in the bio gel compositions may include collagen from a mammalian source. Suitable mammalian sources may include, but are not limited to, equine, canine, porcine, bovine, feline, caprine, ovine, murine, or human. In certain embodiments, the mammalian source is porcine, bovine, or a combination thereof. The collagen in the collagen material can be of any type and can be obtained from various sources including, but not limited to, tendon, skin, ligament, bone, teeth, cartilage, connective tissue, intervertebral disc, cornea, and the like and combinations thereof. In some embodiments, the collagen material selected from tendon, skin, bone, or combinations thereof. In certain embodiments, the collagen material may be derived from a mammalian source, including but not limited to, bovine, porcine, murine, or combinations thereof. When the source is tendon, it may include, but is not limited to, common digital extensor tendon, lateral extensor tendon, deep flexor tendon, or combinations thereof. In some embodiments of the present technology, the collagen material may include type I collagen. In some embodiments, the type I collagen may include insoluble collagen, collagen fibers, soluble collagen, and acid-soluble collagen. In certain embodiments, the type I collagen is soluble collagen, acid-soluble collage, or a combination thereof. In some embodiments, the type I collagen does not include atelocollagen. [0072] In some embodiments of the present technology, the bio gel composition may include the collagen material in an amount of about 5 mg/mL to about 200 mg/mL in a weak acid solution. In certain embodiments, the amount of collagen material in the bio gel composition may include, but is not limited to, about 5 mg/mL to about 200 mg/mL, about 10 mg/mL to about 100 mg/mL, about 15 mg/mL to about 80 mg/mL, about 20 mg/mL to about 70 mg/mL, about 25 mg/mL to about 50 mg/mL, about 5 mg/mL to about 60 mg/mL, about 5 mg/mL to about 40 mg/mL, and ranges between any two of these values or less than any one of these values. In other embodiments, the amount of collagen material in the bio gel composition may include about 5 mg/mL, about 10 mg/mL, about 15 mg/mL, about 20 mg/mL, about 25 mg/mL, about 30 mg/mL, about 40 mg/mL, about 50 mg/mL, about 60 mg/mL, about 70 mg/mL, about 80 mg/mL, about 90 mg/mL, about 100 mg/mL, and ranges between any two values or less than any one of these values. [0073] In some embodiments of the present technology, the collagen material is dissolved in a weak acid solution. The weak acid solution may include weak acid in amounts in the range of about 0.01% to about 20.0% of the weak acid solution. The amount of weak acid in the weak acid solution may include, but is not limited to, about 0.01% to about 20%, about 0.01% to about 10%, about 0.01% to about 3%, about 0.1% to about 3%, about 0.3% to about 8%, about 0.5% to about 5%), about 1% to about 3%, and ranges between any two of these values or less than any one of these values. Suitable weak acid solutions include the weak acid in an amount that is about 0.01%, about 0.05%, about 0.1%, about 0.25%, about 0.5%, about 1.0%, about 1.5%, about 2.0%, about 2.5%, about 3.0%, about 4.0%, about 5.0%, about 6.0%, about 7.0%, about 8.0%, about 9.0%, about 10.0%, about 12.5%, about 15.0%, about 20% of the weak acid solution and ranges between any two of these values or less than any one of these values. In some embodiments, the weak acid solution is an about 0.01% to about 3% weak acid solution. Suitable weak acid may include, but is not limited to, weak acid solutions as described herein in any embodiment. [0074] The bio gel composition may suitably include carriers or non-natural additives. Suitable carriers include, but are not limited to, water, aqueous ionic salt solutions (e.g., sodium hydroxide), phosphate buffer saline (PBS), cell medium, fetal bovine serum (FBS), Dulbecco' s minimum essential medium (DMEM), fibroblast growth factor (bFGF), and the like or combinations thereof. Suitable non-natural additives include, but are not limited to, cross- linking agents. Suitable cross-linking agents include, but are not limited to, riboflavin, ribose, polyethylene glycol (PEG), glutaraldehyde, l-ethyl-3-(3-dimethylaminopropyl)-carbodiimide hydrochloride, genipin, chitosan, and the like or combinations thereof. In one embodiment, the bio gel composition includes ribose. In another embodiment, the bio gel composition includes riboflavin. [0075] In some embodiments, the bio gel composition may include decorin in the amounts of about 0.01%) to about 5% (w/v). Suitable amounts of decorin include, but not limited to, about 0.01% to about 3% (w/v), about 0.01% to about 2% (w/v), about 0.1% to about 5% (w/v), about 0.1% to about 3% (w/v), about 0.1% to about 2% (w/v), about 0.3% to about 5% (w/v), 0.3% to about 3% (w/v), about 0.3% to about 2% (w/v), and ranges between any two of these values or less than any one of these values. Decorin is a small cellular or pericellular matrix proteoglycan that is, on average, about 90 to about 140 kDa in molecular weight. The glycosaminoglycan chains of decorin contain chondroitin sulfate or dermatan sulfate. [0076] In some embodiments, the bio gel composition may further include living cells. In some embodiments, the living cells include, but not limited to, epidermal cells, chondrocytes and other cells that form cartilage, macrophages, adipocytes, dermal cells, muscle cells, hair follicles, fibroblasts, organ cells, osteoblasts, osteocytes and other cells that form bone, endothelial cells, mucosal cells, pleural cells, ear canal cells, tympanic membrane cells, peritoneal cells, Schwann cells, corneal epithelial cells, gingiva cells, central nervous system neural stem cells, or tracheal epithelial cells. In one embodiment, the bio gel composition includes chondrocytes cells. In some embodiments, the bio gel composition includes living cells and is maintained at physiological pH. In some embodiments, the bio gel composition has a pH of about 7.4. [0077] In some embodiments of the present technology, the bio gel composition may further include maintaining the composition at a temperature of about 0 °C to about 12 °C before gelation. The temperatures may include, but are not limited to, about 0 °C to about 12 °C, about 0 °C to about 10 °C, about 2 °C to about 10 °C, about 2 °C to about 6 °C, about 3 °C to about 8 °C, about 3 °C to about 6 °C, and ranges between any two of these values or less than any one of these values. In certain embodiments, the maintaining may include, but is not limited to, temperatures of about 0 °C, about 2 °C, about 4 °C, about 6 °C, about 8 °C, about 10 °C, about 12 °C and ranges between any two of these values or less than any one of these values. [0078] In some embodiments, the bio gel composition may be a liquid under shear stress greater than about 15 Pa. In certain embodiments, the bio gel composition becomes a liquid under shear stress in the amounts of about 15 Pa to about 100 Pa. Suitable shear stress amounts include, but are not limited to, about 15 Pa to about 100 Pa, about 20 Pa to about 100 Pa, about 25 Pa to about 90 Pa, about 30 Pa to about 90 Pa, and ranges between any two of these values or less than any one of these values. In some embodiments, the bio gel composition becomes liquid under shear stress of about 15 Pa, about 20 Pa, about 25 Pa, about 30 Pa, about 40 Pa, about 50 Pa, about 60 Pa, about 70 Pa, about 80 Pa, about 90 Pa, about 100 Pa. [0079] The bio gel composition of the present technology, while at rest and under no shear stress, remains solid under its own weight during gelation. In some embodiments, the bio gel composition remains solid under a hydrostatic pressure of about 30 Pa to about 120 Pa. Suitable hydrostatic pressures include, but is not limited to, about 30 Pa to about 120 Pa, about 50 Pa to about 120 Pa, about 60 Pa to about 120 Pa, about 80 Pa to about 120 Pa, about 30 Pa to about 90 Pa, about 30 Pa to about 80 Pa, about 30 Pa to about 60 Pa, and ranges between any two of these values or less than any one of these values. [0080] The bio gel composition may be suitably shaped or formed into a two- or three- dimensional structure. In some embodiments, the bio gel composition may hold the shape of a three-dimensional structure prior to gelation. In some embodiments, the three-dimensional structure may be shaped or formed using a modular fabrication system. Suitable modular fabrication systems may include, but are not limited to, injection molding, rotational molding, positive molds, negative molds, subtractive manufacturing, milling and machining, and 3D printing devices. [0081] In one embodiment, the modular fabrication system is a 3D printing device. Suitable 3D printing devices may include, but are not limited to, 3D printing devices capable of non-aseptic or aseptic three-dimensional structure fabrication. In certain embodiments, the 3D printing device is an aseptic 3D printing device in compliance with GMP guidelines. In some embodiments, 3D structures may be fabricated using bio gels described herein in 3D printing systems as described in U.S. Patent Application Serial No. 62/511,292 entitled \"ASEPTIC PRINTER SYSTEM INCLUDING DUAL-ARM MECHANISM,\" filed on May 25, 2017 and having Attorney Docket No. 113066-0105, the entire contents of which are hereby incorporated by reference for the background information and methods set forth therein. [0082] In some embodiments of the present technology, the bio gel composition undergoes gelation in less than about 10 min at a temperature of about 25 °C to about 37 °C. In certain embodiments, the bio gel composition may undergo gelation in less than about 30 s to about 10 min, less than about 1 min to about 5 min, less than about 30 s to about 3 min, less than about 30 s to about 2 min and any range between any two of these values or less than any one of these values. In one embodiment, the bio gel composition may undergo gelation in less than about 50 s, less than about 40 s, or less than about 30 s. In another embodiment, the gelation occurs in less than about 30 s, about 60 s, about 70 s, about 80 s, about 90 s, 100 s, about 110 s, about 120 s, about 130 s, about 140 s, about 150 s, about 180 s and ranges between any two values or less than any one of these values. In one embodiment, the bio gel composition undergoes gelation in less than 30 s. [0083] In some embodiments of the present technology, the bio gel composition may include undergoing gelation at a temperature of about 25 °C to about 37 °C. In certain embodiments, the gelation temperatures may include, but are not limited to, about 25 °C to about 37 °C, about 27 °C to about 35 °C, about 30 °C to about 33 °C, and ranges between any two of these values or less than any one of these values. Suitable gelation temperatures may include, but are not limited to, about 25 °C, about 27 °C, about 30 °C, about 32 °C, about 35 °C, about 37 °C and ranges between any two values or less than any one of these values. In one embodiment, the bio gel composition undergoes gelation at a temperature of about 30 °C to about 37 °C. In one embodiment, the bio gel composition undergoes gelation in less than 30 s at a temperature of about 25 °C to about 37 °C. [0084] In some embodiments of the present technology, bio gel compositions may also undergo cross-linking induced by exposure to an initiator. Suitable cross-linking initiators include, but are not limited to, ultraviolet (UV) irradiation, gamma radiation, and dehydrothermal treatment (DHT). In some embodiments, the cross-linking initiator is UV irradiation. In some embodiments, the initiator induces cross-linking of the bio gel composition as described herein in the absence of cross-linking agents. In some embodiments, the initiator induces cross-linking of a cross-linking agent in the bio gel composition. In some embodiments, the cross-linking agent includes, but is not limited to, cross-linking agents as described herein. In some embodiments, the cross-linking agent is riboflavin, ribose, and the like or combinations thereof [0085] In some embodiments, the bio gel composition may be formed into a three-dimensional structure which remains solid, and/or maintains its shape, under gravity after gelation. The structures formed by the bio gel compositions of the present technology exhibit reduced sagging and increased elasticity compared to other standard bio gel materials. In certain embodiments, the three-dimensional structure which includes the bio gel sags less than about 1% to about 30% of its height under gravity. The three-dimensional structure may sag less than about 1% to about 30%, about 2% to about 25%, about 3% to about 20%, about 4% to about 15%, about 5% to about 10%) of its height under gravity, and ranges between any two of these values or less than any one of these values. In certain embodiments, the three-dimensional structure sags less than about 30%, about 25%, about 20%, about 15%, about 10%, about 5%, about 4%, about 3%, about 2%), about 1% of its height under gravity and ranges between any two of these values or less than any one of these values. [0086] In some embodiments, the bio gel composition in a three-dimensional structure sags less than about 1% to about 30% of its height over a period of time, such as about 60 s to about 120 s. Periods include, but are not limited to, about 5s to about 120 s, about 20 s to about 100 s, about 30 s to about 80 s, about 45 s to about 60 s, about 60 s to about 120 s, and ranges between any two of these values or less than any one of these values. The structures sags less than about 1%) to about 30%) reduction in its original height over suitable periods of time, which may include, but is not limited to, about 5 s, about 10 s, about 20 s, about 30 s, about 40 s, about 50 s, about 60 s, about 120 s and ranges between any two of these values or less than any one of these values. In one embodiment, the bio gel composition in the three-dimensional structure sags less than about 30%> of its height under gravity over a 60 s period. [0087] The bio gel compositions of the present technology may possess improved storage modulus. In some embodiments of the present technology, the bio gel composition may increase its storage modulus to up to about 5000%) after gelation. The storage modulus may increase up to about 10% to about 5000%, about 50% to about 5000%, about 100% to about 5000%, about 500 % to about 5000%, about 1000% to about 5000%, about 2500% to about 5000%, and ranges in between any two of these values or less than any one of these values. In certain embodiments, the bio gel composition may include, but is not limited to, increasing its storage modulus after gelation by up to about 100%, about 500 %, about 1000%, about 2000%, about 3000 %, about 4000%), about 5000%), and ranges between any two of these values or less than any one of these values. In one embodiment, the bio gel composition may include increasing its storage modulus by 5000%. In some embodiments, the bio gel composition may include increasing its storage modulus in about 1 min to about 5 min. Suitable periods include about 1 min to about 5 min, about 1 min to about 3 min, about 1 min to about 2 min, and ranges between any two of these values or less than any one of these values. [0088] The bio gel compositions of the present technology may possess improved compressive strength. In some embodiments, the bio gel composition exhibits a stress/strain ratio greater than 1 kPa after gelation. The stress/strain ratio may be from about 1 kPa to about 100 kPa, about 1 kPa to about 60 kPa, about 5 kPa to about 50 kPa, about 5 kPa to about 40 kPa, and ranges in between any two of these values or less than any one of these values. In certain embodiments, the bio gel composition may exhibit a stress/strain ratio after gelation of about 1 kPa, about 5 kPa, about 7 kPa, about 8 kPa, about 9 kPa, about 10 kPa, about 11 kPa, about 12 kPa, about 14 kPa, about 16 kPa, about 18 kPa, about 20 kPa, about 25 kPa, about 30 kPa, about 35 kPa, about 40 kPa, about 50 kPa, about 60 kPa, about 70 kPa, about 80 kPa, about 90 kPa, about 100 kPa, and ranges between any two of these values or less than any one of these values. [0089] In some embodiments, the bio gel composition may include a type I collagen material harvested as described herein in any embodiment. The type I collagen material may include amounts from about 5 mg/mL or greater . The bio gel composition may include the collagen material in an about 0.01% to about 3% weak acid solution. The bio gel composition of the present technology may include undergoing gelation in less than about 30 s at a temperatures from about 25 °C to about 37 °C. The bio gel composition may further include about 0.01% to about 5% (w/v) decorin. Optionally, the bio gel composition may further include living cells. The bio gel composition may include becoming liquid under a shear stress of about 15 Pa to about 100 Pa. In some embodiments, the bio gel composition remains solid under a hydrostatic pressure of about 30 Pa to about 120 Pa during gelation. The bio gel composition may be shaped in a three-dimensional structure with a 3D printer. The bio gel composition may include holding a solid three-dimensional structure shape under gravity after the bio gel composition undergoes gelation. In some embodiments, the three-dimensional structure sags less than about 30% of its height under gravity over a period of about 60 s. The bio gel composition may include increasing its storage modulus up to about 5000% after gelation. [0090] In one embodiment, the bio gel composition includes about 5 mg/mL to about 200 mg/mL of a collagen material, harvested using the methods as described herein in any embodiment, in an about 0.01% to about 3% weak acid solution; 0.1% to about 5% (w/v) decorin and, optionally, living cells; wherein the bio gel may undergo gelation in less than about 30 s at a temperatures from about 25 °C to about 37 °C; and wherein before gelation, the bio gel composition is a liquid under a shear stress of about 15 Pa to about 100 Pa, remains solid under a hydrostatic pressure of about 30 Pa to about 120 Pa during gelation; and further wherein after gelation, the bio gel composition may has an up to about 5000%) increase in storage modulus, and maintains a three-dimensional shape, wherein the bio gel composition sags less than about 1%) to about 30%) of its height under gravity over about 60 s. [0091] In another embodiment, the bio gel composition includes about 5 mg/mL to about 60 mg/mL of a type I collagen material, harvested from bovine, porcine, and/or murine sources as described herein, in an about 0.01%> to about 3% weak acid solution; 0.1%> to about 5% (w/v) decorin, carriers, cross-linking agents selected from riboflavin, ribose, or a combination thereof, and, optionally, living cells at pH 7.4; wherein the bio gel may undergo gelation in less than about 30 s at a temperature of about 35 °C; and wherein before gelation, the bio gel composition is a liquid under a shear stress of about 15 Pa to about 100 Pa, remains solid under a hydrostatic pressure of about 30 Pa to about 120 Pa during gelation; and further wherein after gelation, the bio gel composition may has an up to about 5000%) increase in storage modulus, and maintains a three-dimensional shape, wherein the bio gel composition sags less than about 1% to about 30% of its height under gravity over about 60 s; and the bio gel composition exhibits a stress/strain ratio greater than 1 kPa after gelation. [0092] In yet another aspect of the present technology, provided is a method of preparing a three-dimensional structure from the bio gel composition of the present technology, wherein the method includes providing a bio gel composition to a modular fabrication system, maintaining the bio gel composition at a temperature of about 0 °C to about 12 °C, depositing the bio gel composition to form a three-dimensional structure, wherein the three-dimensional structure undergoes gelation; and curing the three-dimensional structure. The bio gel composition used in the method of preparing a three-dimensional structure may include a collagen material of the present technology in an amount greater than 5 mg/mL in a weak acid solution. [0093] In some embodiments of the present technology, the method includes providing a bio gel composition, as described above in any embodiment, to a modular fabrication system. Suitable modular fabrication systems may include, but are not limited to, systems described herein in any embodiment, In some embodiments, the modular fabrication system may include a 3D printing device. In some embodiments, the 3D printing device may be a non-aseptic or aseptic device. In one embodiment, the 3D printing device is an aseptic 3D printing device as described in this application herein. [0094] The method includes providing a bio gel composition as described in this application herein. In some embodiments of the present technology, the method includes providing a bio gel composition that includes a collagen material in amounts of 5 mg/mL or greater in a weak acid solution. In some embodiments, the collagen material may be derived from a mammalian source, including but not limited to, bovine, porcine, and/or murine sources. In some embodiments, the collagen material may include type I collagen. In some embodiments of the present technology, the collagen material is in a weak acid solution, such as an about 0.01% to about 3%> weak acid solution. In some embodiments of the present technology, the method includes providing a bio gel composition that may further include cross-linking agents, such as about 0.01%) to about 5% (w/v) decorin. In some embodiments, the bio gel composition includes carriers and non-natural additives as described herein in any embodiment. In some embodiments, the bio gel composition may include living cells. In some embodiments of the present technology, the method includes providing the bio gel composition that may be liquid under a shear stress of about 15 Pa to about 100 Pa. In some embodiments, the bio gel composition remains solid under a hydrostatic pressure of about 30 Pa to about 120 Pa during gelation. [0095] The method includes maintaining the bio gel composition at a suitable temperature after providing it to a modular fabrication system. In some embodiments of the present technology, the method includes maintaining the bio gel composition at a temperature of about 0 °C to about 12 °C before gelation. The temperatures may include, but are not limited to, about 0 °C to about 12 °C, about 0 °C to about 10 °C, about 2 °C to about 10 °C, about 2 °C to about 6 °C, about 3 °C to about 8 °C, about 3 °C to about 6 °C, and ranges between any two of these values or less than any one of these values. In certain embodiments, the maintaining may include, but is not limited to, temperatures of about 0 °C, about 2 °C, about 4 °C, about 6 °C, about 8 °C, about 10 °C, about 12 °C and ranges between any two of these values or less than any one of these values. [0096] The bio gel composition is deposited into a two- or three-dimensional structure at a suitable maintenance temperature. In some embodiments, the depositing may include depositing the bio gel composition at an extrusion rate of about 30 mm 3 /s to about 80 mm 3 /s. Suitable extrusion rates include, but not limited to, about 30 mm 3 /s to about 80 mm 3 /s, about 40 mm 3 /s to 3 3 3 3 3 about 80 mm /s, about 50 mm /s to about 80 mm /s, about 60 mm /s to about 80 mm /s, and ranges between any two of these values or less than any one of these values. [0097] As part of the bio gel deposition step, the three-dimensional structure may also undergo gelation. In some embodiments, the depositing of the bio gel composition into a three- dimensional structure further includes undergoing gelation in less than about 10 min at a temperature of about 25 °C to about 37 °C. In certain embodiments, the three-dimensional structure may undergo gelation in less than about 30 s to about 10 min, less than about 1 min to about 5 min, less than about 30 s to about 3 min, less than about 30 s to about 2 min and any range between any two of these values or less than any one of these values. In one embodiment, the bio gel composition may undergo gelation in less than about 50 s, less than about 40 s, or less than about 30 s. In another embodiment, the gelation occurs in less than about 30 s, about 60 s, about 70 s, about 80 s, about 90 s, 100 s, about 110 s, about 120 s, about 130 s, about 140 s, about 150 s, about 180 s and ranges between any two values or less than any one of these values. In one embodiment, the bio gel composition undergoes gelation in less than 30 s. [0098] In some embodiments of the present technology, the three-dimensional structure may include undergoing gelation at a temperature of about 25 °C to about 37 °C. In certain embodiments, the gelation temperatures may include, but not limited to, about 25 °C to about 37 °C, about 27 °C to about 35 °C, about 30 °C to about 33 °C, and ranges between any two of these values or less than any one of these values. Suitable gelation temperatures may include, but not limited to, about 25 °C, about 27 °C, about 30 °C, about 32 °C, about 35 °C, about 37 °C and ranges between any two values or less than any one of these values. In one embodiment, the three-dimensional structure may undergo gelation at temperatures of about 30 °C to about 37 °C. In one embodiment, the bio gel composition undergoes gelation in less than 30 s at a temperature of about 25 °C to about 37 °C. [0099] In some embodiments of the present technology, the depositing may include gelation of the three-dimensional structure sequentially, simultaneously, or separately to form the three- dimensional structure. In certain embodiments, the depositing the bio gel composition may include sequential gelation of the bio gel composition immediately after the three-dimensional structure is formed. In another embodiment, the depositing may include simultaneous gelation (i.e., concurrently or overlapping) of the bio gel composition as the three-dimensional structure is formed. In yet another embodiment, the depositing may include gelation separately from depositing the bio gel composition to form the three-dimensional structure, which may include gelation after a period of about 5 min to about 24 h after forming the three-dimensional structure. [0100] In some embodiments, the bio gel composition may form a three-dimensional structure which remains solid, and/or maintains its shape, under gravity after gelation. The structures formed by the bio gel compositions of the present technology exhibit reduced sagging and increased elasticity compared to other bio gel materials known in the art. In certain embodiments, the three-dimensional structure which includes the bio gel sags less than about 1% to about 30% of its height under gravity. The three-dimensional structure may sag less than about 1% to about 30%, about 2% to about 25%, about 3% to about 20%, about 4% to about 15%), about 5%> to about 10%> of its height under gravity, and ranges between any two of these values or less than any one of these values. In certain embodiments, the three-dimensional structure sags less than about 30%, about 25%, about 20%, about 15%, about 10%, about 5%, about 4%), about 3%, about 2%, about 1% of its height under gravity and ranges between any two of these values or less than any one of these values. [0101] In some embodiments, the three-dimensional structure sags less than about 1% to about 30%) of its height over a period of time, such as about 60 s to about 120 s. Periods include, but not limited to, about 5s to about 120 s, about 20 s to about 100 s, about 30 s to about 80 s, about 45 s to about 60 s, about 60 s to about 120 s, and ranges between any two of these values or less than any one of these values. The structures sag less than 1% to about 30% reduction in its original height over suitable periods of time, which may include, but are not limited to, about 5 s, about 10 s, about 20 s, about 30 s, about 40 s, about 50 s, about 60 s, about 120 s and ranges between any two of these values or less than any one of these values. In one embodiment, the three-dimensional structure sags less than about 30% of its height under gravity over a 60 s period. [0102] In some embodiments of the present technology, the storage modulus of the three- dimensional structure may increase to up to about 5000%) after gelation. The storage modulus may increase up to about 10% to about 5000%), about 50% to about 5000%), about 100% to about 5000%, about 500 % to about 5000%, about 1000% to about 5000%, about 2500% to about 5000%), and ranges in between any two of these values or less than any one of these values. In certain embodiments, the bio gel composition may include, but is not limited to, increasing its storage modulus after gelation by up to about 100%, about 500 %, about 1000%), about 2000%), about 3000 %, about 4000%), about 5000%), and ranges between any two of these values or less than any one of these values. In one embodiment, the bio gel composition may include increasing its storage modulus by 5000%). In some embodiments, the bio gel composition may include increasing its storage modulus in about 1 min to about 5 min. Suitable periods include about 1 min to about 5 min, about 1 min to about 3 min, about 1 min to about 2 min, and ranges between any two of these values or less than any one of these values. In some embodiments, the three-dimensional structure exhibits a stress/strain ratio greater than 1 kPa after gelation. The stress/strain ratio may be from about 1 kPa to about 100 kPa, about 1 kPa to about 60 kPa, about 5 kPa to about 50 kPa, about 5 kPa to about 40 kPa, and ranges in between any two of these values or less than any one of these values. [0103] The three-dimensional structure, deposited from the bio gel composition, undergoes a curing step following gelation. In some embodiments, the method includes curing the three- dimensional structure at a temperature of about 34 °C to about 37 °C. Suitable curing temperatures may include, but not limited to, about 34 °C to about 37 °C, about 35 °C to about 37 °C, about 36 °C to about 37 °C, and ranges between any two of these values or less than any one of these values. The three-dimensional structure may also be placed in a buffer solution during the curing step. In some embodiments, suitable buffer solutions include, but not limited to, phosphate buffered saline, sodium chloride solution, phosphates, and phosphate buffer solution. In some embodiments, the method may further include curing the three-dimensional structure in buffer solution and cell medium. Suitable cell medium may include, but is not limited to, serum, serum-free medium, HEPES, DMEM, bFGF, FBS, and the like or combinations thereof. [0104] In some embodiments, the methods of the present technology may further include curing the three-dimensional structures formed from bio gel compositions by exposure to cross- linking initiators as described herein. In some embodiments, the curing also includes exposing the three-dimensional structure to UV irradiation. The duration of UV irradiation is not specifically limited and is determined based on various factors, including but not limited to, size, shape, height, thickness, and the like of the three-dimensional structure and the distance of the UV light source. In some embodiments, the three-dimensional structure formed from the bio gel includes cross-linking agents as described herein in any embodiment. In certain embodiments, the cross-linking agents include ribose, riboflavin, or a combination thereof. [0105] In some embodiments of the present technology, the method includes providing a bio gel composition, which includes type I collagen material derived from bovine, porcine, murine sources, to an 3D printing device. The bio gel composition includes collagen material in a 0.01% to about 3% weak acid solution and includes about 0.01% to about 5% (w/v) decorin. The bio gel composition may further include cross-linking agents or living cells, and has a pH of about 7.4. The bio gel composition is liquid under shear stress of about 15 Pa to about 100 Pa, and remains solid under a hydrostatic pressure of about 30 Pa to about 120 Pa during gelation. The method includes maintaining the bio gel composition at a temperature of about 0 °C to about 12 °C. While maintaining the bio gel composition at about 0 °C to about 12 °C, the method includes depositing the bio gel composition to form a three-dimensional structure. The method includes depositing the bio gel composition to form the three-dimensional structure simultaneously with gelation at a temperature of about 25 °C to about 37 °C over a period of less than about 30 s. The three-dimensional structure may include remaining solid under gravity such that the three-dimensional structure sags less than about 1% to about 30% of its height over a period of about 60 s after gelation. The three-dimensional structure, after gelation, may include an increase in storage modulus of up to about 5000%. In some embodiments, the three- dimensional structure exhibits a stress/strain ratio greater than 1 kPa after gelation. The method includes curing the three-dimensional structure at a temperature of about 34 °C to about 37 °C in a buffer solution. In at least one embodiment, the method of the present technology is a method according to the steps illustrated in FIG. 2. [0106] In one embodiment of the present technology, the method includes providing to an aseptic 3D printer, a bio gel composition as described herein, which includes a type I collagen material derived from bovine, porcine, and/or murine sources, in an about 0.01% to about 3% weak acid solution, and may further include 0.1% to about 5% (w/v) decorin, and optionally cross-linking agents and living cells; maintaining the bio gel composition at a temperature of about 0 °C to about 12 °C; depositing the bio gel composition at an extrusion rate of about 30 mm 3 /s to about 80 mm 3 /s to form a three-dimensional structure, where the three-dimensional structure also undergoes gelation in less than about 30 s at about 25 °C to about 37 °C; and curing the three-dimensional structure at about 34 °C to about 37 °C in a phosphate buffer solution. [0107] In another aspect, a method of preparing a bio gel composition for use in three- dimensional structure fabrication, wherein the method includes providing a first receptacle having a collagen material in a weak acid solution; providing a second receptacle having a carrier; and contacting the collagen material in weak acid solution of the first receptacle with the carrier of the second receptacle to obtain a bio gel composition having a homogeneity of about 50% to about 99.9%. [0108] The method provides a first receptacle having a collagen material harvested by methods described in this application herein. In some embodiments of the present technology, the method includes the collagen material in amounts of 5 mg/mL or greater in a weak acid solution. In one embodiment, the first receptacle may include the collagen material in amounts of about 5 mg/mL to about 200 mg/mL. In some embodiments, the collagen material may be derived from tendon from a natural source, including but not limited to, bovine or porcine sources. In some embodiments, the collagen material may include type I collagen. In some embodiments of the present technology, the collagen material may further include about 0.01% to about 5% (w/v) decorin. [0109] In some embodiments of the present technology, the weak acid in the weak acid solution may be present in amounts of about 0.01% to about 20.0% of the weak acid solution. The amount of weak acid in the weak acid solution may include, but is not limited to, about 0.01% to about 20%, about 0.01% to about 10%, about 0.01% to about 3%, about 0.1% to about 3%), about 0.3%) to about 8%, about 0.5% to about 5%, about 1% to about 3%, and ranges between any two of these values or less than any one of these values. Suitable weak acid solutions include the weak acid in an amount that is about 0.01%, about 0.05%, about 0.1%, about 0.25%, about 0.5%, about 1.0%, about 1.5%, about 2.0%, about 2.5%, about 3.0%, about 4.0%, about 5.0%, about 6.0%, about 7.0%, about 8.0%, about 9.0%, about 10.0%, about 12.5%, about 15.0%), about 20% of the weak acid solution and ranges between any two of these values or less than any one of these values. In some embodiments, the weak acid solution is an about 0.01%) to about 3% weak acid solution. In some embodiments, the weak acid solution may include, but not limited to, weak acid solutions having a pH of about 2.8 to about 4. Suitable weak acid may include, but is not limited to, weak acid solutions as described herein in any embodiment. [0110] The method further provides a second receptacle having carriers, and optionally cross- linking agents as described herein in any embodiment. Suitable carriers include, but are not limited to, water, aqueous sodium hydroxide, PBS, DMEM, and the like or combinations thereof. Suitable cross-linking agents include, but are not limited to, riboflavin, ribose, and the like or combinations thereof. [0111] The method may optionally include providing a third receptacle of living cells. Suitable living cells may include, but not limited to, epidermal cells, chondrocytes and other cells that form cartilage, macrophages, adipocytes, dermal cells, muscle cells, hair follicles, fibroblasts, organ cells, osteoblasts, osteocytes and other cells that form bone, endothelial cells, mucosal cells, pleural cells, ear canal cells, tympanic membrane cells, peritoneal cells, Schwann cells, corneal epithelial cells, gingiva cells, central nervous system neural stem cells, or tracheal epithelial cells. In one embodiment, the third receptacle includes chondrocyte cells. In some embodiments, the living cells are maintained at a physiological pH in a cell medium. In some embodiments, the living cells in the third receptacle are maintained at a pH of about 7.4. Suitable cell medium may include those described herein. [0112] The collagen material in the first receptacle and weak acid solution in the second receptacle are contacted to obtain a bio gel composition having sufficient homogeneity. In some embodiments of the present technology, the contacting may include, but is not limited to, mixing, stirring, agitating, oscillating, and the like or combinations thereof. In certain embodiments, the contacting includes oscillating, such as manual or automated oscillation. In one embodiment, the contacting includes manual oscillation. In another embodiment, the contacting includes mixing, such as a manual or The materials in the first, second, and optionally third receptacle may be released sequentially or simultaneous in a suitable order. In some embodiments, the contacting produces a bio gel composition having about 50% to about 99.9% homogeneity. Suitable homogeneities include, but are not limited to, about 50% to about 99.9%, about 60% to about 99.9%, about 70% to about 99.9%, about 80% to about 99.9%, about 90% to about 99.9% about 95% to about 99.9%, and ranges between any two of these values and less than any one of these values. In certain embodiments, the homogeneity is about 50%, about 55%, about 60% about, about 65%, about 70%, about 75%, about 80%, about 85%, about 90%, about 95%, about 97%, about 99.9%, and ranges between any two of these values or less than any one of these values. In some embodiments of the present technology, the method further includes, optionally, contacting the third receptacle of livings cells with the collagen material and weak acid solutions to obtain a bio gel composition having about 50% to about 99.9% homogeneity. Homogeneity is assessed using standard methods. [0113] The bio gel composition obtained after contacting the collagen material with the weak acid solution may be, optionally, maintained at a suitable temperature. In some embodiments, the maintaining the bio gel composition may be at temperatures of about 0 °C to about 12 °C before gelation. The temperatures may include, but are not limited to, about 0 °C to about 12 °C, about 0 °C to about 10 °C, about 2 °C to about 10 °C, about 2 °C to about 6 °C, about 3 °C to about 8 °C, about 3 °C to about 6 °C, and ranges between any two of these values or less than any one of these values. In certain embodiments, the maintaining may include, but is not limited to, temperatures of about 0 °C, about 2 °C, about 4 °C, about 6 °C, about 8 °C, about 10 °C, about 12 °C and ranges between any two of these values or less than any one of these values. [0114] A three-dimensional structure may be fabricated from the bio gel composition. In some embodiments, the method further includes fabricating a three-dimensional structure using the bio gel composition. In some embodiments, the fabricating may be sequential to, simultaneous with, or separate from the contacting the collagen material with the weak acid solution to form the bio gel composition. In one embodiment, the method may include fabricating the three-dimensional structure sequentially with, i.e., immediately after, the contacting step. In another embodiment, the method may include fabricating the three-dimensional structure simultaneously with, i.e., concurrently or overlapping, the contacting step. In yet another embodiment, the method may include fabricating the three-dimensional structure separately from the contacting step, such as storing the resultant bio gel composition at a temperature of about 0 °C to about 12 °C over a period of about 6 h to about 2 weeks. In certain embodiments, the bio gel composition may include storing at about 2 °C to about 6 °C for a period of about 6 h to about 2 weeks, about 12 h to about 1 week, about 24 h to about 6 days, about 48 h to about 5 days, and ranges between any two of these values or less than any one of these values. [0115] In some embodiments, the method includes fabricating the three-dimensional structure by providing the bio gel composition to a modular fabrication system as described herein. In some embodiments, the modular fabrication system may include a 3D printing device. In one embodiment, the 3D printing device is aseptically clean and is in compliance with GMP guidelines. [0116] In some embodiments, the method may include fabricating the three-dimensional structure by depositing the bio gel composition at 30 mm 3 /s to about 80 mm 3 /s. Suitable extrusion rates include, but not limited to, about 30 mm 3 /s to about 80 mm 3 /s, about 40 mm 3 /s to 3 3 3 3 3 about 80 mm /s, about 50 mm /s to about 80 mm /s, about 60 mm /s to about 80 mm /s, and ranges between any two of these values or less than any one of these values. In some embodiments, the depositing may further include gelation of the three-dimensional structure in less than about 3 min at a temperature of about 25 °C to about 37 °C as described herein. In some embodiments of the present technology, the fabricating may include depositing the bio gel composition where gelation occurs sequentially, simultaneously, or separately to forming the three-dimensional structure. [0117] In some embodiments of the present technology, the method includes fabricating a three-dimensional structure that remains solid, or maintains its shape, under gravity after gelation as described herein. In certain embodiments, the three-dimensional structure sags less than about 1% to about 30% of its height under gravity over a period of up to about 60 s to about 120 s. In one embodiment, the three-dimensional structure sags less than about 30% of its height under gravity over an about 60 s period. As described herein, the three-dimensional structure may be very strong and improve storage modulus. In certain embodiments, the three-dimensional structure may increase its storage modulus by up to about 5000%) after gelation. In some embodiments, the three-dimensional structure exhibits a stress/strain ratio greater than 1 kPa after gelation. In certain embodiments, the stress/strain ratio is about 1 kPa to about 60 kPa. Further and as described herein, the method may further include curing the three-dimensional structure. In certain embodiments, the curing may be at temperatures from about 34 °C to about 37 °C in phosphate buffer solution. In some embodiments, the curing the three-dimensional structure may be in buffer solution and cell medium as described herein. [0118] In some embodiments, the methods and compositions disclosed herein in any embodiment are in compliance with GMP guidelines. In at least one embodiment, the method of the present technology is a method according to the steps illustrated in FIG. 3. [0119] In one embodiment of the present technology, the method includes providing a type I collagen material derived from bovine, porcine, and/or murine sources in an about 0.01% to about 3% weak acid solution in a first receptacle in an amount greater than about 5 mg/mL; providing a carrier solution, and optionally a cross-linking agent, in a second receptacle, where the carrier includes PBS, water, and aqueous sodium hydroxide and the cross-linking agent includes riboflavin, ribose, or a combination thereof; optionally, providing a third receptacle having living cells in cell medium, where the cell medium is DMEM; contacting the type I collagen material in about 0.01% to about 3% weak acid of the first receptacle with the carriers in the second receptacle, and optionally with the living cells in cell medium of the third receptacle, to obtain a bio gel composition having a homogeneity of greater than about 99%; and optionally, fabricating the bio gel composition into a three-dimensional structure using an aseptic 3D printing device. [0120] The present technology, thus generally described, will be understood more readily by reference to the following examples, which are provided by way of illustration and are not intended to be limiting of the present technology. EXAMPLES [0121] Example 1: Process of Harvesting Collagen [0122] This example provides a process for harvesting collagen from mammalian sources, for example, skin, tendon, or bone from porcine, bovine, or murine derived collagen sources, as illustrated in FIG. 1. Extracellular matrix and infiltrates were removed from the collagen-based biomaterial. The resulting collagen-based biomaterial was soaked in alcohol. The collagen-based biomaterial was then mechanically processed until greater than 95% of the material was reduced to less than 1 mm biomaterial particles. [0123] The biomaterial particles were washed by adding to a buffer solution and stirring, following which the biomaterial particles were allowed to settle and the buffer solution was poured off. The biomaterial particles were then added to distilled H 2 0 (diH 2 0) and stirred. The biomaterial particles were then allowed to settle and the diH 2 0 was poured off. The biomaterial particles were added to a 0.01% to 20% weak acid solution and stirred. The mixture was centrifuged, and the supernatant was collected while the pellets were discarded. [0124] The supernatant was combined with a 0.55 M to 5 M salt solution and stirred. The supernatant/salt solution was centrifuged, and the resultant pellets were collected while the supernatant was discarded. The pelleted material was re-suspended in a 0.1% to 20% weak acid solution. [0125] The re-suspended material was combined with a metal hydroxide solution, and stirred. Immediately after, the mixture was readjusted to acidic conditions (pH of 3-4). The mixture was then dialyzed against 0.01% to 20% weak acid solution following which it was removed from the dialysis tubing and dried. The resulting collagen material was sterilized via vapor incubation with peracid, gamma irradiation, ethylene oxide, or critical C0 2 treatment. The sterilized collagen material was suspended in a 0.01% to 3% weak acid solution to an appropriate concentration for storage for up to 3 to 7 days. Weak acid, buffer solutions, and salt solutions include those described herein. [0126] Examples 2: Preparation of Bio Gel Compositions [0127] Bio gel compositions, which are suitable for use as printable inks for molds and 3D printing devices as described herein, were prepared as illustrated in FIG. 3 and using harvested sterilized collagen according to Example 1. Acellular bio gel Compositions A-J were prepared as follows: A stock solution of harvested sterilized collagen (Example 1) in 0.01-3% weak acid mixed with a carrier solution. The mixture was adjusted to physiological pH. The resulting mixture produced bio gel compositions containing 5-60 mg/mL of harvested sterilized collagen from Example 1. Bio gel compositions H, I, and J illustrate curable bio gel compositions, which include cross-linking agents. [0128] Comparative bio gel compositions were prepared according to the procedure described for compositions A-J. Commercially available purified pharmaceutical-grade collagens X (bovine dermis derived Collagen Type I) , Y (porcine tissue derived Collagen Type I), and Z (bovine dermis derived Collagen Type I) were not obtained by the methods described herein, and do not have the properties described herein for the present technology. [0129] Cellular bio gel Compositions K-R were prepared as follows: A stock solution of harvested sterilized collagen (Example 1) in 0.01-3% weak acid solution was added through a stopcock apparatus to a carrier solution. Living cells in cell media were added to the mixture and adjusted to neutral pH. The resulting mixture produced cellular bio gel compositions containing 5-60 mg/mL of harvested sterilized collagen from Example 1. Bio gel compositions Q and R illustrate curable bio gel compositions, which include suitable cross-linking agents. [0130] Example 3: Measurements of Rheological Properties for Bio Gel Composition [0131] This example illustrates the non-Newtonian fluid behavior for a sample acellular bio gel composition as described in Example 2. Rheological measurements were obtained using a TA Instruments Discovery Hybrid Rheometer (DHR-3), (40 mm parallel plate, Peltier steel plate; 1 mm gap). The sample plates were maintained between 2-6 °C. The bio gel composition was deposited and spin coated onto the bottom sample plate and a top sample plate was used to cover the sample bio gel. Yield stress measurements were carried out on the deposited samples according to the following parameters: [0132] Method: Sweep 1 - Oscillation Amplitude Ramp up Temp. : 0-12 °C Soak Time: 60 s Frequency: 1.0 Hz Linear sweep: 1.0 Pa to 200.0 Pa Sweep 2 - Oscillation Amplitude Ramp down Temp. : 0-12 °C Soak Time: 0 s Frequency: 1.0 Hz Linear sweep: 200.0 Pa to 1.0 Pa [0133] Oscillation strain was plotted against modulus. FIG. 4 illustrates the intersection of storage and loss modulus for the sample bio gel, where the bio gel behaves as a liquid. For oscillation sweeps 1 and 2, the sample bio gel behaves as a liquid at a shear stress of 55 Pa and 47 Pa, respectively. [0134] Example 4: Curing Properties Analysis of Bio Gel Compositions [0135] This example illustrates the measurement of thermal curing properties of pre- and post-gelation bio gel compositions (Compositions A- J). Thermal curing measurements were obtained using a TA Instruments DHR-3 Rheometer (40 mm parallel plate, Peltier steel plate; 1 mm gap height). A sample bio gel composition was prepared as described in Example 2. An even coating of the sample bio gel was spin coated onto the bottom sample plate and a top sample plate was used to cover the coated bio gel. [0136] Method: Run 1 Oscillation Time: Temp. : 4 °C Soak Time: 0 s Frequency: 1.0 Hz Stress: 150 Pa Duration: 120 s Run 2 Oscillation Time: Temp. : 37 °C Soak Time: 0 s Frequency: 1.0 Hz Stress: 10 Pa Duration: 300 s [0137] FIG. 5 illustrates the rapid gelation and curing for the bio gel composition of the present technology, where the sample bio gel exhibited a 16-fold change in its storage modulus in less than 3 min. Curing measurements were also performed for bio gels prepared using commercial collagens according to the procedure described in Example 2 (FIG. 6A). The sample bio gel exhibited an over 6.5-fold increase in it storage modulus, while bio gels for commercial collagens X and Y exhibited no measurable increase and collagen Z exhibited a 1-fold increase. [0138] Cured and uncured bio gel compositions that include the collagen material (Example 1) and commercial collagens X and Y were prepared following the procedure in Example 2. Each sample was shaped into a 3D construct by injecting into a conical mold. The uncured sample bio gel remained solid under pressures up to 87 Pa, while the uncured 3D constructs containing commercial collagens failed to remain solid under pressures above 7 Pa (Commercial Collagen X) and 41 Pa (Commercial Collagen Y), respectively. The cured bio gel compositions were cured overnight in buffer. As evidenced by FIG. 6B, the cured three-dimensional structure of the sample bio gel of the present technology maintained its shape, whereas, the structures resulting from bio gel compositions using commercial collagens X and Y were unable to maintain a solid structure. [0139] Example 5: Structural Stability Measurements of Three-Dimensional Structures [0140] This example illustrates the structural stability measurements for cured three- dimensional structures formed from bio gel compositions as described in Example 2 and a bio gel containing commercial collagen. Dynamic mechanical analysis (DMA) for all samples was performed using a TA Instruments DMA Q800 Mechanical Thermal. Each sample was injected into round disk molds measuring approximately 5 mm in height and 10-14 mm in diameter. Cured bio gel samples were placed on sample plate of DMA Q800, and an initial height measurement was taken. The samples were maintained between 33 °C to 37 °C and allowed to soak for 3 min. Stress/strain plots were obtained at a ramp force of 1 N/min up to 3 N. Stress/strain plots for each of the tested exemplary compositions are provided in FIGS. 8 and 9. FIG. 10 provides a comparison of the structural stability measurements for a sample bio gel composition and a bio gel composition using a commercial collagen source (X). [0141] Compositions H, I, and J were subjected to additional curing by exposing to a UV light source (Henry Schein-Maxima RU1200). Duration of exposure is dependent on size, construct, and distance of the UV light source. [0142] Measurements for Compositions A-J were plotted as a function of stress (kPa) versus strain (FIGS. 7 and 8 to provide the stress/strain ratios in Table 1). Each measurement was taken after thermal curing of Compositions A-J. It was observed that as the amount of harvested sterilized collagen in the bio gel composition increases, the stress/strain ratio also increases. FIG. 8 demonstrates that increasing the amount of collagen in the bio gel composition improves the compressive strength of the cured bio gel composition. Bio gel compositions that include ribose and riboflavin (Compositions H and I) were subjected to UV irradiation to initiate cross-linking. FIG. 9 demonstrates that bio gel compositions H and I exhibited higher stress/strain ratios than bio gel compositions free of cross-linking agents (Composition E). [0143] Composition A exhibited a stress/strain ratio of 13.8 kPa, while bio gel compositions of commercial collagen (X) exhibited a stress/strain ratio of about 0.1 kPa. The results are summarized in Table 1 below: Table 1. *Compositions were subjected to additional curing as described above. † Slope calculated from 0-10% strain of plotted curve. [0144] Example 6: Fabricating 3D Structure from Bio Gel Using 3D Printing Device [0145] This example illustrates the method of fabricating a three dimensional structure with a 3D printing device using the bio gel compositions as described herein. A sample bio gel composition was prepared according to Example 2 and loaded into a syringe, where the syringe housing was maintained at 0 °C to 12 °C. The syringe was connected to the printing device, and the bio gel composition was loaded into the printing device, which was temperature controlled at 0 °C to 12 °C. The bio gel composition was extruded at a rate of 58 mm 3 /s from the printing device and deposited onto a temperature controlled plate maintained between 25 °C to 37 °C. An anatomical 3D structure was obtained. The anatomical 3D structure was cured in PBS from 34 °C to 37 °C overnight. [0146] The above results illustrates the bio gel compositions of the present technology allow for high-fidelity 3D constructs that maintain their shape when formed, handled, and implanted. Furthermore, results illustrate the 3D constructs also have good compressive strength and elasticity, and desired textural and aesthetic properties. [0147] While certain embodiments have been illustrated and described, a person with ordinary skill in the art, after reading the foregoing specification, can effect changes, substitutions of equivalents and other types of alterations to the present technology as set forth herein. [0148] The present technology is also not to be limited in terms of the particular aspects described herein, which are intended as single illustrations of individual aspects of the present technology. Many modifications and variations of this present technology can be made without departing from its spirit and scope of the present technology, in addition to those enumerated herein, will be apparent to those skilled in the art from the foregoing descriptions. Such modifications and variations are intended to fall within the scope of the appended claims. It is to be understood that this present technology is not limited to particular methods, reagents, compounds, compositions, labeled compounds or biological systems, which can, of course, vary. [0149] It is to be understood that while the invention has been described in conjunction with the above embodiments, that the foregoing description and examples are intended to illustrate and not limit the scope of the invention. Other aspects, advantages and modifications within the scope of the invention will be apparent to those skilled in the art to which the invention pertains.","lang":"en"},"publication_type":"PATENT_APPLICATION"}
{"lens_id":"096-845-918-954-076","jurisdiction":"CN","doc_number":"112760747","kind":"A","date_published":"2021-05-07","doc_key":"CN_112760747_A_20210507","docdb_id":550057512,"lang":"zh","biblio":{"publication_reference":{"jurisdiction":"CN","doc_number":"112760747","kind":"A","date":"2021-05-07"},"application_reference":{"jurisdiction":"CN","doc_number":"202011611796","kind":"A","date":"2020-12-29"},"priority_claims":{"claims":[{"jurisdiction":"CN","doc_number":"202011611796","kind":"A","date":"2020-12-29","sequence":1}],"earliest_claim":{"date":"2020-12-29"}},"invention_title":[{"text":"Bio-based nylon high-strength elastic fiber material and preparation method thereof","lang":"en"},{"text":"一种基于生物基尼龙的高强弹性纤维材料及其制备方法","lang":"zh"}],"parties":{"applicants":[{"extracted_name":{"value":"UNIV ANHUI AGRICULTURAL"}}],"inventors":[{"sequence":1,"extracted_name":{"value":"WANG ZHONGKAI"}},{"sequence":2,"extracted_name":{"value":"MA CHUQING"}},{"sequence":3,"extracted_name":{"value":"WU MANG"}},{"sequence":4,"extracted_name":{"value":"MU SHILING"}}]},"classifications_ipcr":{"classifications":[{"symbol":"D01F8/12"},{"symbol":"C08G69/42"},{"symbol":"D01F1/10"}]},"classifications_cpc":{"classifications":[{"symbol":"C08G69/42"},{"symbol":"D01F8/12"},{"symbol":"D01F1/10"}]},"references_cited":{"citations":[{"sequence":1,"patcit":{"document_id":{"jurisdiction":"EP","doc_number":"0411774","kind":"A1","date":"1991-02-06"},"lens_id":"053-674-704-661-194"},"cited_phase":"SEA"},{"sequence":2,"patcit":{"document_id":{"jurisdiction":"KR","doc_number":"100930204","kind":"B1","date":"2009-12-07"},"lens_id":"192-351-778-700-356"},"cited_phase":"SEA"},{"sequence":3,"patcit":{"document_id":{"jurisdiction":"CN","doc_number":"107501116","kind":"A","date":"2017-12-22"},"lens_id":"005-353-246-242-567"},"cited_phase":"SEA"},{"sequence":4,"patcit":{"document_id":{"jurisdiction":"CN","doc_number":"109629033","kind":"A","date":"2019-04-16"},"lens_id":"035-717-955-347-305"},"cited_phase":"SEA"},{"sequence":5,"patcit":{"document_id":{"jurisdiction":"CN","doc_number":"110003629","kind":"A","date":"2019-07-12"},"lens_id":"167-108-967-194-580"},"cited_phase":"SEA"},{"sequence":6,"patcit":{"document_id":{"jurisdiction":"CN","doc_number":"111269566","kind":"A","date":"2020-06-12"},"lens_id":"011-662-281-361-883"},"cited_phase":"SEA"},{"sequence":7,"patcit":{"document_id":{"jurisdiction":"CN","doc_number":"111321481","kind":"A","date":"2020-06-23"},"lens_id":"023-746-571-977-479"},"cited_phase":"SEA"}],"patent_count":7},"cited_by":{"patents":[{"document_id":{"jurisdiction":"CN","doc_number":"114479068","kind":"A"},"lens_id":"020-705-162-476-550"}],"patent_count":1}},"families":{"simple_family":{"members":[{"document_id":{"jurisdiction":"CN","doc_number":"112760747","kind":"A","date":"2021-05-07"},"lens_id":"096-845-918-954-076"}],"size":1},"extended_family":{"members":[{"document_id":{"jurisdiction":"CN","doc_number":"112760747","kind":"A","date":"2021-05-07"},"lens_id":"096-845-918-954-076"}],"size":1}},"legal_status":{"application_expiry_date":"2022-01-14","calculation_log":["Application Filing Date: 2020-12-29","INVENTION PATENT APPLICATION WITHDRAWN AFTER PUBLICATION: 2022-01-14"],"patent_status":"DISCONTINUED"},"abstract":[{"text":"The invention discloses a bio-based nylon (polyamide) high-strength elastic fiber material and a preparation method thereof. Bio-based PA, functional polyamide, an antioxidant and other auxiliaries are subjected to melt blending and extrusion spinning, and the functional polyamide and the bio-based PA have a very good physical effect through hydrogen bonding; so that the bio-based nylon composite material has good compatibility, and therefore, the mechanical property of bio-based nylon can be improved; the antioxidant and other processing auxiliaries can improve the processability of the bio-based nylon; and compared with the prior art, the bio-based nylon fiber obtained by the invention has obviously higher performance than similar polymer materials, wherein the mechanical property and rebound resilience parameters are as follows: the breaking strength is 1-500Mpa, the elongation at break is 20-2000%, the rebound rate is 50-100%, and the toughness is 8-500MJ/m <3>.","lang":"en"},{"text":"本发明公开一种基于生物基尼龙的高强弹性纤维材料及其制备方法，通过生物基PA与功能聚酰胺、抗氧化剂及其他助剂熔融共混并挤出纺丝，功能聚酰胺与生物基PA通过氢键结合有很好的的物理作用，使得生物基尼龙复合材料具有很好的相容性，从而可提升生物基尼龙的机械性能，而抗氧化剂和其他加工助剂可以改善生物基尼龙的加工性能，与现有技术相比，本发明获得的生物基尼龙纤维性能明显高于同类聚合物材料，力学性能和回弹性参数如下：断裂强度1‑500Mpa，断裂伸长率20‑2000％，回弹率50‑100％，韧性8‑500MJ/m3。","lang":"zh"}],"publication_type":"PATENT_APPLICATION"}
{"lens_id":"059-321-469-789-343","jurisdiction":"US","doc_number":"20150192597","kind":"A1","date_published":"2015-07-09","doc_key":"US_20150192597_A1_20150709","docdb_id":442228631,"lang":"en","biblio":{"publication_reference":{"jurisdiction":"US","doc_number":"20150192597","kind":"A1","date":"2015-07-09"},"application_reference":{"jurisdiction":"US","doc_number":"201514591788","kind":"A","date":"2015-01-07"},"priority_claims":{"claims":[{"jurisdiction":"US","doc_number":"201514591788","kind":"A","date":"2015-01-07","sequence":1},{"jurisdiction":"US","doc_number":"201461924595","kind":"P","date":"2014-01-07","sequence":2}],"earliest_claim":{"date":"2014-01-07"}},"invention_title":[{"text":"BIOMARKER FOR HUMAN PROSTATE CANCER","lang":"en"}],"parties":{"applicants":[{"residence":"US","extracted_name":{"value":"KELAVKAR UDDHAV"}}],"inventors":[{"residence":"US","sequence":1,"extracted_name":{"value":"KELAVKAR UDDHAV"}}]},"classifications_ipcr":{"classifications":[{"symbol":"G01N33/92"},{"symbol":"G06F19/00"}]},"classifications_cpc":{"classifications":[{"symbol":"G01N33/92"},{"symbol":"G01N33/92"},{"symbol":"G01N33/57434"},{"symbol":"G01N33/57434"},{"symbol":"G01N2405/04"},{"symbol":"G01N2405/04"},{"symbol":"G01N2560/00"},{"symbol":"G01N2560/00"},{"symbol":"G16H50/30"},{"symbol":"G16H50/30"}]},"references_cited":{"citations":[{"sequence":1,"patcit":{"document_id":{"jurisdiction":"WO","doc_number":"2011098509","kind":"A1","date":"2011-08-18"},"lens_id":"177-501-433-751-702"},"cited_phase":"PRS"},{"sequence":2,"nplcit":{"text":"Han et al., \"Microfluidics-based electrospray ionization enhances the intrasource separation of lipid classes and extends identification of individual molecular species through multi-dimensional mass spectrometry: development of an automated high-throughput platform for shotgun lipidomics,\" Rapid Commun. Mass Spectrom. 2008, 22:2115-2124.","lens_id":"105-263-494-960-548","external_ids":["10.1002/rcm.3595","18523984","pmc2927983"]},"cited_phase":"PRS"},{"sequence":3,"nplcit":{"text":"Welti et al., \"Profiling Membrane Lipids in Plant Stress Responses,\" J. Biol. Chem. 2002, 277:31994-32002.","lens_id":"107-577-720-399-862","external_ids":["12077151","10.1074/jbc.m205375200"]},"cited_phase":"PRS"},{"sequence":4,"nplcit":{"text":"Patel et al., \"A Novel Three Serum Phospholipid Panel Differentiates Normal Individuals from Those with Prostate Cancer,\" PLoS ONE 2014, 9(3):e88841.","lens_id":"059-059-858-962-700","external_ids":["pmc3945968","24603597","10.1371/journal.pone.0088841"]},"cited_phase":"PRS"},{"sequence":5,"nplcit":{"text":"Welti et al., \"Lipid species profiling: a high-throughput approach to identify lipid compositional changes and determine the function of genes involved in lipid metabolism and signaling,\" Curr. Opin. Plant Biol. 2004, 7:337-344.","lens_id":"102-928-771-964-331","external_ids":["10.1016/j.pbi.2004.03.011","15134756"]},"cited_phase":"PRS"}],"npl_resolved_count":4,"npl_count":4,"patent_count":1},"cited_by":{"patents":[{"document_id":{"jurisdiction":"WO","doc_number":"2018009834","kind":"A1"},"lens_id":"038-781-743-060-156"},{"document_id":{"jurisdiction":"WO","doc_number":"2020005085","kind":"A1"},"lens_id":"071-307-316-731-750"}],"patent_count":2}},"families":{"simple_family":{"members":[{"document_id":{"jurisdiction":"US","doc_number":"9903878","kind":"B2","date":"2018-02-27"},"lens_id":"113-340-374-165-677"},{"document_id":{"jurisdiction":"US","doc_number":"20150192597","kind":"A1","date":"2015-07-09"},"lens_id":"059-321-469-789-343"},{"document_id":{"jurisdiction":"WO","doc_number":"2015105917","kind":"A1","date":"2015-07-16"},"lens_id":"036-622-702-426-94X"}],"size":3},"extended_family":{"members":[{"document_id":{"jurisdiction":"US","doc_number":"9903878","kind":"B2","date":"2018-02-27"},"lens_id":"113-340-374-165-677"},{"document_id":{"jurisdiction":"US","doc_number":"20150192597","kind":"A1","date":"2015-07-09"},"lens_id":"059-321-469-789-343"},{"document_id":{"jurisdiction":"WO","doc_number":"2015105917","kind":"A1","date":"2015-07-16"},"lens_id":"036-622-702-426-94X"}],"size":3}},"legal_status":{"granted":true,"grant_date":"2018-02-27","anticipated_term_date":"2035-01-07","calculation_log":["Application Filing Date: 2015-01-07","Granted Date: 2018-02-27","Anticipated Termination Date: 2035-01-07"],"patent_status":"ACTIVE"},"abstract":[{"text":"A method of diagnosing the presence of cancer in a subject without the need for a biopsy is provided. The method comprises obtaining a bio-sample from the subject and then extracting lipids from the bio-sample so as to form a serum of extracted lipids. Then the method includes combining a plurality of profiling substances to the serum of extracted lipids so as to form a profiling mixture. From the profiling mixture, the method identifies the amount and weight of a panel of biomarkers, wherein the panel of biomarkers comprise ePC 38:5, PC 40:3, and PC 42:4. Then said panel of biomarkers may be compared to a prediction ratio of the panel of biomarkers, whereby the comparison to the prediction ratio predicts the presence or absence of cancer in the subject.","lang":"en"}],"claims":[{"claims":[{"claim_text":["1 . A method of diagnosing the presence of cancer in a subject without the need for a biopsy, comprising: obtaining a bio-sample from the subject; extracting lipids from the bio-sample so as to form a serum of extracted lipids; combining a plurality of profiling substances to the serum of extracted lipids so as to form a profiling mixture; and identifying the amount and weight of a panel of biomarkers in the profiling mixture, wherein the panel of biomarkers comprise ePC 38:5, PC 40:3, and PC 42:4."]},{"claim_text":["2 . The method of claim 1 , further including comparing the amount and weight of the panel of biomarkers to a prediction ratio, whereby the comparison to the prediction ratio predicts the presence or absence of cancer in the subject."]},{"claim_text":["3 . The method of claim 1 , wherein the cancer is prostate cancer."]},{"claim_text":["4 . The method of claim 1 , wherein the plurality of profiling substances include at least one of di12:0-PC, di24:1-PC, 13:0-lysoPC, 19:0-lysoPC, di12:0-PE, di23:0-PE, 14:0-lysoPE, 18:0-lysoPE, 14:0-lysoPG, 18:0-lysoPG, di14:0-PA, di20:0 (phytanoyl)-PA, di14:0-PS, di20:0(phytanoyl)-PS, 16:0-18:0-PI, di18:0-PI, C13:0 CE, and C23:0 CE."]},{"claim_text":["5 . The method of claim 1 , wherein the bio-sample is blood, serum, or plasma."]},{"claim_text":["6 . The method of claim 1 , wherein identifying the amount and weight of a panel of biomarkers involves using mass spectrometry."]},{"claim_text":["7 . The method of claim 1 , wherein the profiling mixture is centrifuged for a suitable amount of time and at a suitable rate to pellet particulates."]},{"claim_text":["8 . The method of claim 7 , further including introducing unfractionated lipid extracts to the profiling mixture."]},{"claim_text":["9 . A method of diagnosing the presence of cancer in a subject's bio-sample without the need for a biopsy, comprising: combining a plurality of profiling substances to the bio-sample so as to form a profiling mixture; and identifying the amount and weight of a panel of biomarkers in the profiling mixture, wherein the panel of biomarkers comprise ePC 38:5, PC 40:3, and PC 42:4."]},{"claim_text":["10 . A method of diagnosing the presence of prostate cancer in a subject without the need for a biopsy, comprising: obtaining a bio-sample from the subject, wherein the bio-sample is blood, serum, or plasma; extracting lipids from the bio-sample so as to form a serum of extracted lipids; combining a plurality of profiling substances to the serum of extracted lipids so as to form a profiling mixture, wherein the plurality of profiling substances include at least one of di12:0-PC, di24:1-PC, 13:0-lysoPC, 19:0-lysoPC, di12:0-PE, di23:0-PE, 14:0-lysoPE, 18:0-lysoPE, 14:0-lysoPG, 18:0-lysoPG, di14:0-PA, di20:0 (phytanoyl)-PA, di14:0-PS, di20:0(phytanoyl)-PS, 16:0-18:0-PI, di18:0-PI, C13:0 CE, and C23:0 CE; and wherein the profiling mixture is centrifuged for a suitable amount of time and at a suitable rate to pellet particulates; introducing unfractionated lipid extracts to the profiling mixture; using mass spectrometry to identify the amount and weight of a panel of biomarkers in the profiling mixture, wherein the panel of biomarkers comprise ePC 38:5, PC 40:3, and PC 42:4; and comparing the amount and weight of the panel of biomarkers to a prediction ratio, whereby the comparison to the prediction ratio predicts the presence or absence of cancer in the subject."]}],"lang":"en"}],"description":{"text":"CROSS-REFERENCE TO RELATED APPLICATION This application claims the benefit of priority of U.S. provisional application No. 61/924,595, filed 7 Jan. 2014, the contents of which are herein incorporated by reference. BACKGROUND OF THE INVENTION The present invention relates to biomarkers associated with a cancer and, more particularly, to a panel of biomarkers and a method of using them to evaluate and identify early prostate cancer diagnosis and prognosis without the need for a biopsy. Currently, there are no reliable biomarkers available to stratify abnormal or cancer versus normal individuals that do not involve a biopsy and histology exam by a specialist. Biopsies require the medical removal of tissue from a living subject in order to make the determination of the presence or extent of a disease; as a result, such procedures can be traumatic and fraught with many of the risks of having surgery. Other commonly used methods of evaluating prostate cancer involve the analysis of prostate specific antigen (PSA) and the use of digital rectal examination (DRE) screenings; however, such methods provide abstruse results leading to both under and over treatment of prostate cancer subjects. As can be seen, there is an urgent need for a panel of biomarkers and a method of using them to evaluate and identify early cancer diagnosis and prognosis without the need for a biopsy. SUMMARY OF THE INVENTION In one aspect of the present invention, a method of diagnosing the presence of cancer in a subject without the need for a biopsy comprises: obtaining a bio-sample from the subject; extracting lipids from the bio-sample so as to form a serum of extracted lipids; combining a plurality of profiling substances to the serum of extracted lipids so as to form a profiling mixture; and identifying the amount and weight of a panel of biomarkers in the profiling mixture, wherein the panel of biomarkers comprise ePC 38:5, PC 40:3, and PC 42:4. In another aspect of the present invention, a method of diagnosing the presence of prostate cancer in a subject without the need for a biopsy comprises: obtaining a bio-sample from the subject, wherein the bio-sample is blood, serum, or plasma; extracting lipids from the bio-sample so as to form a serum of extracted lipids; combining a plurality of profiling substances to the serum of extracted lipids so as to form a profiling mixture, wherein the plurality of profiling substances include di12:0-PC, di24:1-PC, 13:0-lysoPC, 19:0-lysoPC, di12:0-PE, di23:0-PE, 14:0-lysoPE, 18:0-lysoPE, 14:0-lysoPG, 18:0-lysoPG, di14:0-PA, di20:0 (phytanoyl)-PA, di14:0-PS, di20:0(phytanoyl)-PS, 16:0-18:0-PI, di18:0-PI, C13:0 CE, and C23:0 CE; and wherein the profiling mixture is centrifuged for a suitable amount of time and at a suitable rate to pellet particulates; introducing unfractionated lipid extracts to the profiling mixture; using mass spectrometry to identify the amount and weight of a panel of biomarkers in the profiling mixture, wherein the panel of biomarkers comprise ePC 38:5, PC 40:3, and PC 42:4; and comparing the amount and weight of the panel of biomarkers to a prediction ratio, whereby the comparison to the prediction ratio predicts the presence or absence of cancer in the subject. In yet another aspect of the present invention, a method of diagnosing the presence of cancer in a subject's bio-sample without the need for a biopsy, comprises: combining a plurality of profiling substances to the bio-sample so as to form a profiling mixture; and identifying the amount and weight of a panel of biomarkers in the profiling mixture, wherein the panel of biomarkers comprise ePC 38:5, PC 40:3, and PC 42:4. These and other features, aspects and advantages of the present invention will become better understood with reference to the following drawings, description and claims. DETAILED DESCRIPTION OF THE INVENTION The following detailed description is of the best currently contemplated modes of carrying out exemplary embodiments of the invention. The description is not to be taken in a limiting sense, but is made merely for the purpose of illustrating the general principles of the invention, since the scope of the invention is best defined by the appended claims. Broadly, an embodiment of the present invention provides a method of diagnosing the presence of cancer in a subject without the need for a biopsy. The method comprises obtaining a bio-sample from the subject and then extracting lipids from the bio-sample so as to form a serum of extracted lipids. Then the method includes combining a plurality of profiling substances to the serum of extracted lipids so as to form a profiling mixture. From the profiling mixture, the method identifies the amount and weight of a panel of biomarkers, wherein the panel of biomarkers comprise ePC 38:5, PC 40:3, and PC 42:4. Then said panel of biomarkers may be compared to a prediction ratio of the panel of biomarkers, whereby the comparison to the prediction ratio predicts the presence or absence of cancer in the subject. A biomarker generally refers to a measurable indicator of some biological state or condition; specifically, a biomarker indicates a change in expression or state of a protein that correlates with the risk or progression of a disease, or with the susceptibility of the disease to a given treatment. The present invention illustrates a panel of biomarkers embodied in a method for use in accurately predicting normal versus abnormal prostate cancer (PCa) in human subjects. The panel of biomarkers and related methods may involve the identification of sensitive and specific serum phospholipids, namely lipid species ePC 38:5, PC 40:3, and PC 42:4, forming a panel of specific biomarkers available to stratify cancer versus normal individuals especially without a need of biopsy. The sensitive or sensitivity refers to the proportion of individuals in a population that will be correctly identified when tested for a particular disease. The specific or specificity of a test refers to the probability that a person who does not have the particular disease and is tested for the disease will be correctly identified as not having the disease. The method of using the present invention may include the following. First, a healthcare worker may obtain a predetermined bio-sample, such as blood and/or serum, from a subject. Then the lipid components found within the predetermined bio-serum may be statistically analyzed by any suitable sensitivity and specificity techniques for detecting prostate or disease abnormality. The statistical analysis may include but not be limited to cross-classifications and logistic regression modeling to screen the data for potential predictor candidates, false discovery rate adjustment for a large number of multiple comparisons, receiver operating characteristic curves for final models and cut-points determinations and assessments, and the like. Then the method may include lipid extraction from the predetermined bio-sample by any suitable method, such as by using chloroform and methanol, to produce a serum of extracted lipids. The method may further include lipid profiling on the extracted lipids. Lipid profiling may include forming a profiling mixture. The lipid profiling may include mass spectrometry, such as electro-spray ionization mass spectrometry. The profiling mixture may include a plurality of profiling batches of different components and various ratios thereof that form the profile mixture. By way of example, but not to be limited to, one profiling batch of the profiling mixture may be formed from an aliquot of 3 Ã,Â μl of the serum of extracted lipids combined with a plurality of profiling substances. In certain embodiments, the plurality of profiling substances may include 0.60 nmol di12:0-PC, 0.60 nmol di24:1-PC, 0.60 nmol 13:0-lysoPC, 0.60 nmol 19:0-lysoPC, 0.30 nmol di12:0-PE, 0.30 nmol di23:0-PE, 0.30 nmol 14:0-lysoPE, 0.30 nmol 18:0-lysoPE, 0.30 nmol 14:0-lysoPG, 0.30 nmol 18:0-lysoPG, 0.30 nmol di14:0-PA, 0.30 nmol di20:0 (phytanoyl)-PA, 0.20 nmol di14:0-PS, 0.20 nmol di20:0(phytanoyl)-PS, 0.23 nmol 16:0-18:0-PI, 0.16 nmol di18:0-PI, 2.5 nmol C13:0 CE, and 2.5 nmol C23:0 CE. In certain embodiments, the profiling mixture may be combined with solvents, such that the ratio of chloroform/methanol/300 mM ammonium acetate in water was 300/665/35, and the final volume was 1.2 ml. Then the profiling mixture may be centrifuged for a suitable amount of time and at a suitable rate, typically 15 min at low speed, to pellet particulates. In certain embodiments, the unfractionated lipid extracts may be introduced to the profiling mixture by continuous infusion, by using an autosampler, or the like. In certain embodiments, the amount and type of lipids in the profiling mixture can be identified by other suitable techniques and processes. The resulting profiling mixture may provide a consistency and robustness, facilitating identification of a plurality of specific serum phospholipids, wherein the plurality of specific serum phospholipids or panel of specific biomarkers fit certain criteria of a phase one/two biomarkers for PCa, especially if they can be combined with PSA and DRE screening for the diagnosis of PCa. For example, if the ePC 38:5 present in the profiling mixture of the predetermined bio-sample is greater than 0.015 nmoles, the PC 40:3 is less than 0.001 nmoles and the PC 42:4 is less than 0.0001 nmoles, then the predictability of the absence of PCa is 94%. Conversely, if the ePC 38:5 is less than 0.015 nmoles, the PC 40:3 is greater than 0.001 nmoles, and the PC 42:4 is greater than 0.0001 nmoles, then the predictability of the presence of PCa is very high. Therefore, a combination of ePC 38:5, PC 40:3 and PC 42:4 can be known as prediction ratio that may be used as a surrogate for the presence prostate cancer (PCa). The prediction ratio may be used to create tools to detect cancers and any disease states relevant to the lipid analyses. It should be understood, of course, that the foregoing relates to exemplary embodiments of the invention and that modifications may be made without departing from the spirit and scope of the invention as set forth in the following claims.","lang":"en"},"publication_type":"PATENT_APPLICATION"}
{"lens_id":"036-622-702-426-94X","jurisdiction":"WO","doc_number":"2015105917","kind":"A1","date_published":"2015-07-16","doc_key":"WO_2015105917_A1_20150716","docdb_id":442422151,"lang":"en","biblio":{"publication_reference":{"jurisdiction":"WO","doc_number":"2015105917","kind":"A1","date":"2015-07-16"},"application_reference":{"jurisdiction":"US","doc_number":"2015010531","kind":"W","date":"2015-01-07"},"priority_claims":{"claims":[{"jurisdiction":"US","doc_number":"201461924595","kind":"P","date":"2014-01-07","sequence":1},{"jurisdiction":"US","doc_number":"201514591788","kind":"A","date":"2015-01-07","sequence":2}],"earliest_claim":{"date":"2014-01-07"}},"invention_title":[{"text":"BIOMARKER FOR HUMAN PROSTATE CANCER","lang":"en"},{"text":"BIOMARQUEUR POUR CANCER DE LA PROSTATE HUMAIN","lang":"fr"}],"parties":{"applicants":[{"residence":"US","extracted_name":{"value":"KELAVKAR UDDHAV"}}],"inventors":[{"residence":"US","sequence":1,"extracted_name":{"value":"KELAVKAR UDDHAV"}}],"agents":[{"extracted_name":{"value":"FINNEGAN, Daniel, Saul"},"extracted_address":"211 Church Street, S.E., Leesburg, VA 20175,  20175","extracted_country":"US"}]},"classifications_ipcr":{"classifications":[{"symbol":"C40B30/10"},{"symbol":"C12M1/34"},{"symbol":"C12Q1/60"},{"symbol":"G01N33/53"}]},"classifications_cpc":{"classifications":[{"symbol":"G01N33/92"},{"symbol":"G01N33/92"},{"symbol":"G01N33/57434"},{"symbol":"G01N33/57434"},{"symbol":"G01N2405/04"},{"symbol":"G01N2405/04"},{"symbol":"G01N2560/00"},{"symbol":"G01N2560/00"},{"symbol":"G16H50/30"},{"symbol":"G16H50/30"}]},"references_cited":{"citations":[{"sequence":1,"patcit":{"document_id":{"jurisdiction":"EP","doc_number":"2619586","kind":"B1","date":"2014-10-15"},"lens_id":"198-574-408-904-470"},"cited_phase":"ISR"},{"sequence":2,"nplcit":{"text":"WELTI ET AL.: \"Profiling Membrane Lipids in Plant Stress Responses. Role of phospholipase D alpha in freezing-induced lipid changes in Arabidopsis.\", THE JOURNAL OF BIOLOGICAL CHEMISTRY, vol. 277, 30 August 2002 (2002-08-30), pages 31994 - 32002","lens_id":"107-577-720-399-862","external_ids":["12077151","10.1074/jbc.m205375200"]},"cited_phase":"ISR"},{"sequence":3,"nplcit":{"text":"HAN ET AL.: \"Microfluidics-based electrospray ionization enhances the intrasource separation of lipid classes and extends identification of individual molecular species through multi-dimensional mass spectrometry: development of an automated high-throughput platform for shotgun lipidomics\", RAPID COMMUN MASS SPECTROM., vol. 22, no. 13, July 2008 (2008-07-01), pages 2115 - 2124","lens_id":"105-263-494-960-548","external_ids":["10.1002/rcm.3595","18523984","pmc2927983"]},"cited_phase":"ISR"},{"sequence":4,"nplcit":{"text":"WELTI ET AL.: \"Lipid species profiling: a high-throughput approach to identify lipid compositional changes and determine the function of genes involved in lipid metabolism and signaling.\", CURR OPIN PLANT BIOL., vol. 7, no. 3., June 2004 (2004-06-01), pages 337 - 344","lens_id":"102-928-771-964-331","external_ids":["10.1016/j.pbi.2004.03.011","15134756"]},"cited_phase":"ISR"},{"sequence":5,"nplcit":{"text":"PATEL ET AL.: \"A Novel Three Serum Phospholipid Panel Differentiates Normal Individuals from Those with Prostate Cancer\", PLOS ONE, vol. 9, no. 3, 6 March 2014 (2014-03-06), pages E88841","lens_id":"059-059-858-962-700","external_ids":["pmc3945968","24603597","10.1371/journal.pone.0088841"]},"cited_phase":"ISR"}],"npl_resolved_count":4,"npl_count":4,"patent_count":1},"cited_by":{}},"families":{"simple_family":{"members":[{"document_id":{"jurisdiction":"US","doc_number":"9903878","kind":"B2","date":"2018-02-27"},"lens_id":"113-340-374-165-677"},{"document_id":{"jurisdiction":"US","doc_number":"20150192597","kind":"A1","date":"2015-07-09"},"lens_id":"059-321-469-789-343"},{"document_id":{"jurisdiction":"WO","doc_number":"2015105917","kind":"A1","date":"2015-07-16"},"lens_id":"036-622-702-426-94X"}],"size":3},"extended_family":{"members":[{"document_id":{"jurisdiction":"US","doc_number":"9903878","kind":"B2","date":"2018-02-27"},"lens_id":"113-340-374-165-677"},{"document_id":{"jurisdiction":"US","doc_number":"20150192597","kind":"A1","date":"2015-07-09"},"lens_id":"059-321-469-789-343"},{"document_id":{"jurisdiction":"WO","doc_number":"2015105917","kind":"A1","date":"2015-07-16"},"lens_id":"036-622-702-426-94X"}],"size":3}},"legal_status":{"calculation_log":["Application Filing Date: 2015-01-07","Earliest Filing Date: 2015-01-07 priority to US201514591788A"],"patent_status":"PENDING"},"abstract":[{"text":"A method of diagnosing the presence of cancer in a subject without the need for a biopsy is provided. The method comprises obtaining a bio-sample from the subject and then extracting lipids from the bio-sample so as to form a serum of extracted lipids. Then the method includes combining a plurality of profiling substances to the serum of extracted lipids so as to form a profiling mixture. From the profiling mixture, the method identifies the amount and weight of a panel of biomarkers, wherein the panel of biomarkers comprise ePC 38:5, PC 40:3, and PC 42:4. Then said panel of biomarkers may be compared to a prediction ratio of the panel of biomarkers, whereby the comparison to the prediction ratio predicts the presence or absence of cancer in the subject.","lang":"en"},{"text":"Cette invention concerne une méthode diagnostique de dépistage du cancer chez un sujet, ladite méthode ne nécessitant pas de biopsie. La méthode selon l'invention comprend l'obtention d'un échantillon biologique fourni par le sujet, puis l'extraction des lipides de l'échantillon biologique de façon à former un sérum avec lesdits lipides extraits. Une pluralité de substances de profilage pour ledit sérum de lipides extraits sont ensuite combinées de façon à obtenir un mélange de profilage, à partir duquel la méthode identifie la quantité et le poids d'un panel de biomarqueurs comprenant ePC 38:5, PC 40:3, et PC 42:4. Ledit panel de biomarqueurs peut ensuite être comparé à un taux de prédiction de ce panel de biomarqueurs, la comparaison au taux de prédiction permettant de prédire la présence ou l'absence de cancer chez le sujet.","lang":"fr"}],"claims":[{"claims":[{"claim_text":["What is claimed is:","1 . A method of diagnosing the presence of cancer in a subject without the need for a biopsy, comprising:","obtaining a bio-sample from the subject;","extracting lipids from the bio-sample so as to form a serum of extracted lipids;","combining a plurality of profiling substances to the serum of extracted lipids so as to form a profiling mixture; and","identifying the amount and weight of a panel of biomarkers in the profiling mixture, wherein the panel of biomarkers comprise ePC 38:5, PC 40:3, and PC 42:4.","The method of claim 1 , further including comparing the amount and weight of the panel of biomarkers to a prediction ratio,","whereby the comparison to the prediction ratio predicts the presence or absence of cancer in the subject.","The method of claim 1 , wherein the cancer is prostate cancer.","The method of claim 1 , wherein the plurality of profiling substances include at least one of di12:0-PC, di24:1 -PC, 13:0-lysoPC, 1 9:0-lysoPC, di12:0-PE, di23:0-PE, 14:0-lysoPE, 18:0-lysoPE, 14:0-lysoPG, 18:0- lysoPG, di14:0-PA, di20:0 (phytanoyl)-PA, di14:0-PS, di20:0(phytanoyl)- PS, 16:0-1 8:0-PI, di18:0-PI, C13:0 CE, and C23:0 CE. The method of claim 1 , wherein the bio-sample is blood, serum, or plasma.","The method of claim 1 , wherein identifying the amount and weight of a panel of biomarkers involves using mass spectrometry.","The method of claim 1 , wherein the profiling mixture is centrifuged for a suitable amount of time and at a suitable rate to pellet particulates.","The method of claim 7, further including introducing unfractionated lipid extracts to the profiling mixture.","A method of diagnosing the presence of cancer in a subject's bio- sample without the need for a biopsy, comprising:","combining a plurality of profiling substances to the bio-sample so as to form a profiling mixture; and","identifying the amount and weight of a panel of biomarkers in the profiling mixture, wherein the panel of biomarkers comprise ePC 38:5, PC 40:3, and PC 42:4.","10. A method of diagnosing the presence of prostate cancer in a subject without the need for a biopsy, comprising:","obtaining a bio-sample from the subject, wherein the bio-sample is blood, serum, or plasma; extracting lipids from the bio-sample so as to form a serum of extracted lipids;","combining a plurality of profiling substances to the serum of extracted lipids so as to form a profiling mixture, wherein the plurality of profiling substances include at least one of di1 2:0-PC, di24:1 -PC, 13:0- lysoPC, 1 9:0-lysoPC, di12:0-PE, di23:0-PE, 14:0-lysoPE, 18:0-lysoPE, 14:0-lysoPG, 18:0-lysoPG, di14:0-PA, di20:0 (phytanoyl)-PA, di14:0-PS, di20:0(phytanoyl)-PS, 16:0-18:0-PI, di18:0-PI, C13:0 CE, and C23:0 CE; and wherein the profiling mixture is centrifuged for a suitable amount of time and at a suitable rate to pellet particulates;","introducing unfractionated lipid extracts to the profiling mixture; using mass spectrometry to identify the amount and weight of a panel of biomarkers in the profiling mixture, wherein the panel of biomarkers comprise ePC 38:5, PC 40:3, and PC 42:4; and","comparing the amount and weight of the panel of biomarkers to a prediction ratio,","whereby the comparison to the prediction ratio predicts the presence or absence of cancer in the subject."]}],"lang":"en"}],"description":{"text":"BIOMARKER FOR HUMAN PROSTATE CANCER CROSS-REFERENCE TO RELATED APPLICATION This application claims the benefit of priority of U.S. provisional application number 61924595, filed 07-JAN-2014, the contents of which are herein incorporated by reference. BACKGROUND OF THE INVENTION The present invention relates to biomarkers associated with a cancer and, more particularly, to a panel of biomarkers and a method of using them to evaluate and identify early prostate cancer diagnosis and prognosis without the need for a biopsy. Currently, there are no reliable biomarkers available to stratify abnormal or cancer versus normal individuals that do not involve a biopsy and histology exam by a specialist. Biopsies require the medical removal of tissue from a living subject in order to make the determination of the presence or extent of a disease; as a result, such procedures can be traumatic and fraught with many of the risks of having surgery. Other commonly used methods of evaluating prostate cancer involve the analysis of prostate specific antigen (PSA) and the use of digital rectal examination (DRE) screenings; however, such methods provide abstruse results leading to both under and over treatment of prostate cancer subjects. As can be seen, there is an urgent need for a panel of biomarkers and a method of using them to evaluate and identify early cancer diagnosis and prognosis without the need for a biopsy. SUMMARY OF THE INVENTION In one aspect of the present invention, a method of diagnosing the presence of cancer in a subject without the need for a biopsy comprises: obtaining a bio-sample from the subject; extracting lipids from the bio-sample so as to form a serum of extracted lipids; combining a plurality of profiling substances to the serum of extracted lipids so as to form a profiling mixture; and identifying the amount and weight of a panel of biomarkers in the profiling mixture, wherein the panel of biomarkers comprise ePC 38:5, PC 40:3, and PC 42:4. In another aspect of the present invention, a method of diagnosing the presence of prostate cancer in a subject without the need for a biopsy comprises: obtaining a bio-sample from the subject, wherein the bio-sample is blood, serum, or plasma; extracting lipids from the bio-sample so as to form a serum of extracted lipids; combining a plurality of profiling substances to the serum of extracted lipids so as to form a profiling mixture, wherein the plurality of profiling substances include di12:0-PC, di24:1 -PC, 13:0-lysoPC, 19:0- lysoPC, di1 2:0-PE, di23:0-PE, 14:0-lysoPE, 18:0-lysoPE, 14:0-lysoPG, 18:0- lysoPG, di14:0-PA, di20:0 (phytanoyl)-PA, di14:0-PS, di20:0(phytanoyl)-PS, 16:0-18:0-PI, di1 8:0-PI, C13:0 CE, and C23:0 CE; and wherein the profiling mixture is centrifuged for a suitable amount of time and at a suitable rate to pellet particulates; introducing unfractionated lipid extracts to the profiling mixture; using mass spectrometry to identify the amount and weight of a panel of biomarkers in the profiling mixture, wherein the panel of biomarkers comprise ePC 38:5, PC 40:3, and PC 42:4; and comparing the amount and weight of the panel of biomarkers to a prediction ratio, whereby the comparison to the prediction ratio predicts the presence or absence of cancer in the subject. In yet another aspect of the present invention, a method of diagnosing the presence of cancer in a subject's bio-sample without the need for a biopsy, comprises: combining a plurality of profiling substances to the bio-sample so as to form a profiling mixture; and identifying the amount and weight of a panel of biomarkers in the profiling mixture, wherein the panel of biomarkers comprise ePC 38:5, PC 40:3, and PC 42:4. These and other features, aspects and advantages of the present invention will become better understood with reference to the following drawings, description and claims. DETAILED DESCRIPTION OF THE INVENTION The following detailed description is of the best currently contemplated modes of carrying out exemplary embodiments of the invention. The description is not to be taken in a limiting sense, but is made merely for the purpose of illustrating the general principles of the invention, since the scope of the invention is best defined by the appended claims. Broadly, an embodiment of the present invention provides a method of diagnosing the presence of cancer in a subject without the need for a biopsy. The method comprises obtaining a bio-sample from the subject and then extracting lipids from the bio-sample so as to form a serum of extracted lipids. Then the method includes combining a plurality of profiling substances to the serum of extracted lipids so as to form a profiling mixture. From the profiling mixture, the method identifies the amount and weight of a panel of biomarkers, wherein the panel of biomarkers comprise ePC 38:5, PC 40:3, and PC 42:4. Then said panel of biomarkers may be compared to a prediction ratio of the panel of biomarkers, whereby the comparison to the prediction ratio predicts the presence or absence of cancer in the subject. A biomarker generally refers to a measurable indicator of some biological state or condition; specifically, a biomarker indicates a change in expression or state of a protein that correlates with the risk or progression of a disease, or with the susceptibility of the disease to a given treatment. The present invention illustrates a panel of biomarkers embodied in a method for use in accurately predicting normal versus abnormal prostate cancer (PCa) in human subjects. The panel of biomarkers and related methods may involve the identification of sensitive and specific serum phospholipids, namely lipid species ePC 38:5, PC 40:3, and PC 42:4, forming a panel of specific biomarkers available to stratify cancer versus normal individuals especially without a need of biopsy. The sensitive or sensitivity refers to the proportion of individuals in a population that will be correctly identified when tested for a particular disease. The specific or specificity of a test refers to the probability that a person who does not have the particular disease and is tested for the disease will be correctly identified as not having the disease. The method of using the present invention may include the following. First, a healthcare worker may obtain a predetermined bio-sample, such as blood and/or serum, from a subject. Then the lipid components found within the predetermined bio-serum may be statistically analyzed by any suitable sensitivity and specificity techniques for detecting prostate or disease abnormality. The statistical analysis may include but not be limited to cross- classifications and logistic regression modeling to screen the data for potential predictor candidates, false discovery rate adjustment for a large number of multiple comparisons, receiver operating characteristic curves for final models and cut-points determinations and assessments, and the like. Then the method may include lipid extraction from the predetermined bio-sample by any suitable method, such as by using chloroform and methanol, to produce a serum of extracted lipids. The method may further include lipid profiling on the extracted lipids. Lipid profiling may include forming a profiling mixture. The lipid profiling may include mass spectrometry, such as electro-spray ionization mass spectrometry. The profiling mixture may include a plurality of profiling batches of different components and various ratios thereof that form the profile mixture. By way of example, but not to be limited to, one profiling batch of the profiling mixture may be formed from an aliquot of 3 Α,ΑμΙ of the serum of extracted lipids combined with a plurality of profiling substances. In certain embodiments, the plurality of profiling substances may include 0.60 nmol di12:0-PC, 0.60 nmol di24:1 -PC, 0.60 nmol 1 3:0-lysoPC, 0.60 nmol 1 9:0-lysoPC, 0.30 nmol di12:0- PE, 0.30 nmol di23:0-PE, 0.30 nmol 14:0-lysoPE, 0.30 nmol 18:0-lysoPE, 0.30 nmol 14:0-lysoPG, 0.30 nmol 18:0-lysoPG, 0.30 nmol di14:0-PA, 0.30 nmol di20:0 (phytanoyl)-PA, 0.20 nmol di14:0-PS, 0.20 nmol di20:0(phytanoyl)-PS, 0.23 nmol 16:0-18:0-PI, 0.1 6 nmol di18:0-PI, 2.5 nmol C13:0 CE, and 2.5 nmol C23:0 CE. In certain embodiments, the profiling mixture may be combined with solvents, such that the ratio of chloroform/methanol/300 mM ammonium acetate in water was 300/665/35, and the final volume was 1 .2 ml. Then the profiling mixture may be centrifuged for a suitable amount of time and at a suitable rate, typically 15 min at low speed, to pellet particulates. In certain embodiments, the unfractionated lipid extracts may be introduced to the profiling mixture by continuous infusion, by using an autosampler, or the like. In certain embodiments, the amount and type of lipids in the profiling mixture can be identified by other suitable techniques and processes. The resulting profiling mixture may provide a consistency and robustness, facilitating identification of a plurality of specific serum phospholipids, wherein the plurality of specific serum phospholipids or panel of specific biomarkers fit certain criteria of a phase one/two biomarkers for PCa, especially if they can be combined with PSA and DRE screening for the diagnosis of PCa. For example, if the ePC 38:5 present in the profiling mixture of the predetermined bio-sample is greater than 0.015 nmoles, the PC 40:3 is less than 0.001 nmoles and the PC 42:4 is less than 0.0001 nmoles, then the predictability of the absence of PCa is 94%. Conversely, if the ePC 38:5 is less than 0.01 5 nmoles, the PC 40:3 is greater than 0.001 nmoles, and the PC 42:4 is greater than 0.0001 nmoles, then the predictability of the presence of PCa is very high. Therefore, a combination of ePC 38:5, PC 40:3 and PC 42:4 can be known as prediction ratio that may be used as a surrogate for the presence prostate cancer (PCa). The prediction ratio may be used to create tools to detect cancers and any disease states relevant to the lipid analyses. It should be understood, of course, that the foregoing relates to exemplary embodiments of the invention and that modifications may be made without departing from the spirit and scope of the invention as set forth in the following claims.","lang":"en"},"publication_type":"PATENT_APPLICATION"}
